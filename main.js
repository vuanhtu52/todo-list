(()=>{"use strict";var e={177:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),d=t.n(o),a=t(645),r=t.n(a)()(d());r.push([e.id,".add-project-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 300px;\n    position: relative;\n    top: -30%;\n}\n\n.add-project-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.add-project-dialog > form {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.add-project-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n \n.add-project-dialog form-field {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n\n.add-project-dialog input {\n    height: 30px;\n    width: max(100%, 200px);\n    border-radius: 5px;\n    border: 1px solid #ddd;\n}\n\n.add-project-dialog input:focus {\n    outline: none;\n    border: 1px solid grey;\n}\n\n.add-project-dialog .error-message {\n    font-size: 14px;\n    color: red;\n    height: 14px;\n}\n\n.add-project-dialog .buttons {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.add-project-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.add-project-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.add-project-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.add-project-dialog .add-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.add-project-dialog .add-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.add-project-dialog .add-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.add-project-dialog .add-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n} \n\n\n\n","",{version:3,sources:["webpack://./src/modules/components/addProjectDialog/addProjectDialog.css"],names:[],mappings:"AAAA;IACI,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;IACZ,kBAAkB;IAClB,SAAS;AACb;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;;AAGA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;AACZ;;;AAGA;IACI,YAAY;IACZ,uBAAuB;IACvB,kBAAkB;IAClB,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,eAAe;IACf,UAAU;IACV,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,0CAA0C;IAC1C,eAAe;AACnB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,yBAAyB;IACzB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,uCAAuC;AAC3C",sourcesContent:[".add-project-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 300px;\n    position: relative;\n    top: -30%;\n}\n\n.add-project-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.add-project-dialog > form {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.add-project-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n \n.add-project-dialog form-field {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n\n.add-project-dialog input {\n    height: 30px;\n    width: max(100%, 200px);\n    border-radius: 5px;\n    border: 1px solid #ddd;\n}\n\n.add-project-dialog input:focus {\n    outline: none;\n    border: 1px solid grey;\n}\n\n.add-project-dialog .error-message {\n    font-size: 14px;\n    color: red;\n    height: 14px;\n}\n\n.add-project-dialog .buttons {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.add-project-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.add-project-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.add-project-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.add-project-dialog .add-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.add-project-dialog .add-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.add-project-dialog .add-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.add-project-dialog .add-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n} \n\n\n\n"],sourceRoot:""}]);const i=r},620:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),d=t.n(o),a=t(645),r=t.n(a)()(d());r.push([e.id,'.add-task-card {\n    width: 100%;\n    min-width: 400px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    border: 1px solid #9ca3af;\n    border-radius: 10px;\n    padding: 10px;\n}\n\n.add-task-card > :first-child {\n    width: 100%;\n    border: none;\n    outline: none;\n    font-weight: 900;\n}\n\n.add-task-card > :first-child[contenteditable]:empty:before {\n    content: "Task name";\n    color: #8e8e8e;\n}\n\n.add-task-card > :nth-child(2) {\n    width: 100%;\n    border: none;\n    outline: none;\n    font-size: 14px;\n    font-weight: 200;\n}\n\n.add-task-card > :nth-child(2)[contenteditable]:empty:before {\n    content: "Description";\n    color: #8e8e8e;\n}\n\n.add-task-card .middle-row {\n    display: flex;\n    gap: 30px;\n}\n\n.add-task-card .middle-row > * {\n    display: flex;\n    gap: 10px;\n    align-items: center;\n    padding-bottom: 5px;\n}\n\n/* Date picker */\n.add-task-card .middle-row input {\n    min-height: 25px;\n}\n\n/* Priority dropdown */\n.add-task-card .middle-row select {\n    min-height: 25px;\n}\n\n.add-task-card .bottom-row {\n    display: flex;\n    justify-content: space-between;\n    border-top: 1px solid #e5e7eb;\n    padding-top: 10px;\n}\n\n/* Project dropdown */\n.add-task-card .bottom-row select {\n    height: 30px;\n    text-align: center;\n    border: none;\n    outline: none;\n    border-radius: 5px;\n}\n\n.add-task-card .bottom-row select:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n/* The buttons at the end of card */\n.add-task-card .bottom-row > :last-child {\n    display: flex;\n    gap: 10px;\n}\n\n/* Cancel button */\n.add-task-card .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.add-task-card .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.add-task-card .cancel-button:active {\n    transform: scale(0.95);\n}\n\n/* Add button */\n.add-task-card .add-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.add-task-card .add-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.add-task-card .add-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.add-task-card .add-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n}',"",{version:3,sources:["webpack://./src/modules/components/addTaskCard/addTaskCard.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,yBAAyB;IACzB,mBAAmB;IACnB,aAAa;AACjB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,gBAAgB;AACpB;;AAEA;IACI,oBAAoB;IACpB,cAAc;AAClB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,sBAAsB;IACtB,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,aAAa;IACb,SAAS;IACT,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA,gBAAgB;AAChB;IACI,gBAAgB;AACpB;;AAEA,sBAAsB;AACtB;IACI,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,6BAA6B;IAC7B,iBAAiB;AACrB;;AAEA,qBAAqB;AACrB;IACI,YAAY;IACZ,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA,mCAAmC;AACnC;IACI,aAAa;IACb,SAAS;AACb;;AAEA,kBAAkB;AAClB;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,0CAA0C;IAC1C,eAAe;AACnB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA,eAAe;AACf;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,yBAAyB;IACzB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,uCAAuC;AAC3C",sourcesContent:['.add-task-card {\n    width: 100%;\n    min-width: 400px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    border: 1px solid #9ca3af;\n    border-radius: 10px;\n    padding: 10px;\n}\n\n.add-task-card > :first-child {\n    width: 100%;\n    border: none;\n    outline: none;\n    font-weight: 900;\n}\n\n.add-task-card > :first-child[contenteditable]:empty:before {\n    content: "Task name";\n    color: #8e8e8e;\n}\n\n.add-task-card > :nth-child(2) {\n    width: 100%;\n    border: none;\n    outline: none;\n    font-size: 14px;\n    font-weight: 200;\n}\n\n.add-task-card > :nth-child(2)[contenteditable]:empty:before {\n    content: "Description";\n    color: #8e8e8e;\n}\n\n.add-task-card .middle-row {\n    display: flex;\n    gap: 30px;\n}\n\n.add-task-card .middle-row > * {\n    display: flex;\n    gap: 10px;\n    align-items: center;\n    padding-bottom: 5px;\n}\n\n/* Date picker */\n.add-task-card .middle-row input {\n    min-height: 25px;\n}\n\n/* Priority dropdown */\n.add-task-card .middle-row select {\n    min-height: 25px;\n}\n\n.add-task-card .bottom-row {\n    display: flex;\n    justify-content: space-between;\n    border-top: 1px solid #e5e7eb;\n    padding-top: 10px;\n}\n\n/* Project dropdown */\n.add-task-card .bottom-row select {\n    height: 30px;\n    text-align: center;\n    border: none;\n    outline: none;\n    border-radius: 5px;\n}\n\n.add-task-card .bottom-row select:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n/* The buttons at the end of card */\n.add-task-card .bottom-row > :last-child {\n    display: flex;\n    gap: 10px;\n}\n\n/* Cancel button */\n.add-task-card .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.add-task-card .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.add-task-card .cancel-button:active {\n    transform: scale(0.95);\n}\n\n/* Add button */\n.add-task-card .add-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.add-task-card .add-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.add-task-card .add-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.add-task-card .add-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n}'],sourceRoot:""}]);const i=r},914:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),d=t.n(o),a=t(645),r=t.n(a)()(d());r.push([e.id,".delete-project-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 400px;\n    position: relative;\n    top: -30%;\n}\n\n.delete-project-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.delete-project-dialog > div {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.delete-project-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.delete-project-dialog .message span:first-child {\n    font-weight: 900;\n}\n\n.delete-project-dialog .bottom-row {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.delete-project-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.delete-project-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.delete-project-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.delete-project-dialog .delete-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.delete-project-dialog .delete-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.delete-project-dialog .delete-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.delete-project-dialog .delete-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n}\n\n\n\n\n","",{version:3,sources:["webpack://./src/modules/components/deleteProjectDialog/deleteProjectDialog.css"],names:[],mappings:"AAAA;IACI,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;IACZ,kBAAkB;IAClB,SAAS;AACb;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,0CAA0C;IAC1C,eAAe;AACnB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,yBAAyB;IACzB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,uCAAuC;AAC3C",sourcesContent:[".delete-project-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 400px;\n    position: relative;\n    top: -30%;\n}\n\n.delete-project-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.delete-project-dialog > div {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.delete-project-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.delete-project-dialog .message span:first-child {\n    font-weight: 900;\n}\n\n.delete-project-dialog .bottom-row {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.delete-project-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.delete-project-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.delete-project-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.delete-project-dialog .delete-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.delete-project-dialog .delete-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.delete-project-dialog .delete-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.delete-project-dialog .delete-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n}\n\n\n\n\n"],sourceRoot:""}]);const i=r},934:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),d=t.n(o),a=t(645),r=t.n(a)()(d());r.push([e.id,".delete-task-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 400px;\n    position: relative;\n    top: -30%;\n}\n\n.delete-task-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.delete-task-dialog > div {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.delete-task-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.delete-task-dialog .message {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.delete-task-dialog .message span:first-child {\n    font-weight: 900;\n}\n\n.delete-task-dialog .bottom-row {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.delete-task-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.delete-task-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.delete-task-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.delete-task-dialog .delete-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.delete-task-dialog .delete-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.delete-task-dialog .delete-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.delete-task-dialog .delete-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n}\n\n\n\n\n","",{version:3,sources:["webpack://./src/modules/components/deleteTaskDialog/deleteTaskDialog.css"],names:[],mappings:"AAAA;IACI,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;IACZ,kBAAkB;IAClB,SAAS;AACb;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;IACnB,gBAAgB;IAChB,uBAAuB;AAC3B;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,0CAA0C;IAC1C,eAAe;AACnB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,yBAAyB;IACzB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,uCAAuC;AAC3C",sourcesContent:[".delete-task-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 400px;\n    position: relative;\n    top: -30%;\n}\n\n.delete-task-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.delete-task-dialog > div {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.delete-task-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.delete-task-dialog .message {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.delete-task-dialog .message span:first-child {\n    font-weight: 900;\n}\n\n.delete-task-dialog .bottom-row {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.delete-task-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.delete-task-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.delete-task-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.delete-task-dialog .delete-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.delete-task-dialog .delete-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.delete-task-dialog .delete-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.delete-task-dialog .delete-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n}\n\n\n\n\n"],sourceRoot:""}]);const i=r},930:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),d=t.n(o),a=t(645),r=t.n(a)()(d());r.push([e.id,".edit-project-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 300px;\n    position: relative;\n    top: -30%;\n}\n\n.edit-project-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.edit-project-dialog > form {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.edit-project-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n \n.edit-project-dialog form-field {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n\n.edit-project-dialog input {\n    height: 30px;\n    width: max(100%, 200px);\n    border-radius: 5px;\n    border: 1px solid #ddd;\n}\n\n.edit-project-dialog input:focus {\n    outline: none;\n    border: 1px solid grey;\n}\n\n.edit-project-dialog .error-message {\n    font-size: 14px;\n    color: red;\n    height: 14px;\n}\n\n.edit-project-dialog .buttons {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.edit-project-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.edit-project-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.edit-project-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.edit-project-dialog .save-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.edit-project-dialog .save-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.edit-project-dialog .save-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.edit-project-dialog .save-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n} \n\n\n\n","",{version:3,sources:["webpack://./src/modules/components/editProjectDialog/editProjectDialog.css"],names:[],mappings:"AAAA;IACI,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;IACZ,kBAAkB;IAClB,SAAS;AACb;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;;AAGA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;AACZ;;;AAGA;IACI,YAAY;IACZ,uBAAuB;IACvB,kBAAkB;IAClB,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,eAAe;IACf,UAAU;IACV,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,0CAA0C;IAC1C,eAAe;AACnB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,yBAAyB;IACzB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,uCAAuC;AAC3C",sourcesContent:[".edit-project-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 300px;\n    position: relative;\n    top: -30%;\n}\n\n.edit-project-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.edit-project-dialog > form {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.edit-project-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n \n.edit-project-dialog form-field {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n\n.edit-project-dialog input {\n    height: 30px;\n    width: max(100%, 200px);\n    border-radius: 5px;\n    border: 1px solid #ddd;\n}\n\n.edit-project-dialog input:focus {\n    outline: none;\n    border: 1px solid grey;\n}\n\n.edit-project-dialog .error-message {\n    font-size: 14px;\n    color: red;\n    height: 14px;\n}\n\n.edit-project-dialog .buttons {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.edit-project-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.edit-project-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.edit-project-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.edit-project-dialog .save-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.edit-project-dialog .save-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.edit-project-dialog .save-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.edit-project-dialog .save-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n} \n\n\n\n"],sourceRoot:""}]);const i=r},225:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),d=t.n(o),a=t(645),r=t.n(a)()(d());r.push([e.id,'.edit-task-dialog {\n    position: relative;\n    top: -30%;\n    min-width: 500px;\n    max-width: 500px;\n    padding: 10px;\n    border-radius: 10px;\n    border: 1px solid grey;\n}\n\n.edit-task-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.edit-task-dialog > div {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    padding: 10px;\n}\n\n.edit-task-dialog > div > :first-child {\n    width: 100%;\n    border: none;\n    outline: none;\n    font-weight: 900;\n}\n\n.edit-task-dialog > div > :first-child[contenteditable]:empty:before {\n    content: "Task name";\n    color: #8e8e8e;\n}\n\n.edit-task-dialog > div > :nth-child(2) {\n    width: 100%;\n    border: none;\n    outline: none;\n    font-size: 14px;\n    font-weight: 200;\n}\n\n.edit-task-dialog > div > :nth-child(2)[contenteditable]:empty:before {\n    content: "Description";\n    color: #8e8e8e;\n}\n\n.edit-task-dialog > div .middle-row {\n    display: flex;\n    gap: 30px;\n}\n\n.edit-task-dialog > div .middle-row > * {\n    display: flex;\n    gap: 10px;\n    align-items: center;\n    padding-bottom: 5px;\n}\n\n/* Date picker */\n.edit-task-dialog > div .middle-row input {\n    min-height: 25px;\n}\n\n/* Priority dropdown */\n.edit-task-dialog > div .middle-row select {\n    min-height: 25px;\n}\n\n.edit-task-dialog > div .bottom-row {\n    display: flex;\n    justify-content: space-between;\n    border-top: 1px solid #e5e7eb;\n    padding-top: 10px;\n}\n\n/* Project dropdown */\n.edit-task-dialog > div .bottom-row select {\n    height: 30px;\n    text-align: center;\n    border: none;\n    outline: none;\n    border-radius: 5px;\n}\n\n.edit-task-dialog > div .bottom-row select:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n/* The buttons at the end of card */\n.edit-task-dialog > div .bottom-row > :last-child {\n    display: flex;\n    gap: 10px;\n}\n\n/* Cancel button */\n.edit-task-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.edit-task-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.edit-task-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n/* Save button */\n.edit-task-dialog .save-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.edit-task-dialog .save-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.edit-task-dialog .save-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.edit-task-dialog .save-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n}',"",{version:3,sources:["webpack://./src/modules/components/editTaskDialog/editTaskDialog.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,SAAS;IACT,gBAAgB;IAChB,gBAAgB;IAChB,aAAa;IACb,mBAAmB;IACnB,sBAAsB;AAC1B;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,WAAW;IACX,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,aAAa;AACjB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,gBAAgB;AACpB;;AAEA;IACI,oBAAoB;IACpB,cAAc;AAClB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,sBAAsB;IACtB,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,aAAa;IACb,SAAS;IACT,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA,gBAAgB;AAChB;IACI,gBAAgB;AACpB;;AAEA,sBAAsB;AACtB;IACI,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,6BAA6B;IAC7B,iBAAiB;AACrB;;AAEA,qBAAqB;AACrB;IACI,YAAY;IACZ,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA,mCAAmC;AACnC;IACI,aAAa;IACb,SAAS;AACb;;AAEA,kBAAkB;AAClB;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,0CAA0C;IAC1C,eAAe;AACnB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA,gBAAgB;AAChB;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,yBAAyB;IACzB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,uCAAuC;AAC3C",sourcesContent:['.edit-task-dialog {\n    position: relative;\n    top: -30%;\n    min-width: 500px;\n    max-width: 500px;\n    padding: 10px;\n    border-radius: 10px;\n    border: 1px solid grey;\n}\n\n.edit-task-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.edit-task-dialog > div {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    padding: 10px;\n}\n\n.edit-task-dialog > div > :first-child {\n    width: 100%;\n    border: none;\n    outline: none;\n    font-weight: 900;\n}\n\n.edit-task-dialog > div > :first-child[contenteditable]:empty:before {\n    content: "Task name";\n    color: #8e8e8e;\n}\n\n.edit-task-dialog > div > :nth-child(2) {\n    width: 100%;\n    border: none;\n    outline: none;\n    font-size: 14px;\n    font-weight: 200;\n}\n\n.edit-task-dialog > div > :nth-child(2)[contenteditable]:empty:before {\n    content: "Description";\n    color: #8e8e8e;\n}\n\n.edit-task-dialog > div .middle-row {\n    display: flex;\n    gap: 30px;\n}\n\n.edit-task-dialog > div .middle-row > * {\n    display: flex;\n    gap: 10px;\n    align-items: center;\n    padding-bottom: 5px;\n}\n\n/* Date picker */\n.edit-task-dialog > div .middle-row input {\n    min-height: 25px;\n}\n\n/* Priority dropdown */\n.edit-task-dialog > div .middle-row select {\n    min-height: 25px;\n}\n\n.edit-task-dialog > div .bottom-row {\n    display: flex;\n    justify-content: space-between;\n    border-top: 1px solid #e5e7eb;\n    padding-top: 10px;\n}\n\n/* Project dropdown */\n.edit-task-dialog > div .bottom-row select {\n    height: 30px;\n    text-align: center;\n    border: none;\n    outline: none;\n    border-radius: 5px;\n}\n\n.edit-task-dialog > div .bottom-row select:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n/* The buttons at the end of card */\n.edit-task-dialog > div .bottom-row > :last-child {\n    display: flex;\n    gap: 10px;\n}\n\n/* Cancel button */\n.edit-task-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.edit-task-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.edit-task-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n/* Save button */\n.edit-task-dialog .save-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.edit-task-dialog .save-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.edit-task-dialog .save-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.edit-task-dialog .save-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n}'],sourceRoot:""}]);const i=r},718:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),d=t.n(o),a=t(645),r=t.n(a)()(d());r.push([e.id,".inbox-page {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    gap: 50px;\n}\n\n.inbox-content {\n    display: flex;\n    flex-direction: column;\n    gap: 50px;\n    width: 60%;\n    padding: 20px 0;\n}\n\n.inbox-header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.priority-section {\n    width: 100%;\n}\n\n.priority-header {\n    font-weight: 900;\n}\n\n.add-task-button {\n    width: 100%;\n    text-align: left;\n    background: none;\n    border: none;\n    cursor: pointer;\n    color: #78716c;\n    font-size: 14px;\n    display: flex;\n    gap: 10px;\n    align-items: center;\n}\n\n.add-task-button > :first-child {\n    font-size: 25px;\n    display: flex;\n    align-items: center;\n}\n\n.add-task-button > :nth-child(2) {\n    display: flex;\n    align-items: center;\n}\n\n.add-task-button:hover {\n    color: #A16207;\n}\n\n.add-task-button-hidden {\n    display: none;\n}\n","",{version:3,sources:["webpack://./src/modules/components/inboxPage/inboxPage.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,UAAU;IACV,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,WAAW;IACX,gBAAgB;IAChB,gBAAgB;IAChB,YAAY;IACZ,eAAe;IACf,cAAc;IACd,eAAe;IACf,aAAa;IACb,SAAS;IACT,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,aAAa;AACjB",sourcesContent:[".inbox-page {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    gap: 50px;\n}\n\n.inbox-content {\n    display: flex;\n    flex-direction: column;\n    gap: 50px;\n    width: 60%;\n    padding: 20px 0;\n}\n\n.inbox-header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.priority-section {\n    width: 100%;\n}\n\n.priority-header {\n    font-weight: 900;\n}\n\n.add-task-button {\n    width: 100%;\n    text-align: left;\n    background: none;\n    border: none;\n    cursor: pointer;\n    color: #78716c;\n    font-size: 14px;\n    display: flex;\n    gap: 10px;\n    align-items: center;\n}\n\n.add-task-button > :first-child {\n    font-size: 25px;\n    display: flex;\n    align-items: center;\n}\n\n.add-task-button > :nth-child(2) {\n    display: flex;\n    align-items: center;\n}\n\n.add-task-button:hover {\n    color: #A16207;\n}\n\n.add-task-button-hidden {\n    display: none;\n}\n"],sourceRoot:""}]);const i=r},404:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),d=t.n(o),a=t(645),r=t.n(a)()(d());r.push([e.id,".nav-bar {\n    padding: 20px;\n    background-color: #A16207;\n    color: #e7e5e4;\n    grid-column: 1 / 3;\n}\n\n.logo {\n    width: max-content;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    cursor: pointer;\n}\n\n.logo > img {\n    width: 50px;\n}\n\n.logo > div {\n    font-size: 40px;\n    font-weight: 900;\n}\n\n","",{version:3,sources:["webpack://./src/modules/components/navBar/navBar.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,yBAAyB;IACzB,cAAc;IACd,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,eAAe;AACnB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB",sourcesContent:[".nav-bar {\n    padding: 20px;\n    background-color: #A16207;\n    color: #e7e5e4;\n    grid-column: 1 / 3;\n}\n\n.logo {\n    width: max-content;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    cursor: pointer;\n}\n\n.logo > img {\n    width: 50px;\n}\n\n.logo > div {\n    font-size: 40px;\n    font-weight: 900;\n}\n\n"],sourceRoot:""}]);const i=r},386:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),d=t.n(o),a=t(645),r=t.n(a)()(d());r.push([e.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]);const i=r},332:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),d=t.n(o),a=t(645),r=t.n(a)()(d());r.push([e.id,".side-bar {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    background-color: rgba(209, 213, 219, 0.2);\n    padding: 30px 20px;\n}\n\n.default-items {\n    display: flex;\n    flex-direction: column;\n}\n\n.projects {\n    display: flex;\n    flex-direction: column;\n}\n\n.projects-header {\n    display: flex;  \n    justify-content: space-between; \n    cursor: pointer;\n    padding: 5px 5px 5px 0;\n}\n\n.projects-header:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.projects-header > div {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.add-project-button {\n    background: none;\n    border: none;\n    font-size: 20px;\n    cursor: pointer;\n    border-radius: 2px;\n}\n\n.add-project-button:hover {\n    background-color: white;\n}\n\n","",{version:3,sources:["webpack://./src/modules/components/sideBar/sideBar.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,0CAA0C;IAC1C,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,eAAe;IACf,sBAAsB;AAC1B;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,YAAY;IACZ,eAAe;IACf,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,uBAAuB;AAC3B",sourcesContent:[".side-bar {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    background-color: rgba(209, 213, 219, 0.2);\n    padding: 30px 20px;\n}\n\n.default-items {\n    display: flex;\n    flex-direction: column;\n}\n\n.projects {\n    display: flex;\n    flex-direction: column;\n}\n\n.projects-header {\n    display: flex;  \n    justify-content: space-between; \n    cursor: pointer;\n    padding: 5px 5px 5px 0;\n}\n\n.projects-header:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.projects-header > div {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.add-project-button {\n    background: none;\n    border: none;\n    font-size: 20px;\n    cursor: pointer;\n    border-radius: 2px;\n}\n\n.add-project-button:hover {\n    background-color: white;\n}\n\n"],sourceRoot:""}]);const i=r},540:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),d=t.n(o),a=t(645),r=t.n(a)()(d());r.push([e.id,".sidebar-item {\n    display: flex;\n    align-items: center;\n    padding: 5px;\n    cursor: pointer;\n    border-radius: 5px;\n}\n\n.sidebar-item:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.sidebar-item-active {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.sidebar-item > .item-content > img {\n    width: 25px;\n}\n\n.sidebar-item > .item-content {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    width: 100%;\n}\n\n.sidebar-item > .item-buttons {\n    display: flex;\n    gap: 5px;\n    visibility: hidden;\n}\n\n.sidebar-item:hover .item-buttons {\n    visibility: visible;\n}\n\n.sidebar-item > .item-buttons > button {\n    height: 20px;\n    width: 20px;\n    background-color: transparent;\n    padding: 0;\n    border: none;\n    cursor: pointer;\n    border-radius: 2px;\n}\n\n.sidebar-item > .item-buttons > button:hover {\n    background-color: white;\n}\n\n.sidebar-item > .item-buttons > button > img {\n    width: 15px;\n    height: 15px;\n}","",{version:3,sources:["webpack://./src/modules/components/sideBarItem/sideBarItem.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;IACnB,YAAY;IACZ,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,WAAW;AACf;;AAEA;IACI,aAAa;IACb,QAAQ;IACR,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,6BAA6B;IAC7B,UAAU;IACV,YAAY;IACZ,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,WAAW;IACX,YAAY;AAChB",sourcesContent:[".sidebar-item {\n    display: flex;\n    align-items: center;\n    padding: 5px;\n    cursor: pointer;\n    border-radius: 5px;\n}\n\n.sidebar-item:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.sidebar-item-active {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.sidebar-item > .item-content > img {\n    width: 25px;\n}\n\n.sidebar-item > .item-content {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    width: 100%;\n}\n\n.sidebar-item > .item-buttons {\n    display: flex;\n    gap: 5px;\n    visibility: hidden;\n}\n\n.sidebar-item:hover .item-buttons {\n    visibility: visible;\n}\n\n.sidebar-item > .item-buttons > button {\n    height: 20px;\n    width: 20px;\n    background-color: transparent;\n    padding: 0;\n    border: none;\n    cursor: pointer;\n    border-radius: 2px;\n}\n\n.sidebar-item > .item-buttons > button:hover {\n    background-color: white;\n}\n\n.sidebar-item > .item-buttons > button > img {\n    width: 15px;\n    height: 15px;\n}"],sourceRoot:""}]);const i=r},258:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),d=t.n(o),a=t(645),r=t.n(a)()(d());r.push([e.id,".task-card {\n    display: grid;\n    grid-template-columns: max-content minmax(400px, 1fr) max-content;\n    grid-template-rows: max-content;\n    gap: 10px;\n    border-bottom: 0.5px solid #ddd;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    cursor: pointer;\n}\n\n.task-card .check-button {\n    aspect-ratio: 1 / 1;\n    width: 10px;\n    border-radius: 50%;\n    cursor: pointer;\n    border: 2px solid #A16207;\n    background-color: rgba(161, 98, 7, 0.1);\n}\n\n.task-card .check-button:hover {\n    background-color: rgba(161, 98, 7, 0.5);\n}\n\n.task-card .check-button:active {\n    transform: scale(1.2);\n}\n\n.task-card .middle-column {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n/* Name field */\n.task-card .middle-column > :first-child {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n/* Description field */\n.task-card .middle-column > :nth-child(2) {\n    color: #666666;\n    font-size: 14px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.task-card .due-date {\n    display: flex;\n    gap: 5px;\n    color: #666666;\n    font-size: 14px;\n}\n\n.task-card .due-date > :first-child {\n    width: 15px;\n}\n\n.task-card .delete-button {\n    height: 30px;\n    width: 30px;\n    background-color: transparent;\n    padding: 0;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    visibility: hidden;\n}\n\n.task-card .delete-button:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.task-card:hover .delete-button {\n    visibility: visible;\n}\n\n.task-card .delete-button > img {\n    width: 20px;\n    height: 20px;\n}\n\n","",{version:3,sources:["webpack://./src/modules/components/taskCard/taskCard.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,iEAAiE;IACjE,+BAA+B;IAC/B,SAAS;IACT,+BAA+B;IAC/B,iBAAiB;IACjB,oBAAoB;IACpB,eAAe;AACnB;;AAEA;IACI,mBAAmB;IACnB,WAAW;IACX,kBAAkB;IAClB,eAAe;IACf,yBAAyB;IACzB,uCAAuC;AAC3C;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA,eAAe;AACf;IACI,mBAAmB;IACnB,gBAAgB;IAChB,uBAAuB;AAC3B;;AAEA,sBAAsB;AACtB;IACI,cAAc;IACd,eAAe;IACf,mBAAmB;IACnB,gBAAgB;IAChB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,QAAQ;IACR,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,6BAA6B;IAC7B,UAAU;IACV,YAAY;IACZ,kBAAkB;IAClB,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB",sourcesContent:[".task-card {\n    display: grid;\n    grid-template-columns: max-content minmax(400px, 1fr) max-content;\n    grid-template-rows: max-content;\n    gap: 10px;\n    border-bottom: 0.5px solid #ddd;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    cursor: pointer;\n}\n\n.task-card .check-button {\n    aspect-ratio: 1 / 1;\n    width: 10px;\n    border-radius: 50%;\n    cursor: pointer;\n    border: 2px solid #A16207;\n    background-color: rgba(161, 98, 7, 0.1);\n}\n\n.task-card .check-button:hover {\n    background-color: rgba(161, 98, 7, 0.5);\n}\n\n.task-card .check-button:active {\n    transform: scale(1.2);\n}\n\n.task-card .middle-column {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n/* Name field */\n.task-card .middle-column > :first-child {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n/* Description field */\n.task-card .middle-column > :nth-child(2) {\n    color: #666666;\n    font-size: 14px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.task-card .due-date {\n    display: flex;\n    gap: 5px;\n    color: #666666;\n    font-size: 14px;\n}\n\n.task-card .due-date > :first-child {\n    width: 15px;\n}\n\n.task-card .delete-button {\n    height: 30px;\n    width: 30px;\n    background-color: transparent;\n    padding: 0;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    visibility: hidden;\n}\n\n.task-card .delete-button:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.task-card:hover .delete-button {\n    visibility: visible;\n}\n\n.task-card .delete-button > img {\n    width: 20px;\n    height: 20px;\n}\n\n"],sourceRoot:""}]);const i=r},773:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),d=t.n(o),a=t(645),r=t.n(a)()(d());r.push([e.id,".today-page {\n    width: 100%;\n    height: 100%;\n}","",{version:3,sources:["webpack://./src/modules/components/todayPage/todayPage.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,YAAY;AAChB",sourcesContent:[".today-page {\n    width: 100%;\n    height: 100%;\n}"],sourceRoot:""}]);const i=r},627:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),d=t.n(o),a=t(645),r=t.n(a)()(d());r.push([e.id,".upcoming-page {\n    width: 100%;\n    height: 100%;\n}","",{version:3,sources:["webpack://./src/modules/components/upcomingPage/upcomingPage.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,YAAY;AAChB",sourcesContent:[".upcoming-page {\n    width: 100%;\n    height: 100%;\n}"],sourceRoot:""}]);const i=r},426:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),d=t.n(o),a=t(645),r=t.n(a)()(d());r.push([e.id,"* {\n    /* Fix issue with extra space on the side when adding padding */\n    -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */\n    -moz-box-sizing: border-box;    /* Firefox, other Gecko */\n    box-sizing: border-box;         /* Opera/IE 8+ */\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 300px minmax(0, 1fr);\n    grid-template-rows: max-content 1fr;\n    min-height: 100vh;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,+DAA+D;IAC/D,8BAA8B,EAAE,gCAAgC;IAChE,2BAA2B,KAAK,yBAAyB;IACzD,sBAAsB,UAAU,gBAAgB;AACpD;;AAEA;IACI,SAAS;IACT,UAAU;IACV,aAAa;IACb,2CAA2C;IAC3C,mCAAmC;IACnC,iBAAiB;AACrB",sourcesContent:["* {\n    /* Fix issue with extra space on the side when adding padding */\n    -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */\n    -moz-box-sizing: border-box;    /* Firefox, other Gecko */\n    box-sizing: border-box;         /* Opera/IE 8+ */\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 300px minmax(0, 1fr);\n    grid-template-rows: max-content 1fr;\n    min-height: 100vh;\n}"],sourceRoot:""}]);const i=r},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,d,a){"string"==typeof e&&(e=[[null,e,void 0]]);var r={};if(o)for(var i=0;i<this.length;i++){var A=this[i][0];null!=A&&(r[A]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);o&&r[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),d&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=d):l[4]="".concat(d)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),d="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(d," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var a={},r=[],i=0;i<e.length;i++){var A=e[i],c=o.base?A[0]+o.base:A[0],l=a[c]||0,s="".concat(c," ").concat(l);a[c]=l+1;var p=t(s),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var m=d(u,o);o.byIndex=i,n.splice(i,0,{identifier:s,updater:m,references:1})}r.push(s)}return r}function d(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,d){var a=o(e=e||[],d=d||{});return function(e){e=e||[];for(var r=0;r<a.length;r++){var i=t(a[r]);n[i].references--}for(var A=o(e,d),c=0;c<a.length;c++){var l=t(a[c]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=A}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var d=void 0!==t.layer;d&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,d&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var d=n[o];if(void 0!==d)return d.exports;var a=n[o]={id:o,exports:{}};return e[o](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");if(o.length)for(var d=o.length-1;d>-1&&!e;)e=o[d--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),o=t(795),d=t.n(o),a=t(569),r=t.n(a),i=t(565),A=t.n(i),c=t(216),l=t.n(c),s=t(589),p=t.n(s),u=t(426),m={};m.styleTagTransform=p(),m.setAttributes=A(),m.insert=r().bind(null,"head"),m.domAPI=d(),m.insertStyleElement=l(),n()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const C=()=>{const e=e=>{let n=t();n.push(e),localStorage.setItem("projects",JSON.stringify(n))},n=e=>{const n=JSON.parse(localStorage.getItem("projects")).filter((n=>n.name===e));return 0===n.length?{}:n[0]},t=()=>JSON.parse(localStorage.getItem("projects")),o=()=>JSON.parse(localStorage.getItem("tasks"));return{init:()=>{localStorage.getItem("projects")||localStorage.setItem("projects",JSON.stringify([])),"{}"===JSON.stringify(n("Inbox"))&&e({id:"Inbox",name:"Inbox",timeCreated:(new Date).getTime()}),localStorage.getItem("tasks")||localStorage.setItem("tasks",JSON.stringify([]))},getProjectById:e=>{const n=JSON.parse(localStorage.getItem("projects")).filter((n=>n.id===e));return 0===n.length?{}:n[0]},getProjectByName:n,getAllProjects:t,createProject:e,updateProject:(e,n)=>{let o=t();for(let t=0;t<o.length;t++)o[t].id===e.id&&(o[t]=n);localStorage.setItem("projects",JSON.stringify(o))},deleteProject:e=>{let n=t();n=n.filter((n=>n.id!==e)),localStorage.setItem("projects",JSON.stringify(n))},createTask:e=>{let n=o();n.push(e),localStorage.setItem("tasks",JSON.stringify(n))},getAllTasks:o,getTasksByProjectId:e=>o().filter((n=>n.projectId===e)),getTaskById:e=>{const n=o();for(let t of n)if(t.id===e)return t;return{}},deleteTask:e=>{let n=o();n=n.filter((n=>n.id!==e)),localStorage.setItem("tasks",JSON.stringify(n))}}};var g=t(404),b={};b.styleTagTransform=p(),b.setAttributes=A(),b.insert=r().bind(null,"head"),b.domAPI=d(),b.insertStyleElement=l(),n()(g.Z,b),g.Z&&g.Z.locals&&g.Z.locals;const h=t.p+"92c598d0995778188044.svg";var I=t(332),x={};x.styleTagTransform=p(),x.setAttributes=A(),x.insert=r().bind(null,"head"),x.domAPI=d(),x.insertStyleElement=l(),n()(I.Z,x),I.Z&&I.Z.locals&&I.Z.locals;var B=t(540),f={};f.styleTagTransform=p(),f.setAttributes=A(),f.insert=r().bind(null,"head"),f.domAPI=d(),f.insertStyleElement=l(),n()(B.Z,f),B.Z&&B.Z.locals&&B.Z.locals;const k=t.p+"804b4b589eea8b818764.svg",v=t.p+"b4200fd474d2b71d1e95.svg",y=(e,n,t)=>{const o=document.createElement("div");o.className="sidebar-item",o.id=n.id;const d=document.createElement("div");d.className="item-content";const a=new Image;a.src=e,d.appendChild(a);const r=document.createElement("div");if(r.textContent=n.name,d.appendChild(r),o.appendChild(d),t){const e=document.createElement("div");e.className="item-buttons";const n=document.createElement("button");n.className="edit-button";const t=new Image;t.src=k,n.appendChild(t),e.appendChild(n);const d=document.createElement("button");d.className="delete-button";const a=new Image;a.src=v,d.appendChild(a),e.appendChild(d),o.appendChild(e)}return o},E=t.p+"939f2a757e3335be71bb.svg",w=t.p+"233385e32206cd372d69.svg",j=t.p+"1514cb89e66edd886067.svg",S=()=>{const e=document.createElement("div");e.className="side-bar";const n=document.createElement("div");n.className="default-items",n.appendChild(y(E,{id:"Inbox",name:"Inbox"},!1)),n.appendChild(y(w,{id:"Today",name:"Today"},!1)),n.appendChild(y(j,{id:"Upcoming",name:"Upcoming"},!1)),e.appendChild(n);const t=document.createElement("div");t.className="projects",t.appendChild((()=>{const e=document.createElement("div");e.className="projects-header";const n=document.createElement("div");n.textContent="Projects",e.appendChild(n);const t=document.createElement("button");return t.className="add-project-button",t.textContent="+",e.appendChild(t),e})());const o=document.createElement("div");return o.className="project-items",t.appendChild(o),e.appendChild(t),e};var Z=t(718),Y={};Y.styleTagTransform=p(),Y.setAttributes=A(),Y.insert=r().bind(null,"head"),Y.domAPI=d(),Y.insertStyleElement=l(),n()(Z.Z,Y),Z.Z&&Z.Z.locals&&Z.Z.locals;const q=e=>{const n=document.createElement("div");n.className="priority-section";const t=document.createElement("div");t.className="priority-header",t.textContent=`Priority ${e.toString()}`,n.appendChild(t);const o=document.createElement("div");n.appendChild(o);const d=document.createElement("button");d.className="add-task-button";const a=document.createElement("span");a.textContent="+";const r=document.createElement("span");return r.textContent="Add task",d.appendChild(a),d.appendChild(r),n.appendChild(d),n};var T=t(773),N={};N.styleTagTransform=p(),N.setAttributes=A(),N.insert=r().bind(null,"head"),N.domAPI=d(),N.insertStyleElement=l(),n()(T.Z,N),T.Z&&T.Z.locals&&T.Z.locals;var P=t(627),D={};D.styleTagTransform=p(),D.setAttributes=A(),D.insert=r().bind(null,"head"),D.domAPI=d(),D.insertStyleElement=l(),n()(P.Z,D),P.Z&&P.Z.locals&&P.Z.locals;var W=t(620),z={};z.styleTagTransform=p(),z.setAttributes=A(),z.insert=r().bind(null,"head"),z.domAPI=d(),z.insertStyleElement=l(),n()(W.Z,z),W.Z&&W.Z.locals&&W.Z.locals;const L=(e,n)=>{const t=document.createElement("div");if(n){const e=document.createElement("div");e.textContent=n,t.appendChild(e)}const o=document.createElement("select");return e.forEach((e=>{o.appendChild(U(e))})),t.appendChild(o),t},U=e=>{const n=document.createElement("option");return n.value=e,n.textContent=e,n},X=e=>{const n=document.createElement("div");n.className="add-task-card";const t=document.createElement("span");t.role="textbox",t.contentEditable="true",n.appendChild(t);const o=document.createElement("span");o.role="textbox",o.contentEditable="true",n.appendChild(o);const d=document.createElement("div");d.className="middle-row",d.appendChild((()=>{const e=document.createElement("div"),n=document.createElement("div");n.textContent="Due date",e.appendChild(n);const t=document.createElement("input");return t.type="date",e.appendChild(t),e})()),d.appendChild(L(["Priority 1","Priority 2","Priority 3","Priority 4"],"Priority")),n.appendChild(d);const a=document.createElement("div");a.className="bottom-row",a.appendChild(L(e.map((e=>e.name))));const r=document.createElement("div"),i=document.createElement("button");i.className="cancel-button",i.textContent="Cancel",r.appendChild(i);const A=document.createElement("button");return A.textContent="Add task",A.className="add-button",A.disabled=!0,r.appendChild(A),a.appendChild(r),n.appendChild(a),n};var R=t(177),M={};M.styleTagTransform=p(),M.setAttributes=A(),M.insert=r().bind(null,"head"),M.domAPI=d(),M.insertStyleElement=l(),n()(R.Z,M),R.Z&&R.Z.locals&&R.Z.locals;const O=t.p+"28282ddc85b085c7fd14.svg";var J=t(386),$={};$.styleTagTransform=p(),$.setAttributes=A(),$.insert=r().bind(null,"head"),$.domAPI=d(),$.insertStyleElement=l(),n()(J.Z,$),J.Z&&J.Z.locals&&J.Z.locals;var V=t(930),F={};F.styleTagTransform=p(),F.setAttributes=A(),F.insert=r().bind(null,"head"),F.domAPI=d(),F.insertStyleElement=l(),n()(V.Z,F),V.Z&&V.Z.locals&&V.Z.locals;var G=t(914),Q={};Q.styleTagTransform=p(),Q.setAttributes=A(),Q.insert=r().bind(null,"head"),Q.domAPI=d(),Q.insertStyleElement=l(),n()(G.Z,Q),G.Z&&G.Z.locals&&G.Z.locals;var K=t(258),H={};H.styleTagTransform=p(),H.setAttributes=A(),H.insert=r().bind(null,"head"),H.domAPI=d(),H.insertStyleElement=l(),n()(K.Z,H),K.Z&&K.Z.locals&&K.Z.locals;const _=t.p+"ec79a10c2e5d5200f8b4.svg";var ee=t(934),ne={};ne.styleTagTransform=p(),ne.setAttributes=A(),ne.insert=r().bind(null,"head"),ne.domAPI=d(),ne.insertStyleElement=l(),n()(ee.Z,ne),ee.Z&&ee.Z.locals&&ee.Z.locals;const te={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let oe;const de=new Uint8Array(16);function ae(){if(!oe&&(oe="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!oe))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return oe(de)}const re=[];for(let e=0;e<256;++e)re.push((e+256).toString(16).slice(1));const ie=function(e,n,t){if(te.randomUUID&&!n&&!e)return te.randomUUID();const o=(e=e||{}).random||(e.rng||ae)();if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,n){t=t||0;for(let e=0;e<16;++e)n[t+e]=o[e];return n}return function(e,n=0){return re[e[n+0]]+re[e[n+1]]+re[e[n+2]]+re[e[n+3]]+"-"+re[e[n+4]]+re[e[n+5]]+"-"+re[e[n+6]]+re[e[n+7]]+"-"+re[e[n+8]]+re[e[n+9]]+"-"+re[e[n+10]]+re[e[n+11]]+re[e[n+12]]+re[e[n+13]]+re[e[n+14]]+re[e[n+15]]}(o)};var Ae=t(225),ce={};ce.styleTagTransform=p(),ce.setAttributes=A(),ce.insert=r().bind(null,"head"),ce.domAPI=d(),ce.insertStyleElement=l(),n()(Ae.Z,ce),Ae.Z&&Ae.Z.locals&&Ae.Z.locals;const le=(e,n)=>{const t=document.createElement("div");if(n){const e=document.createElement("div");e.textContent=n,t.appendChild(e)}const o=document.createElement("select");return e.forEach((e=>{o.appendChild(se(e))})),t.appendChild(o),t},se=e=>{const n=document.createElement("option");return n.value=e,n.textContent=e,n},pe=e=>{const n=document.createElement("dialog");n.className="edit-task-dialog";const t=document.createElement("div"),o=document.createElement("span");o.role="textbox",o.contentEditable="true",t.appendChild(o);const d=document.createElement("span");d.role="textbox",d.contentEditable="true",t.appendChild(d);const a=document.createElement("div");a.className="middle-row",a.appendChild((()=>{const e=document.createElement("div"),n=document.createElement("div");n.textContent="Due date",e.appendChild(n);const t=document.createElement("input");return t.type="date",e.appendChild(t),e})()),a.appendChild(le(["Priority 1","Priority 2","Priority 3","Priority 4"],"Priority")),t.appendChild(a);const r=document.createElement("div");r.className="bottom-row",r.appendChild(le(e.map((e=>e.name))));const i=document.createElement("div"),A=document.createElement("button");A.className="cancel-button",A.textContent="Cancel",i.appendChild(A);const c=document.createElement("button");return c.textContent="Save",c.className="save-button",i.appendChild(c),r.appendChild(i),t.appendChild(r),n.appendChild(t),n},ue=()=>{const e=C(),n=()=>{let n=e.getAllProjects();n=n.filter((e=>"Inbox"!==e.name));const a=document.querySelector(".side-bar .project-items");for(;a.lastChild;)a.removeChild(a.lastChild);n.forEach((e=>{a.appendChild(y(O,e,!0))})),d(),t(),o()},t=()=>{document.querySelectorAll(".sidebar-item .edit-button").forEach((n=>{n.addEventListener("click",(()=>{const t=e.getProjectById(n.parentElement.parentElement.id);u(t)}))}))},o=()=>{document.querySelectorAll(".sidebar-item .delete-button").forEach((n=>{n.addEventListener("click",(()=>{const t=e.getProjectById(n.parentElement.parentElement.id);g(t)}))}))},d=()=>{document.querySelectorAll(".sidebar-item").forEach((e=>{e.querySelector(".item-content").addEventListener("click",(()=>{e.classList.contains("sidebar-item-active")||a(e.id)}))}))},a=e=>{(e=>{document.querySelectorAll(".sidebar-item").forEach((e=>{e.className="sidebar-item"})),document.getElementById(e).classList.add("sidebar-item-active")})(e),"Inbox"===e?r():"Today"===e?i():"Upcoming"===e?A():c(e)},r=()=>{const n=document.querySelector("#content");n.lastChild&&n.removeChild(n.lastChild);const t=(()=>{const e=document.createElement("div");e.className="inbox-page";const n=document.createElement("div");n.className="inbox-content";const t=document.createElement("div");t.className="inbox-header",t.textContent="Inbox",n.appendChild(t);for(let e=1;e<5;e++){const t=q(e);t.className="priority-section",n.appendChild(t)}return e.appendChild(n),e})(),o=e.getTasksByProjectId("Inbox"),d=t.querySelectorAll(".priority-section");o.forEach((e=>{const n=parseInt(e.priority),t=d[n-1].children.item(1),o=(e=>{const n=document.createElement("div");n.className="task-card",n.dataTask=e;const t=document.createElement("div"),o=document.createElement("button");o.className="check-button",t.appendChild(o),n.appendChild(t);const d=document.createElement("div");d.className="middle-column";const a=document.createElement("div");a.textContent=e.name,d.appendChild(a);const r=document.createElement("div");r.textContent=e.description,d.appendChild(r);const i=document.createElement("div");i.className="due-date";const A=new Image;A.src=_,i.appendChild(A);const c=document.createElement("div");let l;if(""===e.dueDate)l="No due date";else{let n=new Date(parseInt(e.dueDate));l=`${n.getFullYear()}-${(n.getMonth()+1).toLocaleString("en-US",{minimumIntegerDigits:2,useGrouping:!1})}-${n.getDate().toLocaleString("en-US",{minimumIntegerDigits:2,useGrouping:!1})}`}c.textContent=l,i.appendChild(c),d.appendChild(i),n.appendChild(d);const s=document.createElement("div"),p=document.createElement("button");p.className="delete-button";const u=new Image;return u.src=v,p.appendChild(u),s.appendChild(p),n.appendChild(s),n})(e);t.appendChild(o),j(o)})),n.appendChild(t),I()},i=()=>{const e=document.querySelector("#content");e.lastChild&&e.removeChild(e.lastChild),e.appendChild((()=>{const e=document.createElement("div");return e.className="today-page",e.textContent="today page",e})())},A=()=>{const e=document.querySelector("#content");e.lastChild&&e.removeChild(e.lastChild),e.appendChild((()=>{const e=document.createElement("div");return e.className="upcoming-page",e.textContent="upcoming page",e})())},c=e=>{const n=document.querySelector("#content");n.lastChild&&n.removeChild(n.lastChild),n.appendChild((e=>{const n=document.createElement("div");return n.textContent=`Project page: ${e}`,n})(e))},l=()=>{document.querySelector(".add-project-dialog").showModal(),document.body.style.overflow="hidden",document.querySelector(".add-project-dialog input").value="",document.querySelector(".add-project-dialog .error-message").textContent="",document.querySelector(".add-project-dialog .add-button").disabled=!0},s=()=>{document.querySelector(".add-project-dialog").close()},p=n=>{let t="valid";if(0==n.length||n.length>20)t="Project's name must have 1-20 characters.";else{const o=e.getAllProjects();for(let e of o)if(e.name===n){t="This name is already taken.";break}}return t},u=e=>{const n=document.querySelector(".edit-project-dialog");n.dataProject=e,n.showModal(),document.body.style.overflow="hidden",n.querySelector("input").value=e.name,document.querySelector(".edit-project-dialog .error-message").textContent="",document.querySelector(".edit-project-dialog .save-button").disabled=!0},m=()=>{document.querySelector(".edit-project-dialog").close()},g=e=>{const n=document.querySelector(".delete-project-dialog");n.dataProject=e,n.showModal(),document.body.style.overflow="hidden",n.querySelector(".message span:first-Child").textContent=e.name},b=()=>{document.querySelector(".delete-project-dialog").close()},I=()=>{document.querySelectorAll(".add-task-button").forEach((e=>{e.addEventListener("click",(()=>{x(e)}))}))},x=n=>{document.querySelector(".inbox-page").querySelectorAll(".add-task-button").forEach((e=>{e.classList.add("add-task-button-hidden")}));const t=X(e.getAllProjects());B(t,parseInt(n.parentElement.firstChild.textContent.split(" ")[1])),f(t.querySelector(".add-task-card .cancel-button")),k(t),E(t),n.parentElement.appendChild(t)},B=(e,n)=>{e.querySelector(".middle-row select").children.item(n-1).selected="selected"},f=e=>{e.addEventListener("click",(()=>{w()}))},k=e=>{const n=e.firstChild;n.addEventListener("input",(()=>{const t=e.querySelector(".add-button");""!==n.textContent.trim()?t.disabled=!1:t.disabled=!0}))},E=n=>{n.querySelector(".add-button").addEventListener("click",(()=>{const t=(new Date).getTime(),o=n.firstChild.textContent.trim(),d=n.children.item(1).textContent.trim(),a=n.querySelector(".middle-row input").value;let i=new Date;""!==a?(i.setUTCFullYear(a.split("-")[0]),i.setMonth(parseInt(a.split("-")[1])-1),i.setDate(a.split("-")[2]),i.setUTCHours(0),i.setMinutes(0),i.setSeconds(0),i.setMilliseconds(0),i=i.getTime()):i="";const A=n.querySelector(".middle-row select").value.split(" ")[1],c=n.querySelector(".bottom-row select").value,l={id:ie(),name:o,description:d,dueDate:i,priority:A,projectId:e.getProjectByName(c).id,timeCreated:t};e.createTask(l),r()}))},w=()=>{const e=document.querySelector(".add-task-card").parentElement;e.removeChild(e.lastChild),document.querySelector(".inbox-page").querySelectorAll(".add-task-button").forEach((e=>{e.classList.remove("add-task-button-hidden")}))},j=e=>{Y(e),T(e),Z(e)},Z=e=>{e.addEventListener("click",(()=>{N(e.dataTask)}))},Y=n=>{n.querySelector(".check-button").addEventListener("click",(t=>{t.stopImmediatePropagation(),e.deleteTask(n.dataTask.id),r()}))},T=e=>{e.querySelector(".delete-button").addEventListener("click",(n=>{n.stopImmediatePropagation();const t=e.dataTask;D(t)}))},N=n=>{const t=document.querySelector(".edit-task-dialog");t.showModal(),document.body.style.overflow="hidden",t.querySelector("span:first-child").textContent=n.name,t.querySelector("span:nth-child(2)").textContent=n.description;const o=t.querySelector(".middle-row input");if(o.value="",""!==n.dueDate){const e=new Date(parseInt(n.dueDate));o.value=`${e.getFullYear()}-${(e.getMonth()+1).toLocaleString("en-US",{minimumIntegerDigits:2,useGrouping:!1})}-${e.getDate().toLocaleString("en-US",{minimumIntegerDigits:2,useGrouping:!1})}`}t.querySelector(".middle-row select").children.item(n.priority-1).selected=!0;const d=t.querySelector(".bottom-row select"),a=e.getProjectById(n.projectId).name;d.querySelector(`option[value = "${a}"]`).selected=!0},P=()=>{document.querySelector(".edit-task-dialog").close()},D=e=>{const n=document.querySelector(".delete-task-dialog");n.dataTask=e,n.showModal(),document.body.style.overflow="hidden",n.querySelector(".message span:first-Child").textContent=e.name},W=()=>{document.querySelector(".delete-task-dialog").close()};return{init:()=>{const t=document.querySelector("body"),o=(()=>{const e=document.createElement("div");e.className="nav-bar";const n=(()=>{const e=document.createElement("div");e.className="logo";const n=new Image;n.src=h,e.appendChild(n);const t=document.createElement("div");return t.textContent="Todo List",e.appendChild(t),e})();return e.appendChild(n),e})();t.appendChild(o),document.querySelector(".logo").addEventListener("click",(()=>{const e=document.querySelector("#Inbox");e.classList.contains("sidebar-item-active")||a(e.id)}));const d=S();t.appendChild(d),n(),document.querySelector(".add-project-button").addEventListener("click",(()=>{l()}));const i=document.createElement("div");i.id="content",t.appendChild(i);const A=(()=>{const e=document.createElement("dialog");e.className="add-project-dialog";const n=document.createElement("form");n.action="#",n.method="post",n.noValidate=!0,n.className="form";const t=document.createElement("div");t.className="header",t.textContent="Add project",n.appendChild(t);const o=document.createElement("form-field"),d=document.createElement("label");d.for="project-name",d.textContent="Name",o.appendChild(d);const a=document.createElement("input");a.type="text",a.id="project-name",o.appendChild(a);const r=document.createElement("span");r.className="error-message",r.ariaLive="polite",o.appendChild(r),n.appendChild(o);const i=document.createElement("div");i.className="buttons";const A=document.createElement("button");A.className="cancel-button",A.textContent="Cancel",i.appendChild(A),n.appendChild(i);const c=document.createElement("button");return c.className="add-button",c.textContent="Add",c.disabled=!0,i.appendChild(c),e.appendChild(n),e})();t.appendChild(A),document.querySelector(".add-project-dialog").addEventListener("close",(()=>{document.body.style.overflow="auto"})),(()=>{const e=document.querySelector(".add-project-dialog input");e.addEventListener("input",(()=>{const n=p(e.value),t=document.querySelector(".add-project-dialog .add-button"),o=document.querySelector(".add-project-dialog .error-message");"valid"===n?(t.disabled=!1,o.textContent=""):(t.disabled=!0,o.textContent=n)}))})(),(()=>{const t=document.querySelector(".add-project-dialog input");t.addEventListener("keypress",(o=>{if(13===o.keyCode)if(o.preventDefault(),"valid"===p(t.value)){const o=ie(),d=t.value,r=(new Date).getTime();e.createProject({id:o,name:d,timeCreated:r}),s(),n(),a(o)}else{const e=document.querySelector(".add-project-dialog .error-message");""===e.textContent&&(e.textContent=p(t.value))}}))})(),document.querySelector(".add-project-dialog .cancel-button").addEventListener("click",(e=>{e.preventDefault(),s()})),document.querySelector(".add-project-dialog .add-button").addEventListener("click",(t=>{t.preventDefault();const o=ie(),d=document.querySelector(".add-project-dialog input").value,r=(new Date).getTime();e.createProject({id:o,name:d,timeCreated:r}),s(),n(),a(o)}));const c=(()=>{const e=document.createElement("dialog");e.className="edit-project-dialog";const n=document.createElement("form");n.action="#",n.method="post",n.noValidate=!0,n.className="form";const t=document.createElement("div");t.className="header",t.textContent="Edit project",n.appendChild(t);const o=document.createElement("form-field"),d=document.createElement("label");d.for="project-name",d.textContent="Name",o.appendChild(d);const a=document.createElement("input");a.type="text",a.id="project-name",o.appendChild(a);const r=document.createElement("span");r.className="error-message",r.ariaLive="polite",o.appendChild(r),n.appendChild(o);const i=document.createElement("div");i.className="buttons";const A=document.createElement("button");A.className="cancel-button",A.textContent="Cancel",i.appendChild(A),n.appendChild(i);const c=document.createElement("button");return c.className="save-button",c.textContent="Save",c.disabled=!0,i.appendChild(c),e.appendChild(n),e})();t.appendChild(c),document.querySelector(".edit-project-dialog").addEventListener("close",(()=>{document.body.style.overflow="auto"})),(()=>{const e=document.querySelector(".edit-project-dialog input");e.addEventListener("input",(()=>{const n=p(e.value),t=document.querySelector(".edit-project-dialog .save-button"),o=document.querySelector(".edit-project-dialog .error-message");"valid"===n?(t.disabled=!1,o.textContent=""):(t.disabled=!0,o.textContent=n)}))})(),(()=>{const t=document.querySelector(".edit-project-dialog input");t.addEventListener("keypress",(o=>{if(13===o.keyCode)if(o.preventDefault(),"valid"===p(t.value)){const t=document.querySelector(".edit-project-dialog").dataProject;let o={};o.id=t.id,o.name=document.querySelector(".edit-project-dialog input").value,o.timeCreated=t.timeCreated,e.updateProject(t,o),m(),n(),a(o.id)}else{const e=document.querySelector(".edit-project-dialog .error-message");""===e.textContent&&(e.textContent=p(t.value))}}))})(),document.querySelector(".edit-project-dialog .cancel-button").addEventListener("click",(e=>{e.preventDefault(),m()})),document.querySelector(".edit-project-dialog .save-button").addEventListener("click",(t=>{t.preventDefault();const o=document.querySelector(".edit-project-dialog").dataProject;let d={};d.id=o.id,d.name=document.querySelector(".edit-project-dialog input").value,d.timeCreated=o.timeCreated,e.updateProject(o,d),m(),n(),a(d.id)}));const u=(()=>{const e=document.createElement("dialog");e.className="delete-project-dialog";const n=document.createElement("div"),t=document.createElement("div");t.className="header",t.textContent="Delete project?",n.appendChild(t);const o=document.createElement("div");o.className="message",o.textContent="Are you sure you want to delete ";const d=document.createElement("span");o.appendChild(d);const a=document.createElement("span");a.textContent="?",o.appendChild(a),n.appendChild(o);const r=document.createElement("div");r.className="bottom-row";const i=document.createElement("button");i.className="cancel-button",i.textContent="Cancel",r.appendChild(i);const A=document.createElement("button");return A.className="delete-button",A.textContent="Delete",r.appendChild(A),n.appendChild(r),e.appendChild(n),e})();t.appendChild(u),document.querySelector(".delete-project-dialog").addEventListener("close",(()=>{document.body.style.overflow="auto"})),document.querySelector(".delete-project-dialog .cancel-button").addEventListener("click",(e=>{e.preventDefault(),b()})),document.querySelector(".delete-project-dialog .delete-button").addEventListener("click",(t=>{t.preventDefault();const o=document.querySelector(".delete-project-dialog").dataProject;e.deleteProject(o.id),b(),document.querySelector(".sidebar-item-active").id===o.id&&a("Inbox"),n()})),document.querySelector(".delete-project-dialog").addEventListener("keypress",(t=>{if(13===t.keyCode){t.preventDefault();const o=document.querySelector(".delete-project-dialog").dataProject;e.deleteProject(o.id),b(),document.querySelector(".sidebar-item-active").id===o.id&&a("Inbox"),n()}}));const C=pe(e.getAllProjects());t.appendChild(C),(()=>{const e=document.querySelector(".edit-task-dialog span:first-child");e.addEventListener("input",(()=>{const n=document.querySelector(".edit-task-dialog .save-button");""===e.textContent?n.disabled=!0:n.disabled=!1}))})(),document.querySelector(".edit-task-dialog").addEventListener("close",(()=>{document.body.style.overflow="auto"})),document.querySelector(".edit-task-dialog .cancel-button").addEventListener("click",(e=>{e.preventDefault(),P()}));const g=(()=>{const e=document.createElement("dialog");e.className="delete-task-dialog";const n=document.createElement("div"),t=document.createElement("div");t.className="header",t.textContent="Delete task?",n.appendChild(t);const o=document.createElement("div");o.className="message",o.textContent="Are you sure you want to delete ";const d=document.createElement("span");o.appendChild(d);const a=document.createElement("span");a.textContent="?",o.appendChild(a),n.appendChild(o);const r=document.createElement("div");r.className="bottom-row";const i=document.createElement("button");i.className="cancel-button",i.textContent="Cancel",r.appendChild(i);const A=document.createElement("button");return A.className="delete-button",A.textContent="Delete",r.appendChild(A),n.appendChild(r),e.appendChild(n),e})();t.appendChild(g),document.querySelector(".delete-task-dialog").addEventListener("close",(()=>{document.body.style.overflow="auto"})),document.querySelector(".delete-task-dialog .cancel-button").addEventListener("click",(e=>{e.preventDefault(),W()})),document.querySelector(".delete-task-dialog .delete-button").addEventListener("click",(n=>{n.preventDefault();const t=document.querySelector(".delete-task-dialog").dataTask;e.deleteTask(t.id),W(),r()})),document.querySelector(".delete-task-dialog").addEventListener("keypress",(n=>{if(13===n.keyCode){n.preventDefault();const t=document.querySelector(".delete-task-dialog").dataTask;e.deleteTask(t.id),W(),r()}})),a("Inbox")}}};(()=>{let e=ue(),n=C();return{init:()=>{n.init(),e.init()}}})().init()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RyxTQUFTVyxjQUFjLFVBUTVDLE9BUEEwRixFQUFhVCxVQUFZLGdCQUN6QlMsRUFBYUosWUFBYyxTQUMzQm9DLEVBQVU1SCxZQUFZNEYsR0FDdEJnQixFQUFRNUcsWUFBWTRILEdBRXBCb0IsRUFBT2hKLFlBQVk0RyxHQUVab0MsQ0FBTSxFVGdDZ0IsR0FDekJ5RCxFQUFLek0sWUFBWTZRLEdBMnJCRnRSLFNBQVNDLGNBQWMsdUJBQy9Ca0ssaUJBQWlCLFNBQVMsS0FFN0JuSyxTQUFTa04sS0FBS3JOLE1BQU1zTixTQUFXLE1BQU0sSUFLMUJuTixTQUFTQyxjQUFjLHNDQUMvQmtLLGlCQUFpQixTQUFTK0UsSUFDN0JBLEVBQU13QixpQkFDTmxCLEdBQXdCLElBV1B4UCxTQUFTQyxjQUFjLHNDQUMvQmtLLGlCQUFpQixTQUFTK0UsSUFDbkNBLEVBQU13QixpQkFDTixNQUFNdEwsRUFBT3BGLFNBQVNDLGNBQWMsdUJBQXVCdUwsU0FDM0Q3QixFQUFtQmxFLFdBQVdMLEVBQUt2SixJQUNuQzJULElBQ0ExRSxHQUFnQixJQU1MOUssU0FBU0MsY0FBYyx1QkFDL0JrSyxpQkFBaUIsWUFBWStFLElBQ2hDLEdBQXNCLEtBQWxCQSxFQUFNdUIsUUFBZ0IsQ0FDdEJ2QixFQUFNd0IsaUJBQ04sTUFBTXRMLEVBQU9wRixTQUFTQyxjQUFjLHVCQUF1QnVMLFNBQzNEN0IsRUFBbUJsRSxXQUFXTCxFQUFLdkosSUFDbkMyVCxJQUNBMUUsR0FDSixLQTl0QkpMLEVBQVksUUFBUSxFQW91QnZCLEVVbnpCaUIsTUFDbEIsSUFBSThHLEVBQW1CLEtBQ25CNUgsRUFBcUIsSUFNekIsTUFBTyxDQUNIakYsS0FOUyxLQUNUaUYsRUFBbUJqRixPQUNuQjZNLEVBQWlCN00sTUFBTSxFQUsxQixFQ1ZpQixHQUNSQSxNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL21vZHVsZXMvY29tcG9uZW50cy9hZGRQcm9qZWN0RGlhbG9nL2FkZFByb2plY3REaWFsb2cuY3NzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9tb2R1bGVzL2NvbXBvbmVudHMvYWRkVGFza0NhcmQvYWRkVGFza0NhcmQuY3NzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9tb2R1bGVzL2NvbXBvbmVudHMvZGVsZXRlUHJvamVjdERpYWxvZy9kZWxldGVQcm9qZWN0RGlhbG9nLmNzcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvbW9kdWxlcy9jb21wb25lbnRzL2RlbGV0ZVRhc2tEaWFsb2cvZGVsZXRlVGFza0RpYWxvZy5jc3MiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL21vZHVsZXMvY29tcG9uZW50cy9lZGl0UHJvamVjdERpYWxvZy9lZGl0UHJvamVjdERpYWxvZy5jc3MiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL21vZHVsZXMvY29tcG9uZW50cy9lZGl0VGFza0RpYWxvZy9lZGl0VGFza0RpYWxvZy5jc3MiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL21vZHVsZXMvY29tcG9uZW50cy9pbmJveFBhZ2UvaW5ib3hQYWdlLmNzcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvbW9kdWxlcy9jb21wb25lbnRzL25hdkJhci9uYXZCYXIuY3NzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9tb2R1bGVzL2NvbXBvbmVudHMvcHJvamVjdFBhZ2UvcHJvamVjdFBhZ2UuY3NzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9tb2R1bGVzL2NvbXBvbmVudHMvc2lkZUJhci9zaWRlQmFyLmNzcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvbW9kdWxlcy9jb21wb25lbnRzL3NpZGVCYXJJdGVtL3NpZGVCYXJJdGVtLmNzcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvbW9kdWxlcy9jb21wb25lbnRzL3Rhc2tDYXJkL3Rhc2tDYXJkLmNzcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvbW9kdWxlcy9jb21wb25lbnRzL3RvZGF5UGFnZS90b2RheVBhZ2UuY3NzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9tb2R1bGVzL2NvbXBvbmVudHMvdXBjb21pbmdQYWdlL3VwY29taW5nUGFnZS5jc3MiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL3N0eWxlLmNzcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9zdHlsZS5jc3M/NzE2MyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvbW9kdWxlcy9jb250cm9sbGVycy9EYXRhYmFzZUNvbnRyb2xsZXIuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL21vZHVsZXMvY29tcG9uZW50cy9uYXZCYXIvbmF2QmFyLmNzcz8yNzI2Iiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9tb2R1bGVzL2NvbXBvbmVudHMvc2lkZUJhci9zaWRlQmFyLmNzcz80MjJmIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9tb2R1bGVzL2NvbXBvbmVudHMvc2lkZUJhckl0ZW0vc2lkZUJhckl0ZW0uY3NzPzAyYTIiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL21vZHVsZXMvY29tcG9uZW50cy9zaWRlQmFySXRlbS9zaWRlQmFySXRlbS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvbW9kdWxlcy9jb21wb25lbnRzL3NpZGVCYXIvc2lkZUJhci5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvbW9kdWxlcy9jb21wb25lbnRzL2luYm94UGFnZS9pbmJveFBhZ2UuY3NzP2NmZWYiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL21vZHVsZXMvY29tcG9uZW50cy9pbmJveFBhZ2UvaW5ib3hQYWdlLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9tb2R1bGVzL2NvbXBvbmVudHMvdG9kYXlQYWdlL3RvZGF5UGFnZS5jc3M/NWUzMSIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvbW9kdWxlcy9jb21wb25lbnRzL3VwY29taW5nUGFnZS91cGNvbWluZ1BhZ2UuY3NzP2M1NzMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL21vZHVsZXMvY29tcG9uZW50cy9hZGRUYXNrQ2FyZC9hZGRUYXNrQ2FyZC5jc3M/ZGIzMiIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvbW9kdWxlcy9jb21wb25lbnRzL2FkZFRhc2tDYXJkL2FkZFRhc2tDYXJkLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9tb2R1bGVzL2NvbXBvbmVudHMvYWRkUHJvamVjdERpYWxvZy9hZGRQcm9qZWN0RGlhbG9nLmNzcz82YTJlIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9tb2R1bGVzL2NvbXBvbmVudHMvcHJvamVjdFBhZ2UvcHJvamVjdFBhZ2UuY3NzPzJjZWQiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL21vZHVsZXMvY29tcG9uZW50cy9lZGl0UHJvamVjdERpYWxvZy9lZGl0UHJvamVjdERpYWxvZy5jc3M/Y2UyMSIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvbW9kdWxlcy9jb21wb25lbnRzL2RlbGV0ZVByb2plY3REaWFsb2cvZGVsZXRlUHJvamVjdERpYWxvZy5jc3M/ZTMxYiIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvbW9kdWxlcy9jb21wb25lbnRzL3Rhc2tDYXJkL3Rhc2tDYXJkLmNzcz85ZWIzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9tb2R1bGVzL2NvbXBvbmVudHMvZGVsZXRlVGFza0RpYWxvZy9kZWxldGVUYXNrRGlhbG9nLmNzcz9mZDQ4Iiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvbmF0aXZlLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvcm5nLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvc3RyaW5naWZ5LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdjQuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL21vZHVsZXMvY29tcG9uZW50cy9lZGl0VGFza0RpYWxvZy9lZGl0VGFza0RpYWxvZy5jc3M/YmY0MyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvbW9kdWxlcy9jb21wb25lbnRzL2VkaXRUYXNrRGlhbG9nL2VkaXRUYXNrRGlhbG9nLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9tb2R1bGVzL2NvbnRyb2xsZXJzL1NjcmVlbkNvbnRyb2xsZXIuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL21vZHVsZXMvY29tcG9uZW50cy90YXNrQ2FyZC90YXNrQ2FyZC5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvbW9kdWxlcy9jb21wb25lbnRzL3RvZGF5UGFnZS90b2RheVBhZ2UuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL21vZHVsZXMvY29tcG9uZW50cy91cGNvbWluZ1BhZ2UvdXBjb21pbmdQYWdlLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9tb2R1bGVzL2NvbXBvbmVudHMvcHJvamVjdFBhZ2UvcHJvamVjdFBhZ2UuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL21vZHVsZXMvY29tcG9uZW50cy9uYXZCYXIvbmF2QmFyLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9tb2R1bGVzL2NvbXBvbmVudHMvYWRkUHJvamVjdERpYWxvZy9hZGRQcm9qZWN0RGlhbG9nLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9tb2R1bGVzL2NvbXBvbmVudHMvZWRpdFByb2plY3REaWFsb2cvZWRpdFByb2plY3REaWFsb2cuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL21vZHVsZXMvY29tcG9uZW50cy9kZWxldGVQcm9qZWN0RGlhbG9nL2RlbGV0ZVByb2plY3REaWFsb2cuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL21vZHVsZXMvY29tcG9uZW50cy9kZWxldGVUYXNrRGlhbG9nL2RlbGV0ZVRhc2tEaWFsb2cuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL21vZHVsZXMvY29udHJvbGxlcnMvQXBwQ29udHJvbGxlci5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYC5hZGQtcHJvamVjdC1kaWFsb2cge1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgZ3JleTtcbiAgICB3aWR0aDogMzAwcHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRvcDogLTMwJTtcbn1cblxuLmFkZC1wcm9qZWN0LWRpYWxvZzo6YmFja2Ryb3Age1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTtcbn1cblxuLmFkZC1wcm9qZWN0LWRpYWxvZyA+IGZvcm0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBnYXA6IDEwcHg7XG59XG5cbi5hZGQtcHJvamVjdC1kaWFsb2cgLmhlYWRlciB7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XG59XG5cbiBcbi5hZGQtcHJvamVjdC1kaWFsb2cgZm9ybS1maWVsZCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGdhcDogNXB4O1xufVxuXG5cbi5hZGQtcHJvamVjdC1kaWFsb2cgaW5wdXQge1xuICAgIGhlaWdodDogMzBweDtcbiAgICB3aWR0aDogbWF4KDEwMCUsIDIwMHB4KTtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcbn1cblxuLmFkZC1wcm9qZWN0LWRpYWxvZyBpbnB1dDpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBncmV5O1xufVxuXG4uYWRkLXByb2plY3QtZGlhbG9nIC5lcnJvci1tZXNzYWdlIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgY29sb3I6IHJlZDtcbiAgICBoZWlnaHQ6IDE0cHg7XG59XG5cbi5hZGQtcHJvamVjdC1kaWFsb2cgLmJ1dHRvbnMge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICBnYXA6IDEwcHg7XG59XG5cbi5hZGQtcHJvamVjdC1kaWFsb2cgLmNhbmNlbC1idXR0b24ge1xuICAgIGhlaWdodDogMzBweDtcbiAgICB3aWR0aDogNzBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTE1LCAxMTUsIDExNSwgMC4xKTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5hZGQtcHJvamVjdC1kaWFsb2cgLmNhbmNlbC1idXR0b246aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTE1LCAxMTUsIDExNSwgMC4yKTtcbn1cblxuLmFkZC1wcm9qZWN0LWRpYWxvZyAuY2FuY2VsLWJ1dHRvbjphY3RpdmUge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45NSk7XG59XG5cbi5hZGQtcHJvamVjdC1kaWFsb2cgLmFkZC1idXR0b24ge1xuICAgIGhlaWdodDogMzBweDtcbiAgICB3aWR0aDogNzBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNBMTYyMDc7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmFkZC1wcm9qZWN0LWRpYWxvZyAuYWRkLWJ1dHRvbjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNjEsIDk4LCA3LCAwLjgpO1xufVxuXG4uYWRkLXByb2plY3QtZGlhbG9nIC5hZGQtYnV0dG9uOmVuYWJsZWQ6YWN0aXZlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOTUpO1xufVxuXG4uYWRkLXByb2plY3QtZGlhbG9nIC5hZGQtYnV0dG9uOmRpc2FibGVkIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE2MSwgOTgsIDcsIDAuNSk7XG59IFxuXG5cblxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvbW9kdWxlcy9jb21wb25lbnRzL2FkZFByb2plY3REaWFsb2cvYWRkUHJvamVjdERpYWxvZy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxtQkFBbUI7SUFDbkIsc0JBQXNCO0lBQ3RCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsU0FBUztBQUNiOztBQUVBO0lBQ0ksb0NBQW9DO0FBQ3hDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixTQUFTO0FBQ2I7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsZ0JBQWdCO0FBQ3BCOzs7QUFHQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsUUFBUTtBQUNaOzs7QUFHQTtJQUNJLFlBQVk7SUFDWix1QkFBdUI7SUFDdkIsa0JBQWtCO0lBQ2xCLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsVUFBVTtJQUNWLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IseUJBQXlCO0lBQ3pCLFNBQVM7QUFDYjs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWiwwQ0FBMEM7SUFDMUMsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLDBDQUEwQztBQUM5Qzs7QUFFQTtJQUNJLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWix5QkFBeUI7SUFDekIsWUFBWTtJQUNaLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSx1Q0FBdUM7QUFDM0M7O0FBRUE7SUFDSSxzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSx1Q0FBdUM7QUFDM0NcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmFkZC1wcm9qZWN0LWRpYWxvZyB7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGdyZXk7XFxuICAgIHdpZHRoOiAzMDBweDtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICB0b3A6IC0zMCU7XFxufVxcblxcbi5hZGQtcHJvamVjdC1kaWFsb2c6OmJhY2tkcm9wIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xcbn1cXG5cXG4uYWRkLXByb2plY3QtZGlhbG9nID4gZm9ybSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGdhcDogMTBweDtcXG59XFxuXFxuLmFkZC1wcm9qZWN0LWRpYWxvZyAuaGVhZGVyIHtcXG4gICAgZm9udC1zaXplOiAyMHB4O1xcbiAgICBmb250LXdlaWdodDogOTAwO1xcbn1cXG5cXG4gXFxuLmFkZC1wcm9qZWN0LWRpYWxvZyBmb3JtLWZpZWxkIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiA1cHg7XFxufVxcblxcblxcbi5hZGQtcHJvamVjdC1kaWFsb2cgaW5wdXQge1xcbiAgICBoZWlnaHQ6IDMwcHg7XFxuICAgIHdpZHRoOiBtYXgoMTAwJSwgMjAwcHgpO1xcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XFxufVxcblxcbi5hZGQtcHJvamVjdC1kaWFsb2cgaW5wdXQ6Zm9jdXMge1xcbiAgICBvdXRsaW5lOiBub25lO1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCBncmV5O1xcbn1cXG5cXG4uYWRkLXByb2plY3QtZGlhbG9nIC5lcnJvci1tZXNzYWdlIHtcXG4gICAgZm9udC1zaXplOiAxNHB4O1xcbiAgICBjb2xvcjogcmVkO1xcbiAgICBoZWlnaHQ6IDE0cHg7XFxufVxcblxcbi5hZGQtcHJvamVjdC1kaWFsb2cgLmJ1dHRvbnMge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xcbiAgICBnYXA6IDEwcHg7XFxufVxcblxcbi5hZGQtcHJvamVjdC1kaWFsb2cgLmNhbmNlbC1idXR0b24ge1xcbiAgICBoZWlnaHQ6IDMwcHg7XFxuICAgIHdpZHRoOiA3MHB4O1xcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMTUsIDExNSwgMTE1LCAwLjEpO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5hZGQtcHJvamVjdC1kaWFsb2cgLmNhbmNlbC1idXR0b246aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDExNSwgMTE1LCAxMTUsIDAuMik7XFxufVxcblxcbi5hZGQtcHJvamVjdC1kaWFsb2cgLmNhbmNlbC1idXR0b246YWN0aXZlIHtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk1KTtcXG59XFxuXFxuLmFkZC1wcm9qZWN0LWRpYWxvZyAuYWRkLWJ1dHRvbiB7XFxuICAgIGhlaWdodDogMzBweDtcXG4gICAgd2lkdGg6IDcwcHg7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQTE2MjA3O1xcbiAgICBjb2xvcjogd2hpdGU7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLmFkZC1wcm9qZWN0LWRpYWxvZyAuYWRkLWJ1dHRvbjpob3ZlciB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTYxLCA5OCwgNywgMC44KTtcXG59XFxuXFxuLmFkZC1wcm9qZWN0LWRpYWxvZyAuYWRkLWJ1dHRvbjplbmFibGVkOmFjdGl2ZSB7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45NSk7XFxufVxcblxcbi5hZGQtcHJvamVjdC1kaWFsb2cgLmFkZC1idXR0b246ZGlzYWJsZWQge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE2MSwgOTgsIDcsIDAuNSk7XFxufSBcXG5cXG5cXG5cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYC5hZGQtdGFzay1jYXJkIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtaW4td2lkdGg6IDQwMHB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBnYXA6IDEwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzljYTNhZjtcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgIHBhZGRpbmc6IDEwcHg7XG59XG5cbi5hZGQtdGFzay1jYXJkID4gOmZpcnN0LWNoaWxkIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBmb250LXdlaWdodDogOTAwO1xufVxuXG4uYWRkLXRhc2stY2FyZCA+IDpmaXJzdC1jaGlsZFtjb250ZW50ZWRpdGFibGVdOmVtcHR5OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJUYXNrIG5hbWVcIjtcbiAgICBjb2xvcjogIzhlOGU4ZTtcbn1cblxuLmFkZC10YXNrLWNhcmQgPiA6bnRoLWNoaWxkKDIpIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgZm9udC13ZWlnaHQ6IDIwMDtcbn1cblxuLmFkZC10YXNrLWNhcmQgPiA6bnRoLWNoaWxkKDIpW2NvbnRlbnRlZGl0YWJsZV06ZW1wdHk6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIkRlc2NyaXB0aW9uXCI7XG4gICAgY29sb3I6ICM4ZThlOGU7XG59XG5cbi5hZGQtdGFzay1jYXJkIC5taWRkbGUtcm93IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGdhcDogMzBweDtcbn1cblxuLmFkZC10YXNrLWNhcmQgLm1pZGRsZS1yb3cgPiAqIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGdhcDogMTBweDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBhZGRpbmctYm90dG9tOiA1cHg7XG59XG5cbi8qIERhdGUgcGlja2VyICovXG4uYWRkLXRhc2stY2FyZCAubWlkZGxlLXJvdyBpbnB1dCB7XG4gICAgbWluLWhlaWdodDogMjVweDtcbn1cblxuLyogUHJpb3JpdHkgZHJvcGRvd24gKi9cbi5hZGQtdGFzay1jYXJkIC5taWRkbGUtcm93IHNlbGVjdCB7XG4gICAgbWluLWhlaWdodDogMjVweDtcbn1cblxuLmFkZC10YXNrLWNhcmQgLmJvdHRvbS1yb3cge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTVlN2ViO1xuICAgIHBhZGRpbmctdG9wOiAxMHB4O1xufVxuXG4vKiBQcm9qZWN0IGRyb3Bkb3duICovXG4uYWRkLXRhc2stY2FyZCAuYm90dG9tLXJvdyBzZWxlY3Qge1xuICAgIGhlaWdodDogMzBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xufVxuXG4uYWRkLXRhc2stY2FyZCAuYm90dG9tLXJvdyBzZWxlY3Q6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTE1LCAxMTUsIDExNSwgMC4xKTtcbn1cblxuLyogVGhlIGJ1dHRvbnMgYXQgdGhlIGVuZCBvZiBjYXJkICovXG4uYWRkLXRhc2stY2FyZCAuYm90dG9tLXJvdyA+IDpsYXN0LWNoaWxkIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGdhcDogMTBweDtcbn1cblxuLyogQ2FuY2VsIGJ1dHRvbiAqL1xuLmFkZC10YXNrLWNhcmQgLmNhbmNlbC1idXR0b24ge1xuICAgIGhlaWdodDogMzBweDtcbiAgICB3aWR0aDogNzBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTE1LCAxMTUsIDExNSwgMC4xKTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5hZGQtdGFzay1jYXJkIC5jYW5jZWwtYnV0dG9uOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDExNSwgMTE1LCAxMTUsIDAuMik7XG59XG5cbi5hZGQtdGFzay1jYXJkIC5jYW5jZWwtYnV0dG9uOmFjdGl2ZSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk1KTtcbn1cblxuLyogQWRkIGJ1dHRvbiAqL1xuLmFkZC10YXNrLWNhcmQgLmFkZC1idXR0b24ge1xuICAgIGhlaWdodDogMzBweDtcbiAgICB3aWR0aDogNzBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNBMTYyMDc7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmFkZC10YXNrLWNhcmQgLmFkZC1idXR0b246aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTYxLCA5OCwgNywgMC44KTtcbn1cblxuLmFkZC10YXNrLWNhcmQgLmFkZC1idXR0b246ZW5hYmxlZDphY3RpdmUge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45NSk7XG59XG5cbi5hZGQtdGFzay1jYXJkIC5hZGQtYnV0dG9uOmRpc2FibGVkIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE2MSwgOTgsIDcsIDAuNSk7XG59YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvbW9kdWxlcy9jb21wb25lbnRzL2FkZFRhc2tDYXJkL2FkZFRhc2tDYXJkLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLFdBQVc7SUFDWCxnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixTQUFTO0lBQ1QseUJBQXlCO0lBQ3pCLG1CQUFtQjtJQUNuQixhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixhQUFhO0lBQ2IsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksb0JBQW9CO0lBQ3BCLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsWUFBWTtJQUNaLGFBQWE7SUFDYixlQUFlO0lBQ2YsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksc0JBQXNCO0lBQ3RCLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsU0FBUztBQUNiOztBQUVBO0lBQ0ksYUFBYTtJQUNiLFNBQVM7SUFDVCxtQkFBbUI7SUFDbkIsbUJBQW1CO0FBQ3ZCOztBQUVBLGdCQUFnQjtBQUNoQjtJQUNJLGdCQUFnQjtBQUNwQjs7QUFFQSxzQkFBc0I7QUFDdEI7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsOEJBQThCO0lBQzlCLDZCQUE2QjtJQUM3QixpQkFBaUI7QUFDckI7O0FBRUEscUJBQXFCO0FBQ3JCO0lBQ0ksWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osYUFBYTtJQUNiLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLDBDQUEwQztBQUM5Qzs7QUFFQSxtQ0FBbUM7QUFDbkM7SUFDSSxhQUFhO0lBQ2IsU0FBUztBQUNiOztBQUVBLGtCQUFrQjtBQUNsQjtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWiwwQ0FBMEM7SUFDMUMsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLDBDQUEwQztBQUM5Qzs7QUFFQTtJQUNJLHNCQUFzQjtBQUMxQjs7QUFFQSxlQUFlO0FBQ2Y7SUFDSSxZQUFZO0lBQ1osV0FBVztJQUNYLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1oseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixlQUFlO0FBQ25COztBQUVBO0lBQ0ksdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksdUNBQXVDO0FBQzNDXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5hZGQtdGFzay1jYXJkIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIG1pbi13aWR0aDogNDAwcHg7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGdhcDogMTBweDtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgIzljYTNhZjtcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG4gICAgcGFkZGluZzogMTBweDtcXG59XFxuXFxuLmFkZC10YXNrLWNhcmQgPiA6Zmlyc3QtY2hpbGQge1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBvdXRsaW5lOiBub25lO1xcbiAgICBmb250LXdlaWdodDogOTAwO1xcbn1cXG5cXG4uYWRkLXRhc2stY2FyZCA+IDpmaXJzdC1jaGlsZFtjb250ZW50ZWRpdGFibGVdOmVtcHR5OmJlZm9yZSB7XFxuICAgIGNvbnRlbnQ6IFxcXCJUYXNrIG5hbWVcXFwiO1xcbiAgICBjb2xvcjogIzhlOGU4ZTtcXG59XFxuXFxuLmFkZC10YXNrLWNhcmQgPiA6bnRoLWNoaWxkKDIpIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgb3V0bGluZTogbm9uZTtcXG4gICAgZm9udC1zaXplOiAxNHB4O1xcbiAgICBmb250LXdlaWdodDogMjAwO1xcbn1cXG5cXG4uYWRkLXRhc2stY2FyZCA+IDpudGgtY2hpbGQoMilbY29udGVudGVkaXRhYmxlXTplbXB0eTpiZWZvcmUge1xcbiAgICBjb250ZW50OiBcXFwiRGVzY3JpcHRpb25cXFwiO1xcbiAgICBjb2xvcjogIzhlOGU4ZTtcXG59XFxuXFxuLmFkZC10YXNrLWNhcmQgLm1pZGRsZS1yb3cge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBnYXA6IDMwcHg7XFxufVxcblxcbi5hZGQtdGFzay1jYXJkIC5taWRkbGUtcm93ID4gKiB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGdhcDogMTBweDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgcGFkZGluZy1ib3R0b206IDVweDtcXG59XFxuXFxuLyogRGF0ZSBwaWNrZXIgKi9cXG4uYWRkLXRhc2stY2FyZCAubWlkZGxlLXJvdyBpbnB1dCB7XFxuICAgIG1pbi1oZWlnaHQ6IDI1cHg7XFxufVxcblxcbi8qIFByaW9yaXR5IGRyb3Bkb3duICovXFxuLmFkZC10YXNrLWNhcmQgLm1pZGRsZS1yb3cgc2VsZWN0IHtcXG4gICAgbWluLWhlaWdodDogMjVweDtcXG59XFxuXFxuLmFkZC10YXNrLWNhcmQgLmJvdHRvbS1yb3cge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTVlN2ViO1xcbiAgICBwYWRkaW5nLXRvcDogMTBweDtcXG59XFxuXFxuLyogUHJvamVjdCBkcm9wZG93biAqL1xcbi5hZGQtdGFzay1jYXJkIC5ib3R0b20tcm93IHNlbGVjdCB7XFxuICAgIGhlaWdodDogMzBweDtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIG91dGxpbmU6IG5vbmU7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG59XFxuXFxuLmFkZC10YXNrLWNhcmQgLmJvdHRvbS1yb3cgc2VsZWN0OmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMTUsIDExNSwgMTE1LCAwLjEpO1xcbn1cXG5cXG4vKiBUaGUgYnV0dG9ucyBhdCB0aGUgZW5kIG9mIGNhcmQgKi9cXG4uYWRkLXRhc2stY2FyZCAuYm90dG9tLXJvdyA+IDpsYXN0LWNoaWxkIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZ2FwOiAxMHB4O1xcbn1cXG5cXG4vKiBDYW5jZWwgYnV0dG9uICovXFxuLmFkZC10YXNrLWNhcmQgLmNhbmNlbC1idXR0b24ge1xcbiAgICBoZWlnaHQ6IDMwcHg7XFxuICAgIHdpZHRoOiA3MHB4O1xcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMTUsIDExNSwgMTE1LCAwLjEpO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5hZGQtdGFzay1jYXJkIC5jYW5jZWwtYnV0dG9uOmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMTUsIDExNSwgMTE1LCAwLjIpO1xcbn1cXG5cXG4uYWRkLXRhc2stY2FyZCAuY2FuY2VsLWJ1dHRvbjphY3RpdmUge1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOTUpO1xcbn1cXG5cXG4vKiBBZGQgYnV0dG9uICovXFxuLmFkZC10YXNrLWNhcmQgLmFkZC1idXR0b24ge1xcbiAgICBoZWlnaHQ6IDMwcHg7XFxuICAgIHdpZHRoOiA3MHB4O1xcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0ExNjIwNztcXG4gICAgY29sb3I6IHdoaXRlO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5hZGQtdGFzay1jYXJkIC5hZGQtYnV0dG9uOmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNjEsIDk4LCA3LCAwLjgpO1xcbn1cXG5cXG4uYWRkLXRhc2stY2FyZCAuYWRkLWJ1dHRvbjplbmFibGVkOmFjdGl2ZSB7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45NSk7XFxufVxcblxcbi5hZGQtdGFzay1jYXJkIC5hZGQtYnV0dG9uOmRpc2FibGVkIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNjEsIDk4LCA3LCAwLjUpO1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYC5kZWxldGUtcHJvamVjdC1kaWFsb2cge1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgZ3JleTtcbiAgICB3aWR0aDogNDAwcHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRvcDogLTMwJTtcbn1cblxuLmRlbGV0ZS1wcm9qZWN0LWRpYWxvZzo6YmFja2Ryb3Age1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTtcbn1cblxuLmRlbGV0ZS1wcm9qZWN0LWRpYWxvZyA+IGRpdiB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGdhcDogMTBweDtcbn1cblxuLmRlbGV0ZS1wcm9qZWN0LWRpYWxvZyAuaGVhZGVyIHtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgZm9udC13ZWlnaHQ6IDkwMDtcbn1cblxuLmRlbGV0ZS1wcm9qZWN0LWRpYWxvZyAubWVzc2FnZSBzcGFuOmZpcnN0LWNoaWxkIHtcbiAgICBmb250LXdlaWdodDogOTAwO1xufVxuXG4uZGVsZXRlLXByb2plY3QtZGlhbG9nIC5ib3R0b20tcm93IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgZ2FwOiAxMHB4O1xufVxuXG4uZGVsZXRlLXByb2plY3QtZGlhbG9nIC5jYW5jZWwtYnV0dG9uIHtcbiAgICBoZWlnaHQ6IDMwcHg7XG4gICAgd2lkdGg6IDcwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDExNSwgMTE1LCAxMTUsIDAuMSk7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uZGVsZXRlLXByb2plY3QtZGlhbG9nIC5jYW5jZWwtYnV0dG9uOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDExNSwgMTE1LCAxMTUsIDAuMik7XG59XG5cbi5kZWxldGUtcHJvamVjdC1kaWFsb2cgLmNhbmNlbC1idXR0b246YWN0aXZlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOTUpO1xufVxuXG4uZGVsZXRlLXByb2plY3QtZGlhbG9nIC5kZWxldGUtYnV0dG9uIHtcbiAgICBoZWlnaHQ6IDMwcHg7XG4gICAgd2lkdGg6IDcwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQTE2MjA3O1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5kZWxldGUtcHJvamVjdC1kaWFsb2cgLmRlbGV0ZS1idXR0b246aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTYxLCA5OCwgNywgMC44KTtcbn1cblxuLmRlbGV0ZS1wcm9qZWN0LWRpYWxvZyAuZGVsZXRlLWJ1dHRvbjplbmFibGVkOmFjdGl2ZSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk1KTtcbn1cblxuLmRlbGV0ZS1wcm9qZWN0LWRpYWxvZyAuZGVsZXRlLWJ1dHRvbjpkaXNhYmxlZCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNjEsIDk4LCA3LCAwLjUpO1xufVxuXG5cblxuXG5gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9tb2R1bGVzL2NvbXBvbmVudHMvZGVsZXRlUHJvamVjdERpYWxvZy9kZWxldGVQcm9qZWN0RGlhbG9nLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLG1CQUFtQjtJQUNuQixzQkFBc0I7SUFDdEIsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixTQUFTO0FBQ2I7O0FBRUE7SUFDSSxvQ0FBb0M7QUFDeEM7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFNBQVM7QUFDYjs7QUFFQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IseUJBQXlCO0lBQ3pCLFNBQVM7QUFDYjs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWiwwQ0FBMEM7SUFDMUMsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLDBDQUEwQztBQUM5Qzs7QUFFQTtJQUNJLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWix5QkFBeUI7SUFDekIsWUFBWTtJQUNaLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSx1Q0FBdUM7QUFDM0M7O0FBRUE7SUFDSSxzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSx1Q0FBdUM7QUFDM0NcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmRlbGV0ZS1wcm9qZWN0LWRpYWxvZyB7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGdyZXk7XFxuICAgIHdpZHRoOiA0MDBweDtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICB0b3A6IC0zMCU7XFxufVxcblxcbi5kZWxldGUtcHJvamVjdC1kaWFsb2c6OmJhY2tkcm9wIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xcbn1cXG5cXG4uZGVsZXRlLXByb2plY3QtZGlhbG9nID4gZGl2IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiAxMHB4O1xcbn1cXG5cXG4uZGVsZXRlLXByb2plY3QtZGlhbG9nIC5oZWFkZXIge1xcbiAgICBmb250LXNpemU6IDIwcHg7XFxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XFxufVxcblxcbi5kZWxldGUtcHJvamVjdC1kaWFsb2cgLm1lc3NhZ2Ugc3BhbjpmaXJzdC1jaGlsZCB7XFxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XFxufVxcblxcbi5kZWxldGUtcHJvamVjdC1kaWFsb2cgLmJvdHRvbS1yb3cge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xcbiAgICBnYXA6IDEwcHg7XFxufVxcblxcbi5kZWxldGUtcHJvamVjdC1kaWFsb2cgLmNhbmNlbC1idXR0b24ge1xcbiAgICBoZWlnaHQ6IDMwcHg7XFxuICAgIHdpZHRoOiA3MHB4O1xcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMTUsIDExNSwgMTE1LCAwLjEpO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5kZWxldGUtcHJvamVjdC1kaWFsb2cgLmNhbmNlbC1idXR0b246aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDExNSwgMTE1LCAxMTUsIDAuMik7XFxufVxcblxcbi5kZWxldGUtcHJvamVjdC1kaWFsb2cgLmNhbmNlbC1idXR0b246YWN0aXZlIHtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk1KTtcXG59XFxuXFxuLmRlbGV0ZS1wcm9qZWN0LWRpYWxvZyAuZGVsZXRlLWJ1dHRvbiB7XFxuICAgIGhlaWdodDogMzBweDtcXG4gICAgd2lkdGg6IDcwcHg7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQTE2MjA3O1xcbiAgICBjb2xvcjogd2hpdGU7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLmRlbGV0ZS1wcm9qZWN0LWRpYWxvZyAuZGVsZXRlLWJ1dHRvbjpob3ZlciB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTYxLCA5OCwgNywgMC44KTtcXG59XFxuXFxuLmRlbGV0ZS1wcm9qZWN0LWRpYWxvZyAuZGVsZXRlLWJ1dHRvbjplbmFibGVkOmFjdGl2ZSB7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45NSk7XFxufVxcblxcbi5kZWxldGUtcHJvamVjdC1kaWFsb2cgLmRlbGV0ZS1idXR0b246ZGlzYWJsZWQge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE2MSwgOTgsIDcsIDAuNSk7XFxufVxcblxcblxcblxcblxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgLmRlbGV0ZS10YXNrLWRpYWxvZyB7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBncmV5O1xuICAgIHdpZHRoOiA0MDBweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiAtMzAlO1xufVxuXG4uZGVsZXRlLXRhc2stZGlhbG9nOjpiYWNrZHJvcCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xufVxuXG4uZGVsZXRlLXRhc2stZGlhbG9nID4gZGl2IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgZ2FwOiAxMHB4O1xufVxuXG4uZGVsZXRlLXRhc2stZGlhbG9nIC5oZWFkZXIge1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBmb250LXdlaWdodDogOTAwO1xufVxuXG4uZGVsZXRlLXRhc2stZGlhbG9nIC5tZXNzYWdlIHtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG59XG5cbi5kZWxldGUtdGFzay1kaWFsb2cgLm1lc3NhZ2Ugc3BhbjpmaXJzdC1jaGlsZCB7XG4gICAgZm9udC13ZWlnaHQ6IDkwMDtcbn1cblxuLmRlbGV0ZS10YXNrLWRpYWxvZyAuYm90dG9tLXJvdyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgIGdhcDogMTBweDtcbn1cblxuLmRlbGV0ZS10YXNrLWRpYWxvZyAuY2FuY2VsLWJ1dHRvbiB7XG4gICAgaGVpZ2h0OiAzMHB4O1xuICAgIHdpZHRoOiA3MHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMTUsIDExNSwgMTE1LCAwLjEpO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmRlbGV0ZS10YXNrLWRpYWxvZyAuY2FuY2VsLWJ1dHRvbjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMTUsIDExNSwgMTE1LCAwLjIpO1xufVxuXG4uZGVsZXRlLXRhc2stZGlhbG9nIC5jYW5jZWwtYnV0dG9uOmFjdGl2ZSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk1KTtcbn1cblxuLmRlbGV0ZS10YXNrLWRpYWxvZyAuZGVsZXRlLWJ1dHRvbiB7XG4gICAgaGVpZ2h0OiAzMHB4O1xuICAgIHdpZHRoOiA3MHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0ExNjIwNztcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uZGVsZXRlLXRhc2stZGlhbG9nIC5kZWxldGUtYnV0dG9uOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE2MSwgOTgsIDcsIDAuOCk7XG59XG5cbi5kZWxldGUtdGFzay1kaWFsb2cgLmRlbGV0ZS1idXR0b246ZW5hYmxlZDphY3RpdmUge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45NSk7XG59XG5cbi5kZWxldGUtdGFzay1kaWFsb2cgLmRlbGV0ZS1idXR0b246ZGlzYWJsZWQge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTYxLCA5OCwgNywgMC41KTtcbn1cblxuXG5cblxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvbW9kdWxlcy9jb21wb25lbnRzL2RlbGV0ZVRhc2tEaWFsb2cvZGVsZXRlVGFza0RpYWxvZy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxtQkFBbUI7SUFDbkIsc0JBQXNCO0lBQ3RCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsU0FBUztBQUNiOztBQUVBO0lBQ0ksb0NBQW9DO0FBQ3hDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixTQUFTO0FBQ2I7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksbUJBQW1CO0lBQ25CLGdCQUFnQjtJQUNoQix1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IseUJBQXlCO0lBQ3pCLFNBQVM7QUFDYjs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWiwwQ0FBMEM7SUFDMUMsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLDBDQUEwQztBQUM5Qzs7QUFFQTtJQUNJLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWix5QkFBeUI7SUFDekIsWUFBWTtJQUNaLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSx1Q0FBdUM7QUFDM0M7O0FBRUE7SUFDSSxzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSx1Q0FBdUM7QUFDM0NcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmRlbGV0ZS10YXNrLWRpYWxvZyB7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGdyZXk7XFxuICAgIHdpZHRoOiA0MDBweDtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICB0b3A6IC0zMCU7XFxufVxcblxcbi5kZWxldGUtdGFzay1kaWFsb2c6OmJhY2tkcm9wIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xcbn1cXG5cXG4uZGVsZXRlLXRhc2stZGlhbG9nID4gZGl2IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiAxMHB4O1xcbn1cXG5cXG4uZGVsZXRlLXRhc2stZGlhbG9nIC5oZWFkZXIge1xcbiAgICBmb250LXNpemU6IDIwcHg7XFxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XFxufVxcblxcbi5kZWxldGUtdGFzay1kaWFsb2cgLm1lc3NhZ2Uge1xcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcXG59XFxuXFxuLmRlbGV0ZS10YXNrLWRpYWxvZyAubWVzc2FnZSBzcGFuOmZpcnN0LWNoaWxkIHtcXG4gICAgZm9udC13ZWlnaHQ6IDkwMDtcXG59XFxuXFxuLmRlbGV0ZS10YXNrLWRpYWxvZyAuYm90dG9tLXJvdyB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XFxuICAgIGdhcDogMTBweDtcXG59XFxuXFxuLmRlbGV0ZS10YXNrLWRpYWxvZyAuY2FuY2VsLWJ1dHRvbiB7XFxuICAgIGhlaWdodDogMzBweDtcXG4gICAgd2lkdGg6IDcwcHg7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDExNSwgMTE1LCAxMTUsIDAuMSk7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLmRlbGV0ZS10YXNrLWRpYWxvZyAuY2FuY2VsLWJ1dHRvbjpob3ZlciB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTE1LCAxMTUsIDExNSwgMC4yKTtcXG59XFxuXFxuLmRlbGV0ZS10YXNrLWRpYWxvZyAuY2FuY2VsLWJ1dHRvbjphY3RpdmUge1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOTUpO1xcbn1cXG5cXG4uZGVsZXRlLXRhc2stZGlhbG9nIC5kZWxldGUtYnV0dG9uIHtcXG4gICAgaGVpZ2h0OiAzMHB4O1xcbiAgICB3aWR0aDogNzBweDtcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNBMTYyMDc7XFxuICAgIGNvbG9yOiB3aGl0ZTtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uZGVsZXRlLXRhc2stZGlhbG9nIC5kZWxldGUtYnV0dG9uOmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNjEsIDk4LCA3LCAwLjgpO1xcbn1cXG5cXG4uZGVsZXRlLXRhc2stZGlhbG9nIC5kZWxldGUtYnV0dG9uOmVuYWJsZWQ6YWN0aXZlIHtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk1KTtcXG59XFxuXFxuLmRlbGV0ZS10YXNrLWRpYWxvZyAuZGVsZXRlLWJ1dHRvbjpkaXNhYmxlZCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTYxLCA5OCwgNywgMC41KTtcXG59XFxuXFxuXFxuXFxuXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAuZWRpdC1wcm9qZWN0LWRpYWxvZyB7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBncmV5O1xuICAgIHdpZHRoOiAzMDBweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiAtMzAlO1xufVxuXG4uZWRpdC1wcm9qZWN0LWRpYWxvZzo6YmFja2Ryb3Age1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTtcbn1cblxuLmVkaXQtcHJvamVjdC1kaWFsb2cgPiBmb3JtIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgZ2FwOiAxMHB4O1xufVxuXG4uZWRpdC1wcm9qZWN0LWRpYWxvZyAuaGVhZGVyIHtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgZm9udC13ZWlnaHQ6IDkwMDtcbn1cblxuIFxuLmVkaXQtcHJvamVjdC1kaWFsb2cgZm9ybS1maWVsZCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGdhcDogNXB4O1xufVxuXG5cbi5lZGl0LXByb2plY3QtZGlhbG9nIGlucHV0IHtcbiAgICBoZWlnaHQ6IDMwcHg7XG4gICAgd2lkdGg6IG1heCgxMDAlLCAyMDBweCk7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XG59XG5cbi5lZGl0LXByb2plY3QtZGlhbG9nIGlucHV0OmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIGdyZXk7XG59XG5cbi5lZGl0LXByb2plY3QtZGlhbG9nIC5lcnJvci1tZXNzYWdlIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgY29sb3I6IHJlZDtcbiAgICBoZWlnaHQ6IDE0cHg7XG59XG5cbi5lZGl0LXByb2plY3QtZGlhbG9nIC5idXR0b25zIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgZ2FwOiAxMHB4O1xufVxuXG4uZWRpdC1wcm9qZWN0LWRpYWxvZyAuY2FuY2VsLWJ1dHRvbiB7XG4gICAgaGVpZ2h0OiAzMHB4O1xuICAgIHdpZHRoOiA3MHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMTUsIDExNSwgMTE1LCAwLjEpO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmVkaXQtcHJvamVjdC1kaWFsb2cgLmNhbmNlbC1idXR0b246aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTE1LCAxMTUsIDExNSwgMC4yKTtcbn1cblxuLmVkaXQtcHJvamVjdC1kaWFsb2cgLmNhbmNlbC1idXR0b246YWN0aXZlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOTUpO1xufVxuXG4uZWRpdC1wcm9qZWN0LWRpYWxvZyAuc2F2ZS1idXR0b24ge1xuICAgIGhlaWdodDogMzBweDtcbiAgICB3aWR0aDogNzBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNBMTYyMDc7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmVkaXQtcHJvamVjdC1kaWFsb2cgLnNhdmUtYnV0dG9uOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE2MSwgOTgsIDcsIDAuOCk7XG59XG5cbi5lZGl0LXByb2plY3QtZGlhbG9nIC5zYXZlLWJ1dHRvbjplbmFibGVkOmFjdGl2ZSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk1KTtcbn1cblxuLmVkaXQtcHJvamVjdC1kaWFsb2cgLnNhdmUtYnV0dG9uOmRpc2FibGVkIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE2MSwgOTgsIDcsIDAuNSk7XG59IFxuXG5cblxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvbW9kdWxlcy9jb21wb25lbnRzL2VkaXRQcm9qZWN0RGlhbG9nL2VkaXRQcm9qZWN0RGlhbG9nLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLG1CQUFtQjtJQUNuQixzQkFBc0I7SUFDdEIsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixTQUFTO0FBQ2I7O0FBRUE7SUFDSSxvQ0FBb0M7QUFDeEM7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFNBQVM7QUFDYjs7QUFFQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7QUFDcEI7OztBQUdBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixRQUFRO0FBQ1o7OztBQUdBO0lBQ0ksWUFBWTtJQUNaLHVCQUF1QjtJQUN2QixrQkFBa0I7SUFDbEIsc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLGVBQWU7SUFDZixVQUFVO0lBQ1YsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLGFBQWE7SUFDYix5QkFBeUI7SUFDekIsU0FBUztBQUNiOztBQUVBO0lBQ0ksWUFBWTtJQUNaLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLDBDQUEwQztJQUMxQyxlQUFlO0FBQ25COztBQUVBO0lBQ0ksMENBQTBDO0FBQzlDOztBQUVBO0lBQ0ksc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osZUFBZTtBQUNuQjs7QUFFQTtJQUNJLHVDQUF1QztBQUMzQzs7QUFFQTtJQUNJLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLHVDQUF1QztBQUMzQ1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuZWRpdC1wcm9qZWN0LWRpYWxvZyB7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGdyZXk7XFxuICAgIHdpZHRoOiAzMDBweDtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICB0b3A6IC0zMCU7XFxufVxcblxcbi5lZGl0LXByb2plY3QtZGlhbG9nOjpiYWNrZHJvcCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTtcXG59XFxuXFxuLmVkaXQtcHJvamVjdC1kaWFsb2cgPiBmb3JtIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiAxMHB4O1xcbn1cXG5cXG4uZWRpdC1wcm9qZWN0LWRpYWxvZyAuaGVhZGVyIHtcXG4gICAgZm9udC1zaXplOiAyMHB4O1xcbiAgICBmb250LXdlaWdodDogOTAwO1xcbn1cXG5cXG4gXFxuLmVkaXQtcHJvamVjdC1kaWFsb2cgZm9ybS1maWVsZCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGdhcDogNXB4O1xcbn1cXG5cXG5cXG4uZWRpdC1wcm9qZWN0LWRpYWxvZyBpbnB1dCB7XFxuICAgIGhlaWdodDogMzBweDtcXG4gICAgd2lkdGg6IG1heCgxMDAlLCAyMDBweCk7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcXG59XFxuXFxuLmVkaXQtcHJvamVjdC1kaWFsb2cgaW5wdXQ6Zm9jdXMge1xcbiAgICBvdXRsaW5lOiBub25lO1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCBncmV5O1xcbn1cXG5cXG4uZWRpdC1wcm9qZWN0LWRpYWxvZyAuZXJyb3ItbWVzc2FnZSB7XFxuICAgIGZvbnQtc2l6ZTogMTRweDtcXG4gICAgY29sb3I6IHJlZDtcXG4gICAgaGVpZ2h0OiAxNHB4O1xcbn1cXG5cXG4uZWRpdC1wcm9qZWN0LWRpYWxvZyAuYnV0dG9ucyB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XFxuICAgIGdhcDogMTBweDtcXG59XFxuXFxuLmVkaXQtcHJvamVjdC1kaWFsb2cgLmNhbmNlbC1idXR0b24ge1xcbiAgICBoZWlnaHQ6IDMwcHg7XFxuICAgIHdpZHRoOiA3MHB4O1xcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMTUsIDExNSwgMTE1LCAwLjEpO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5lZGl0LXByb2plY3QtZGlhbG9nIC5jYW5jZWwtYnV0dG9uOmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMTUsIDExNSwgMTE1LCAwLjIpO1xcbn1cXG5cXG4uZWRpdC1wcm9qZWN0LWRpYWxvZyAuY2FuY2VsLWJ1dHRvbjphY3RpdmUge1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOTUpO1xcbn1cXG5cXG4uZWRpdC1wcm9qZWN0LWRpYWxvZyAuc2F2ZS1idXR0b24ge1xcbiAgICBoZWlnaHQ6IDMwcHg7XFxuICAgIHdpZHRoOiA3MHB4O1xcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0ExNjIwNztcXG4gICAgY29sb3I6IHdoaXRlO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5lZGl0LXByb2plY3QtZGlhbG9nIC5zYXZlLWJ1dHRvbjpob3ZlciB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTYxLCA5OCwgNywgMC44KTtcXG59XFxuXFxuLmVkaXQtcHJvamVjdC1kaWFsb2cgLnNhdmUtYnV0dG9uOmVuYWJsZWQ6YWN0aXZlIHtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk1KTtcXG59XFxuXFxuLmVkaXQtcHJvamVjdC1kaWFsb2cgLnNhdmUtYnV0dG9uOmRpc2FibGVkIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNjEsIDk4LCA3LCAwLjUpO1xcbn0gXFxuXFxuXFxuXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAuZWRpdC10YXNrLWRpYWxvZyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRvcDogLTMwJTtcbiAgICBtaW4td2lkdGg6IDUwMHB4O1xuICAgIG1heC13aWR0aDogNTAwcHg7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIGdyZXk7XG59XG5cbi5lZGl0LXRhc2stZGlhbG9nOjpiYWNrZHJvcCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xufVxuXG4uZWRpdC10YXNrLWRpYWxvZyA+IGRpdiB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGdhcDogMTBweDtcbiAgICBwYWRkaW5nOiAxMHB4O1xufVxuXG4uZWRpdC10YXNrLWRpYWxvZyA+IGRpdiA+IDpmaXJzdC1jaGlsZCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgZm9udC13ZWlnaHQ6IDkwMDtcbn1cblxuLmVkaXQtdGFzay1kaWFsb2cgPiBkaXYgPiA6Zmlyc3QtY2hpbGRbY29udGVudGVkaXRhYmxlXTplbXB0eTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiVGFzayBuYW1lXCI7XG4gICAgY29sb3I6ICM4ZThlOGU7XG59XG5cbi5lZGl0LXRhc2stZGlhbG9nID4gZGl2ID4gOm50aC1jaGlsZCgyKSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGZvbnQtd2VpZ2h0OiAyMDA7XG59XG5cbi5lZGl0LXRhc2stZGlhbG9nID4gZGl2ID4gOm50aC1jaGlsZCgyKVtjb250ZW50ZWRpdGFibGVdOmVtcHR5OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJEZXNjcmlwdGlvblwiO1xuICAgIGNvbG9yOiAjOGU4ZThlO1xufVxuXG4uZWRpdC10YXNrLWRpYWxvZyA+IGRpdiAubWlkZGxlLXJvdyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBnYXA6IDMwcHg7XG59XG5cbi5lZGl0LXRhc2stZGlhbG9nID4gZGl2IC5taWRkbGUtcm93ID4gKiB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBnYXA6IDEwcHg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nLWJvdHRvbTogNXB4O1xufVxuXG4vKiBEYXRlIHBpY2tlciAqL1xuLmVkaXQtdGFzay1kaWFsb2cgPiBkaXYgLm1pZGRsZS1yb3cgaW5wdXQge1xuICAgIG1pbi1oZWlnaHQ6IDI1cHg7XG59XG5cbi8qIFByaW9yaXR5IGRyb3Bkb3duICovXG4uZWRpdC10YXNrLWRpYWxvZyA+IGRpdiAubWlkZGxlLXJvdyBzZWxlY3Qge1xuICAgIG1pbi1oZWlnaHQ6IDI1cHg7XG59XG5cbi5lZGl0LXRhc2stZGlhbG9nID4gZGl2IC5ib3R0b20tcm93IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBib3JkZXItdG9wOiAxcHggc29saWQgI2U1ZTdlYjtcbiAgICBwYWRkaW5nLXRvcDogMTBweDtcbn1cblxuLyogUHJvamVjdCBkcm9wZG93biAqL1xuLmVkaXQtdGFzay1kaWFsb2cgPiBkaXYgLmJvdHRvbS1yb3cgc2VsZWN0IHtcbiAgICBoZWlnaHQ6IDMwcHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbn1cblxuLmVkaXQtdGFzay1kaWFsb2cgPiBkaXYgLmJvdHRvbS1yb3cgc2VsZWN0OmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDExNSwgMTE1LCAxMTUsIDAuMSk7XG59XG5cbi8qIFRoZSBidXR0b25zIGF0IHRoZSBlbmQgb2YgY2FyZCAqL1xuLmVkaXQtdGFzay1kaWFsb2cgPiBkaXYgLmJvdHRvbS1yb3cgPiA6bGFzdC1jaGlsZCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBnYXA6IDEwcHg7XG59XG5cbi8qIENhbmNlbCBidXR0b24gKi9cbi5lZGl0LXRhc2stZGlhbG9nIC5jYW5jZWwtYnV0dG9uIHtcbiAgICBoZWlnaHQ6IDMwcHg7XG4gICAgd2lkdGg6IDcwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDExNSwgMTE1LCAxMTUsIDAuMSk7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uZWRpdC10YXNrLWRpYWxvZyAuY2FuY2VsLWJ1dHRvbjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMTUsIDExNSwgMTE1LCAwLjIpO1xufVxuXG4uZWRpdC10YXNrLWRpYWxvZyAuY2FuY2VsLWJ1dHRvbjphY3RpdmUge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45NSk7XG59XG5cbi8qIFNhdmUgYnV0dG9uICovXG4uZWRpdC10YXNrLWRpYWxvZyAuc2F2ZS1idXR0b24ge1xuICAgIGhlaWdodDogMzBweDtcbiAgICB3aWR0aDogNzBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNBMTYyMDc7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmVkaXQtdGFzay1kaWFsb2cgLnNhdmUtYnV0dG9uOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE2MSwgOTgsIDcsIDAuOCk7XG59XG5cbi5lZGl0LXRhc2stZGlhbG9nIC5zYXZlLWJ1dHRvbjplbmFibGVkOmFjdGl2ZSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk1KTtcbn1cblxuLmVkaXQtdGFzay1kaWFsb2cgLnNhdmUtYnV0dG9uOmRpc2FibGVkIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE2MSwgOTgsIDcsIDAuNSk7XG59YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvbW9kdWxlcy9jb21wb25lbnRzL2VkaXRUYXNrRGlhbG9nL2VkaXRUYXNrRGlhbG9nLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1QsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLG9DQUFvQztBQUN4Qzs7QUFFQTtJQUNJLFdBQVc7SUFDWCxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFNBQVM7SUFDVCxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixhQUFhO0lBQ2IsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksb0JBQW9CO0lBQ3BCLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsWUFBWTtJQUNaLGFBQWE7SUFDYixlQUFlO0lBQ2YsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksc0JBQXNCO0lBQ3RCLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsU0FBUztBQUNiOztBQUVBO0lBQ0ksYUFBYTtJQUNiLFNBQVM7SUFDVCxtQkFBbUI7SUFDbkIsbUJBQW1CO0FBQ3ZCOztBQUVBLGdCQUFnQjtBQUNoQjtJQUNJLGdCQUFnQjtBQUNwQjs7QUFFQSxzQkFBc0I7QUFDdEI7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsOEJBQThCO0lBQzlCLDZCQUE2QjtJQUM3QixpQkFBaUI7QUFDckI7O0FBRUEscUJBQXFCO0FBQ3JCO0lBQ0ksWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osYUFBYTtJQUNiLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLDBDQUEwQztBQUM5Qzs7QUFFQSxtQ0FBbUM7QUFDbkM7SUFDSSxhQUFhO0lBQ2IsU0FBUztBQUNiOztBQUVBLGtCQUFrQjtBQUNsQjtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWiwwQ0FBMEM7SUFDMUMsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLDBDQUEwQztBQUM5Qzs7QUFFQTtJQUNJLHNCQUFzQjtBQUMxQjs7QUFFQSxnQkFBZ0I7QUFDaEI7SUFDSSxZQUFZO0lBQ1osV0FBVztJQUNYLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1oseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixlQUFlO0FBQ25COztBQUVBO0lBQ0ksdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksdUNBQXVDO0FBQzNDXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5lZGl0LXRhc2stZGlhbG9nIHtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICB0b3A6IC0zMCU7XFxuICAgIG1pbi13aWR0aDogNTAwcHg7XFxuICAgIG1heC13aWR0aDogNTAwcHg7XFxuICAgIHBhZGRpbmc6IDEwcHg7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGdyZXk7XFxufVxcblxcbi5lZGl0LXRhc2stZGlhbG9nOjpiYWNrZHJvcCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTtcXG59XFxuXFxuLmVkaXQtdGFzay1kaWFsb2cgPiBkaXYge1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiAxMHB4O1xcbiAgICBwYWRkaW5nOiAxMHB4O1xcbn1cXG5cXG4uZWRpdC10YXNrLWRpYWxvZyA+IGRpdiA+IDpmaXJzdC1jaGlsZCB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIG91dGxpbmU6IG5vbmU7XFxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XFxufVxcblxcbi5lZGl0LXRhc2stZGlhbG9nID4gZGl2ID4gOmZpcnN0LWNoaWxkW2NvbnRlbnRlZGl0YWJsZV06ZW1wdHk6YmVmb3JlIHtcXG4gICAgY29udGVudDogXFxcIlRhc2sgbmFtZVxcXCI7XFxuICAgIGNvbG9yOiAjOGU4ZThlO1xcbn1cXG5cXG4uZWRpdC10YXNrLWRpYWxvZyA+IGRpdiA+IDpudGgtY2hpbGQoMikge1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBvdXRsaW5lOiBub25lO1xcbiAgICBmb250LXNpemU6IDE0cHg7XFxuICAgIGZvbnQtd2VpZ2h0OiAyMDA7XFxufVxcblxcbi5lZGl0LXRhc2stZGlhbG9nID4gZGl2ID4gOm50aC1jaGlsZCgyKVtjb250ZW50ZWRpdGFibGVdOmVtcHR5OmJlZm9yZSB7XFxuICAgIGNvbnRlbnQ6IFxcXCJEZXNjcmlwdGlvblxcXCI7XFxuICAgIGNvbG9yOiAjOGU4ZThlO1xcbn1cXG5cXG4uZWRpdC10YXNrLWRpYWxvZyA+IGRpdiAubWlkZGxlLXJvdyB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGdhcDogMzBweDtcXG59XFxuXFxuLmVkaXQtdGFzay1kaWFsb2cgPiBkaXYgLm1pZGRsZS1yb3cgPiAqIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZ2FwOiAxMHB4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBwYWRkaW5nLWJvdHRvbTogNXB4O1xcbn1cXG5cXG4vKiBEYXRlIHBpY2tlciAqL1xcbi5lZGl0LXRhc2stZGlhbG9nID4gZGl2IC5taWRkbGUtcm93IGlucHV0IHtcXG4gICAgbWluLWhlaWdodDogMjVweDtcXG59XFxuXFxuLyogUHJpb3JpdHkgZHJvcGRvd24gKi9cXG4uZWRpdC10YXNrLWRpYWxvZyA+IGRpdiAubWlkZGxlLXJvdyBzZWxlY3Qge1xcbiAgICBtaW4taGVpZ2h0OiAyNXB4O1xcbn1cXG5cXG4uZWRpdC10YXNrLWRpYWxvZyA+IGRpdiAuYm90dG9tLXJvdyB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlNWU3ZWI7XFxuICAgIHBhZGRpbmctdG9wOiAxMHB4O1xcbn1cXG5cXG4vKiBQcm9qZWN0IGRyb3Bkb3duICovXFxuLmVkaXQtdGFzay1kaWFsb2cgPiBkaXYgLmJvdHRvbS1yb3cgc2VsZWN0IHtcXG4gICAgaGVpZ2h0OiAzMHB4O1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgb3V0bGluZTogbm9uZTtcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xcbn1cXG5cXG4uZWRpdC10YXNrLWRpYWxvZyA+IGRpdiAuYm90dG9tLXJvdyBzZWxlY3Q6aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDExNSwgMTE1LCAxMTUsIDAuMSk7XFxufVxcblxcbi8qIFRoZSBidXR0b25zIGF0IHRoZSBlbmQgb2YgY2FyZCAqL1xcbi5lZGl0LXRhc2stZGlhbG9nID4gZGl2IC5ib3R0b20tcm93ID4gOmxhc3QtY2hpbGQge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBnYXA6IDEwcHg7XFxufVxcblxcbi8qIENhbmNlbCBidXR0b24gKi9cXG4uZWRpdC10YXNrLWRpYWxvZyAuY2FuY2VsLWJ1dHRvbiB7XFxuICAgIGhlaWdodDogMzBweDtcXG4gICAgd2lkdGg6IDcwcHg7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDExNSwgMTE1LCAxMTUsIDAuMSk7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLmVkaXQtdGFzay1kaWFsb2cgLmNhbmNlbC1idXR0b246aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDExNSwgMTE1LCAxMTUsIDAuMik7XFxufVxcblxcbi5lZGl0LXRhc2stZGlhbG9nIC5jYW5jZWwtYnV0dG9uOmFjdGl2ZSB7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45NSk7XFxufVxcblxcbi8qIFNhdmUgYnV0dG9uICovXFxuLmVkaXQtdGFzay1kaWFsb2cgLnNhdmUtYnV0dG9uIHtcXG4gICAgaGVpZ2h0OiAzMHB4O1xcbiAgICB3aWR0aDogNzBweDtcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNBMTYyMDc7XFxuICAgIGNvbG9yOiB3aGl0ZTtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uZWRpdC10YXNrLWRpYWxvZyAuc2F2ZS1idXR0b246aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE2MSwgOTgsIDcsIDAuOCk7XFxufVxcblxcbi5lZGl0LXRhc2stZGlhbG9nIC5zYXZlLWJ1dHRvbjplbmFibGVkOmFjdGl2ZSB7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45NSk7XFxufVxcblxcbi5lZGl0LXRhc2stZGlhbG9nIC5zYXZlLWJ1dHRvbjpkaXNhYmxlZCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTYxLCA5OCwgNywgMC41KTtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAuaW5ib3gtcGFnZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgZ2FwOiA1MHB4O1xufVxuXG4uaW5ib3gtY29udGVudCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGdhcDogNTBweDtcbiAgICB3aWR0aDogNjAlO1xuICAgIHBhZGRpbmc6IDIwcHggMDtcbn1cblxuLmluYm94LWhlYWRlciB7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XG59XG5cbi5wcmlvcml0eS1zZWN0aW9uIHtcbiAgICB3aWR0aDogMTAwJTtcbn1cblxuLnByaW9yaXR5LWhlYWRlciB7XG4gICAgZm9udC13ZWlnaHQ6IDkwMDtcbn1cblxuLmFkZC10YXNrLWJ1dHRvbiB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgY29sb3I6ICM3ODcxNmM7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZ2FwOiAxMHB4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5hZGQtdGFzay1idXR0b24gPiA6Zmlyc3QtY2hpbGQge1xuICAgIGZvbnQtc2l6ZTogMjVweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5hZGQtdGFzay1idXR0b24gPiA6bnRoLWNoaWxkKDIpIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5hZGQtdGFzay1idXR0b246aG92ZXIge1xuICAgIGNvbG9yOiAjQTE2MjA3O1xufVxuXG4uYWRkLXRhc2stYnV0dG9uLWhpZGRlbiB7XG4gICAgZGlzcGxheTogbm9uZTtcbn1cbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL21vZHVsZXMvY29tcG9uZW50cy9pbmJveFBhZ2UvaW5ib3hQYWdlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0lBQ1osYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixTQUFTO0FBQ2I7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFNBQVM7SUFDVCxVQUFVO0lBQ1YsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixZQUFZO0lBQ1osZUFBZTtJQUNmLGNBQWM7SUFDZCxlQUFlO0lBQ2YsYUFBYTtJQUNiLFNBQVM7SUFDVCxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsYUFBYTtJQUNiLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksYUFBYTtBQUNqQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuaW5ib3gtcGFnZSB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBnYXA6IDUwcHg7XFxufVxcblxcbi5pbmJveC1jb250ZW50IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiA1MHB4O1xcbiAgICB3aWR0aDogNjAlO1xcbiAgICBwYWRkaW5nOiAyMHB4IDA7XFxufVxcblxcbi5pbmJveC1oZWFkZXIge1xcbiAgICBmb250LXNpemU6IDIwcHg7XFxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XFxufVxcblxcbi5wcmlvcml0eS1zZWN0aW9uIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxufVxcblxcbi5wcmlvcml0eS1oZWFkZXIge1xcbiAgICBmb250LXdlaWdodDogOTAwO1xcbn1cXG5cXG4uYWRkLXRhc2stYnV0dG9uIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIHRleHQtYWxpZ246IGxlZnQ7XFxuICAgIGJhY2tncm91bmQ6IG5vbmU7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBjb2xvcjogIzc4NzE2YztcXG4gICAgZm9udC1zaXplOiAxNHB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBnYXA6IDEwcHg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi5hZGQtdGFzay1idXR0b24gPiA6Zmlyc3QtY2hpbGQge1xcbiAgICBmb250LXNpemU6IDI1cHg7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi5hZGQtdGFzay1idXR0b24gPiA6bnRoLWNoaWxkKDIpIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLmFkZC10YXNrLWJ1dHRvbjpob3ZlciB7XFxuICAgIGNvbG9yOiAjQTE2MjA3O1xcbn1cXG5cXG4uYWRkLXRhc2stYnV0dG9uLWhpZGRlbiB7XFxuICAgIGRpc3BsYXk6IG5vbmU7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgLm5hdi1iYXIge1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0ExNjIwNztcbiAgICBjb2xvcjogI2U3ZTVlNDtcbiAgICBncmlkLWNvbHVtbjogMSAvIDM7XG59XG5cbi5sb2dvIHtcbiAgICB3aWR0aDogbWF4LWNvbnRlbnQ7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGdhcDogMTBweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5sb2dvID4gaW1nIHtcbiAgICB3aWR0aDogNTBweDtcbn1cblxuLmxvZ28gPiBkaXYge1xuICAgIGZvbnQtc2l6ZTogNDBweDtcbiAgICBmb250LXdlaWdodDogOTAwO1xufVxuXG5gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9tb2R1bGVzL2NvbXBvbmVudHMvbmF2QmFyL25hdkJhci5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxhQUFhO0lBQ2IseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixTQUFTO0lBQ1QsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7QUFDcEJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLm5hdi1iYXIge1xcbiAgICBwYWRkaW5nOiAyMHB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQTE2MjA3O1xcbiAgICBjb2xvcjogI2U3ZTVlNDtcXG4gICAgZ3JpZC1jb2x1bW46IDEgLyAzO1xcbn1cXG5cXG4ubG9nbyB7XFxuICAgIHdpZHRoOiBtYXgtY29udGVudDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ2FwOiAxMHB4O1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5sb2dvID4gaW1nIHtcXG4gICAgd2lkdGg6IDUwcHg7XFxufVxcblxcbi5sb2dvID4gZGl2IHtcXG4gICAgZm9udC1zaXplOiA0MHB4O1xcbiAgICBmb250LXdlaWdodDogOTAwO1xcbn1cXG5cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYGAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W10sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIlwiLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAuc2lkZS1iYXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBnYXA6IDIwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMDksIDIxMywgMjE5LCAwLjIpO1xuICAgIHBhZGRpbmc6IDMwcHggMjBweDtcbn1cblxuLmRlZmF1bHQtaXRlbXMge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLnByb2plY3RzIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbi5wcm9qZWN0cy1oZWFkZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7ICBcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IFxuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBwYWRkaW5nOiA1cHggNXB4IDVweCAwO1xufVxuXG4ucHJvamVjdHMtaGVhZGVyOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDExNSwgMTE1LCAxMTUsIDAuMSk7XG59XG5cbi5wcm9qZWN0cy1oZWFkZXIgPiBkaXYge1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBmb250LXdlaWdodDogOTAwO1xufVxuXG4uYWRkLXByb2plY3QtYnV0dG9uIHtcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGJvcmRlci1yYWRpdXM6IDJweDtcbn1cblxuLmFkZC1wcm9qZWN0LWJ1dHRvbjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG59XG5cbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL21vZHVsZXMvY29tcG9uZW50cy9zaWRlQmFyL3NpZGVCYXIuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixTQUFTO0lBQ1QsMENBQTBDO0lBQzFDLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLDhCQUE4QjtJQUM5QixlQUFlO0lBQ2Ysc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksMENBQTBDO0FBQzlDOztBQUVBO0lBQ0ksZUFBZTtJQUNmLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixZQUFZO0lBQ1osZUFBZTtJQUNmLGVBQWU7SUFDZixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSx1QkFBdUI7QUFDM0JcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLnNpZGUtYmFyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiAyMHB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIwOSwgMjEzLCAyMTksIDAuMik7XFxuICAgIHBhZGRpbmc6IDMwcHggMjBweDtcXG59XFxuXFxuLmRlZmF1bHQtaXRlbXMge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG5cXG4ucHJvamVjdHMge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG5cXG4ucHJvamVjdHMtaGVhZGVyIHtcXG4gICAgZGlzcGxheTogZmxleDsgIFxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IFxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIHBhZGRpbmc6IDVweCA1cHggNXB4IDA7XFxufVxcblxcbi5wcm9qZWN0cy1oZWFkZXI6aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDExNSwgMTE1LCAxMTUsIDAuMSk7XFxufVxcblxcbi5wcm9qZWN0cy1oZWFkZXIgPiBkaXYge1xcbiAgICBmb250LXNpemU6IDIwcHg7XFxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XFxufVxcblxcbi5hZGQtcHJvamVjdC1idXR0b24ge1xcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGZvbnQtc2l6ZTogMjBweDtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBib3JkZXItcmFkaXVzOiAycHg7XFxufVxcblxcbi5hZGQtcHJvamVjdC1idXR0b246aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG59XFxuXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAuc2lkZWJhci1pdGVtIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcGFkZGluZzogNXB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG59XG5cbi5zaWRlYmFyLWl0ZW06aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTE1LCAxMTUsIDExNSwgMC4xKTtcbn1cblxuLnNpZGViYXItaXRlbS1hY3RpdmUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTE1LCAxMTUsIDExNSwgMC4xKTtcbn1cblxuLnNpZGViYXItaXRlbSA+IC5pdGVtLWNvbnRlbnQgPiBpbWcge1xuICAgIHdpZHRoOiAyNXB4O1xufVxuXG4uc2lkZWJhci1pdGVtID4gLml0ZW0tY29udGVudCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGdhcDogMTBweDtcbiAgICB3aWR0aDogMTAwJTtcbn1cblxuLnNpZGViYXItaXRlbSA+IC5pdGVtLWJ1dHRvbnMge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZ2FwOiA1cHg7XG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuXG4uc2lkZWJhci1pdGVtOmhvdmVyIC5pdGVtLWJ1dHRvbnMge1xuICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG59XG5cbi5zaWRlYmFyLWl0ZW0gPiAuaXRlbS1idXR0b25zID4gYnV0dG9uIHtcbiAgICBoZWlnaHQ6IDIwcHg7XG4gICAgd2lkdGg6IDIwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgcGFkZGluZzogMDtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGJvcmRlci1yYWRpdXM6IDJweDtcbn1cblxuLnNpZGViYXItaXRlbSA+IC5pdGVtLWJ1dHRvbnMgPiBidXR0b246aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuXG4uc2lkZWJhci1pdGVtID4gLml0ZW0tYnV0dG9ucyA+IGJ1dHRvbiA+IGltZyB7XG4gICAgd2lkdGg6IDE1cHg7XG4gICAgaGVpZ2h0OiAxNXB4O1xufWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL21vZHVsZXMvY29tcG9uZW50cy9zaWRlQmFySXRlbS9zaWRlQmFySXRlbS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLFlBQVk7SUFDWixlQUFlO0lBQ2Ysa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksMENBQTBDO0FBQzlDOztBQUVBO0lBQ0ksMENBQTBDO0FBQzlDOztBQUVBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixTQUFTO0lBQ1QsV0FBVztBQUNmOztBQUVBO0lBQ0ksYUFBYTtJQUNiLFFBQVE7SUFDUixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osV0FBVztJQUNYLDZCQUE2QjtJQUM3QixVQUFVO0lBQ1YsWUFBWTtJQUNaLGVBQWU7SUFDZixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSx1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsWUFBWTtBQUNoQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuc2lkZWJhci1pdGVtIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgcGFkZGluZzogNXB4O1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG59XFxuXFxuLnNpZGViYXItaXRlbTpob3ZlciB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTE1LCAxMTUsIDExNSwgMC4xKTtcXG59XFxuXFxuLnNpZGViYXItaXRlbS1hY3RpdmUge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDExNSwgMTE1LCAxMTUsIDAuMSk7XFxufVxcblxcbi5zaWRlYmFyLWl0ZW0gPiAuaXRlbS1jb250ZW50ID4gaW1nIHtcXG4gICAgd2lkdGg6IDI1cHg7XFxufVxcblxcbi5zaWRlYmFyLWl0ZW0gPiAuaXRlbS1jb250ZW50IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ2FwOiAxMHB4O1xcbiAgICB3aWR0aDogMTAwJTtcXG59XFxuXFxuLnNpZGViYXItaXRlbSA+IC5pdGVtLWJ1dHRvbnMge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBnYXA6IDVweDtcXG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xcbn1cXG5cXG4uc2lkZWJhci1pdGVtOmhvdmVyIC5pdGVtLWJ1dHRvbnMge1xcbiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xcbn1cXG5cXG4uc2lkZWJhci1pdGVtID4gLml0ZW0tYnV0dG9ucyA+IGJ1dHRvbiB7XFxuICAgIGhlaWdodDogMjBweDtcXG4gICAgd2lkdGg6IDIwcHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgYm9yZGVyLXJhZGl1czogMnB4O1xcbn1cXG5cXG4uc2lkZWJhci1pdGVtID4gLml0ZW0tYnV0dG9ucyA+IGJ1dHRvbjpob3ZlciB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbn1cXG5cXG4uc2lkZWJhci1pdGVtID4gLml0ZW0tYnV0dG9ucyA+IGJ1dHRvbiA+IGltZyB7XFxuICAgIHdpZHRoOiAxNXB4O1xcbiAgICBoZWlnaHQ6IDE1cHg7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgLnRhc2stY2FyZCB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IG1heC1jb250ZW50IG1pbm1heCg0MDBweCwgMWZyKSBtYXgtY29udGVudDtcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IG1heC1jb250ZW50O1xuICAgIGdhcDogMTBweDtcbiAgICBib3JkZXItYm90dG9tOiAwLjVweCBzb2xpZCAjZGRkO1xuICAgIHBhZGRpbmctdG9wOiAxMHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLnRhc2stY2FyZCAuY2hlY2stYnV0dG9uIHtcbiAgICBhc3BlY3QtcmF0aW86IDEgLyAxO1xuICAgIHdpZHRoOiAxMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgYm9yZGVyOiAycHggc29saWQgI0ExNjIwNztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE2MSwgOTgsIDcsIDAuMSk7XG59XG5cbi50YXNrLWNhcmQgLmNoZWNrLWJ1dHRvbjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNjEsIDk4LCA3LCAwLjUpO1xufVxuXG4udGFzay1jYXJkIC5jaGVjay1idXR0b246YWN0aXZlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMik7XG59XG5cbi50YXNrLWNhcmQgLm1pZGRsZS1jb2x1bW4ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBnYXA6IDEwcHg7XG59XG5cbi8qIE5hbWUgZmllbGQgKi9cbi50YXNrLWNhcmQgLm1pZGRsZS1jb2x1bW4gPiA6Zmlyc3QtY2hpbGQge1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbn1cblxuLyogRGVzY3JpcHRpb24gZmllbGQgKi9cbi50YXNrLWNhcmQgLm1pZGRsZS1jb2x1bW4gPiA6bnRoLWNoaWxkKDIpIHtcbiAgICBjb2xvcjogIzY2NjY2NjtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xufVxuXG4udGFzay1jYXJkIC5kdWUtZGF0ZSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBnYXA6IDVweDtcbiAgICBjb2xvcjogIzY2NjY2NjtcbiAgICBmb250LXNpemU6IDE0cHg7XG59XG5cbi50YXNrLWNhcmQgLmR1ZS1kYXRlID4gOmZpcnN0LWNoaWxkIHtcbiAgICB3aWR0aDogMTVweDtcbn1cblxuLnRhc2stY2FyZCAuZGVsZXRlLWJ1dHRvbiB7XG4gICAgaGVpZ2h0OiAzMHB4O1xuICAgIHdpZHRoOiAzMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIHBhZGRpbmc6IDA7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuXG4udGFzay1jYXJkIC5kZWxldGUtYnV0dG9uOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDExNSwgMTE1LCAxMTUsIDAuMSk7XG59XG5cbi50YXNrLWNhcmQ6aG92ZXIgLmRlbGV0ZS1idXR0b24ge1xuICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG59XG5cbi50YXNrLWNhcmQgLmRlbGV0ZS1idXR0b24gPiBpbWcge1xuICAgIHdpZHRoOiAyMHB4O1xuICAgIGhlaWdodDogMjBweDtcbn1cblxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvbW9kdWxlcy9jb21wb25lbnRzL3Rhc2tDYXJkL3Rhc2tDYXJkLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGFBQWE7SUFDYixpRUFBaUU7SUFDakUsK0JBQStCO0lBQy9CLFNBQVM7SUFDVCwrQkFBK0I7SUFDL0IsaUJBQWlCO0lBQ2pCLG9CQUFvQjtJQUNwQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksbUJBQW1CO0lBQ25CLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLHlCQUF5QjtJQUN6Qix1Q0FBdUM7QUFDM0M7O0FBRUE7SUFDSSx1Q0FBdUM7QUFDM0M7O0FBRUE7SUFDSSxxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFNBQVM7QUFDYjs7QUFFQSxlQUFlO0FBQ2Y7SUFDSSxtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLHVCQUF1QjtBQUMzQjs7QUFFQSxzQkFBc0I7QUFDdEI7SUFDSSxjQUFjO0lBQ2QsZUFBZTtJQUNmLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLFFBQVE7SUFDUixjQUFjO0lBQ2QsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsNkJBQTZCO0lBQzdCLFVBQVU7SUFDVixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSwwQ0FBMEM7QUFDOUM7O0FBRUE7SUFDSSxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsWUFBWTtBQUNoQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIudGFzay1jYXJkIHtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBtYXgtY29udGVudCBtaW5tYXgoNDAwcHgsIDFmcikgbWF4LWNvbnRlbnQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogbWF4LWNvbnRlbnQ7XFxuICAgIGdhcDogMTBweDtcXG4gICAgYm9yZGVyLWJvdHRvbTogMC41cHggc29saWQgI2RkZDtcXG4gICAgcGFkZGluZy10b3A6IDEwcHg7XFxuICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi50YXNrLWNhcmQgLmNoZWNrLWJ1dHRvbiB7XFxuICAgIGFzcGVjdC1yYXRpbzogMSAvIDE7XFxuICAgIHdpZHRoOiAxMHB4O1xcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgYm9yZGVyOiAycHggc29saWQgI0ExNjIwNztcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNjEsIDk4LCA3LCAwLjEpO1xcbn1cXG5cXG4udGFzay1jYXJkIC5jaGVjay1idXR0b246aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE2MSwgOTgsIDcsIDAuNSk7XFxufVxcblxcbi50YXNrLWNhcmQgLmNoZWNrLWJ1dHRvbjphY3RpdmUge1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMik7XFxufVxcblxcbi50YXNrLWNhcmQgLm1pZGRsZS1jb2x1bW4ge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBnYXA6IDEwcHg7XFxufVxcblxcbi8qIE5hbWUgZmllbGQgKi9cXG4udGFzay1jYXJkIC5taWRkbGUtY29sdW1uID4gOmZpcnN0LWNoaWxkIHtcXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XFxufVxcblxcbi8qIERlc2NyaXB0aW9uIGZpZWxkICovXFxuLnRhc2stY2FyZCAubWlkZGxlLWNvbHVtbiA+IDpudGgtY2hpbGQoMikge1xcbiAgICBjb2xvcjogIzY2NjY2NjtcXG4gICAgZm9udC1zaXplOiAxNHB4O1xcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcXG59XFxuXFxuLnRhc2stY2FyZCAuZHVlLWRhdGUge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBnYXA6IDVweDtcXG4gICAgY29sb3I6ICM2NjY2NjY7XFxuICAgIGZvbnQtc2l6ZTogMTRweDtcXG59XFxuXFxuLnRhc2stY2FyZCAuZHVlLWRhdGUgPiA6Zmlyc3QtY2hpbGQge1xcbiAgICB3aWR0aDogMTVweDtcXG59XFxuXFxuLnRhc2stY2FyZCAuZGVsZXRlLWJ1dHRvbiB7XFxuICAgIGhlaWdodDogMzBweDtcXG4gICAgd2lkdGg6IDMwcHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XFxufVxcblxcbi50YXNrLWNhcmQgLmRlbGV0ZS1idXR0b246aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDExNSwgMTE1LCAxMTUsIDAuMSk7XFxufVxcblxcbi50YXNrLWNhcmQ6aG92ZXIgLmRlbGV0ZS1idXR0b24ge1xcbiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xcbn1cXG5cXG4udGFzay1jYXJkIC5kZWxldGUtYnV0dG9uID4gaW1nIHtcXG4gICAgd2lkdGg6IDIwcHg7XFxuICAgIGhlaWdodDogMjBweDtcXG59XFxuXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAudG9kYXktcGFnZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xufWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL21vZHVsZXMvY29tcG9uZW50cy90b2RheVBhZ2UvdG9kYXlQYWdlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0FBQ2hCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi50b2RheS1wYWdlIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogMTAwJTtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAudXBjb21pbmctcGFnZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xufWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL21vZHVsZXMvY29tcG9uZW50cy91cGNvbWluZ1BhZ2UvdXBjb21pbmdQYWdlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0FBQ2hCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi51cGNvbWluZy1wYWdlIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogMTAwJTtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAqIHtcbiAgICAvKiBGaXggaXNzdWUgd2l0aCBleHRyYSBzcGFjZSBvbiB0aGUgc2lkZSB3aGVuIGFkZGluZyBwYWRkaW5nICovXG4gICAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiBTYWZhcmkvQ2hyb21lLCBvdGhlciBXZWJLaXQgKi9cbiAgICAtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7ICAgIC8qIEZpcmVmb3gsIG90aGVyIEdlY2tvICovXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDsgICAgICAgICAvKiBPcGVyYS9JRSA4KyAqL1xufVxuXG5ib2R5IHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMzAwcHggbWlubWF4KDAsIDFmcik7XG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBtYXgtY29udGVudCAxZnI7XG4gICAgbWluLWhlaWdodDogMTAwdmg7XG59YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksK0RBQStEO0lBQy9ELDhCQUE4QixFQUFFLGdDQUFnQztJQUNoRSwyQkFBMkIsS0FBSyx5QkFBeUI7SUFDekQsc0JBQXNCLFVBQVUsZ0JBQWdCO0FBQ3BEOztBQUVBO0lBQ0ksU0FBUztJQUNULFVBQVU7SUFDVixhQUFhO0lBQ2IsMkNBQTJDO0lBQzNDLG1DQUFtQztJQUNuQyxpQkFBaUI7QUFDckJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiKiB7XFxuICAgIC8qIEZpeCBpc3N1ZSB3aXRoIGV4dHJhIHNwYWNlIG9uIHRoZSBzaWRlIHdoZW4gYWRkaW5nIHBhZGRpbmcgKi9cXG4gICAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiBTYWZhcmkvQ2hyb21lLCBvdGhlciBXZWJLaXQgKi9cXG4gICAgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94OyAgICAvKiBGaXJlZm94LCBvdGhlciBHZWNrbyAqL1xcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAgICAgICAgIC8qIE9wZXJhL0lFIDgrICovXFxufVxcblxcbmJvZHkge1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMzAwcHggbWlubWF4KDAsIDFmcik7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogbWF4LWNvbnRlbnQgMWZyO1xcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gdXBkYXRlcjtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcblxuICAgIC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuICBjc3MgKz0gb2JqLmNzcztcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfVxuXG4gIC8vIEZvciBvbGQgSUVcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgIH07XG4gIH1cbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyYztcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSB7XG5cdFx0XHR2YXIgaSA9IHNjcmlwdHMubGVuZ3RoIC0gMTtcblx0XHRcdHdoaWxlIChpID4gLTEgJiYgIXNjcmlwdFVybCkgc2NyaXB0VXJsID0gc2NyaXB0c1tpLS1dLnNyYztcblx0XHR9XG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IHsgdjQgYXMgdXVpZHY0IH0gZnJvbSBcInV1aWRcIjtcblxuY29uc3QgRGF0YWJhc2VDb250cm9sbGVyID0gKCkgPT4ge1xuICAgIGNvbnN0IGluaXQgPSAoKSA9PiB7XG4gICAgICAgIC8vIEFkZCBrZXkgdG8gc3RvcmUgcHJvamVjdHNcbiAgICAgICAgaWYgKCFsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInByb2plY3RzXCIpKSB7XG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInByb2plY3RzXCIsIEpTT04uc3RyaW5naWZ5KFtdKSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBDcmVhdGUgaW5ib3ggcHJvamVjdCBpZiBub3QgZXhpc3RpbmdcbiAgICAgICAgaWYgKEpTT04uc3RyaW5naWZ5KGdldFByb2plY3RCeU5hbWUoXCJJbmJveFwiKSkgPT09IFwie31cIikge1xuICAgICAgICAgICAgY3JlYXRlUHJvamVjdCh7XG4gICAgICAgICAgICAgICAgaWQ6IFwiSW5ib3hcIixcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkluYm94XCIsXG4gICAgICAgICAgICAgICAgdGltZUNyZWF0ZWQ6IChuZXcgRGF0ZSgpKS5nZXRUaW1lKCksXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gQWRkIGtleSB0byBzdG9yZSB0YXNrc1xuICAgICAgICBpZiAoIWxvY2FsU3RvcmFnZS5nZXRJdGVtKFwidGFza3NcIikpIHtcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwidGFza3NcIiwgSlNPTi5zdHJpbmdpZnkoW10pKTtcbiAgICAgICAgfVxuXG4gICAgfTtcblxuICAgIGNvbnN0IGNyZWF0ZVByb2plY3QgPSBwcm9qZWN0ID0+IHtcbiAgICAgICAgbGV0IHByb2plY3RzID0gZ2V0QWxsUHJvamVjdHMoKTtcbiAgICAgICAgcHJvamVjdHMucHVzaChwcm9qZWN0KTtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJwcm9qZWN0c1wiLCBKU09OLnN0cmluZ2lmeShwcm9qZWN0cykpO1xuICAgIH07XG5cbiAgICBjb25zdCBnZXRQcm9qZWN0QnlJZCA9IGlkID0+IHtcbiAgICAgICAgY29uc3QgcHJvamVjdHMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwicHJvamVjdHNcIikpO1xuICAgICAgICBjb25zdCByZXN1bHQgPSBwcm9qZWN0cy5maWx0ZXIocHJvamVjdCA9PiBwcm9qZWN0LmlkID09PSBpZCk7XG4gICAgICAgIGlmIChyZXN1bHQubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4ge307XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0WzBdO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIGNvbnN0IGdldFByb2plY3RCeU5hbWUgPSBuYW1lID0+IHtcbiAgICAgICAgY29uc3QgcHJvamVjdHMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwicHJvamVjdHNcIikpO1xuICAgICAgICBjb25zdCByZXN1bHQgPSBwcm9qZWN0cy5maWx0ZXIocHJvamVjdCA9PiBwcm9qZWN0Lm5hbWUgPT09IG5hbWUpO1xuICAgICAgICBpZiAocmVzdWx0Lmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIHt9O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdFswXTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBjb25zdCBnZXRBbGxQcm9qZWN0cyA9ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJwcm9qZWN0c1wiKSk7XG4gICAgfTtcblxuICAgIGNvbnN0IHVwZGF0ZVByb2plY3QgPSAob2xkUHJvamVjdCwgbmV3UHJvamVjdCkgPT4ge1xuICAgICAgICBsZXQgcHJvamVjdHMgPSBnZXRBbGxQcm9qZWN0cygpO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHByb2plY3RzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAocHJvamVjdHNbaV0uaWQgPT09IG9sZFByb2plY3QuaWQpIHtcbiAgICAgICAgICAgICAgICBwcm9qZWN0c1tpXSA9IG5ld1Byb2plY3Q7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJwcm9qZWN0c1wiLCBKU09OLnN0cmluZ2lmeShwcm9qZWN0cykpO1xuICAgIH07XG5cbiAgICBjb25zdCBkZWxldGVQcm9qZWN0ID0gaWQgPT4ge1xuICAgICAgICBsZXQgcHJvamVjdHMgPSBnZXRBbGxQcm9qZWN0cygpO1xuICAgICAgICBwcm9qZWN0cyA9IHByb2plY3RzLmZpbHRlcihwcm9qZWN0ID0+IHByb2plY3QuaWQgIT09IGlkKTtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJwcm9qZWN0c1wiLCBKU09OLnN0cmluZ2lmeShwcm9qZWN0cykpO1xuICAgIH07XG5cbiAgICBjb25zdCBjcmVhdGVUYXNrID0gdGFzayA9PiB7XG4gICAgICAgIGxldCB0YXNrcyA9IGdldEFsbFRhc2tzKCk7XG4gICAgICAgIHRhc2tzLnB1c2godGFzayk7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwidGFza3NcIiwgSlNPTi5zdHJpbmdpZnkodGFza3MpKTtcbiAgICB9O1xuXG4gICAgY29uc3QgZ2V0QWxsVGFza3MgPSAoKSA9PiB7XG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwidGFza3NcIikpO1xuICAgIH07XG5cbiAgICBjb25zdCBnZXRUYXNrc0J5UHJvamVjdElkID0gcHJvamVjdElkID0+IHtcbiAgICAgICAgY29uc3QgdGFza3MgPSBnZXRBbGxUYXNrcygpO1xuICAgICAgICBjb25zdCByZXN1bHQgPSB0YXNrcy5maWx0ZXIodGFzayA9PiB0YXNrLnByb2plY3RJZCA9PT0gcHJvamVjdElkKTtcblxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH07XG5cbiAgICBjb25zdCBnZXRUYXNrQnlJZCA9IGlkID0+IHtcbiAgICAgICAgY29uc3QgdGFza3MgPSBnZXRBbGxUYXNrcygpO1xuICAgICAgICBmb3IgKGxldCB0YXNrIG9mIHRhc2tzKSB7XG4gICAgICAgICAgICBpZiAodGFzay5pZCA9PT0gaWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGFzaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge307XG4gICAgfTtcblxuICAgIGNvbnN0IGRlbGV0ZVRhc2sgPSBpZCA9PiB7XG4gICAgICAgIGxldCB0YXNrcyA9IGdldEFsbFRhc2tzKCk7XG4gICAgICAgIHRhc2tzID0gdGFza3MuZmlsdGVyKHRhc2sgPT4gdGFzay5pZCAhPT0gaWQpO1xuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInRhc2tzXCIsIEpTT04uc3RyaW5naWZ5KHRhc2tzKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgaW5pdCxcbiAgICAgICAgZ2V0UHJvamVjdEJ5SWQsXG4gICAgICAgIGdldFByb2plY3RCeU5hbWUsXG4gICAgICAgIGdldEFsbFByb2plY3RzLFxuICAgICAgICBjcmVhdGVQcm9qZWN0LFxuICAgICAgICB1cGRhdGVQcm9qZWN0LFxuICAgICAgICBkZWxldGVQcm9qZWN0LFxuICAgICAgICBjcmVhdGVUYXNrLFxuICAgICAgICBnZXRBbGxUYXNrcyxcbiAgICAgICAgZ2V0VGFza3NCeVByb2plY3RJZCxcbiAgICAgICAgZ2V0VGFza0J5SWQsXG4gICAgICAgIGRlbGV0ZVRhc2ssXG4gICAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IERhdGFiYXNlQ29udHJvbGxlcjsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbmF2QmFyLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbmF2QmFyLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zaWRlQmFyLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc2lkZUJhci5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc2lkZUJhckl0ZW0uY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zaWRlQmFySXRlbS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgXCIuL3NpZGVCYXJJdGVtLmNzc1wiO1xuaW1wb3J0IEVkaXRJY29uTGluayBmcm9tIFwiLi4vLi4vLi4vYXNzZXRzL2VkaXQuc3ZnXCI7XG5pbXBvcnQgRGVsZXRlSWNvbkxpbmsgZnJvbSBcIi4uLy4uLy4uL2Fzc2V0cy9kZWxldGUuc3ZnXCI7XG5cbmNvbnN0IGNyZWF0ZVNpZGVCYXJJdGVtID0gKGltYWdlTGluaywgcHJvamVjdCwgZWRpdGFibGUpID0+IHtcbiAgICAvLyBBZGQgaXRlbSBcbiAgICBjb25zdCBpdGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBpdGVtLmNsYXNzTmFtZSA9IFwic2lkZWJhci1pdGVtXCI7XG4gICAgaXRlbS5pZCA9IHByb2plY3QuaWQ7XG5cbiAgICAvLyBBZGQgd3JhcHBlciBmb3IgaWNvbiBhbmQgdGV4dFxuICAgIGNvbnN0IGl0ZW1Db250ZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBpdGVtQ29udGVudC5jbGFzc05hbWUgPSBcIml0ZW0tY29udGVudFwiO1xuXG4gICAgLy8gQWRkIGljb25cbiAgICBjb25zdCBpbWFnZSA9IG5ldyBJbWFnZSgpO1xuICAgIGltYWdlLnNyYyA9IGltYWdlTGluaztcbiAgICBpdGVtQ29udGVudC5hcHBlbmRDaGlsZChpbWFnZSk7XG5cbiAgICAvLyBBZGQgdGV4dFxuICAgIGNvbnN0IGl0ZW1OYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBpdGVtTmFtZS50ZXh0Q29udGVudCA9IHByb2plY3QubmFtZTtcbiAgICBpdGVtQ29udGVudC5hcHBlbmRDaGlsZChpdGVtTmFtZSk7XG5cbiAgICBpdGVtLmFwcGVuZENoaWxkKGl0ZW1Db250ZW50KTtcblxuICAgIC8vIEFkZCB0aGUgZWRpdCBhbmQgZGVsZXRlIGJ1dHRvbnNcbiAgICBpZiAoZWRpdGFibGUpIHtcbiAgICAgICAgY29uc3QgaXRlbUJ1dHRvbnMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBpdGVtQnV0dG9ucy5jbGFzc05hbWUgPSBcIml0ZW0tYnV0dG9uc1wiO1xuXG4gICAgICAgIGNvbnN0IGVkaXRCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgICAgICBlZGl0QnV0dG9uLmNsYXNzTmFtZSA9IFwiZWRpdC1idXR0b25cIjtcbiAgICAgICAgY29uc3QgZWRpdEljb24gPSBuZXcgSW1hZ2UoKTtcbiAgICAgICAgZWRpdEljb24uc3JjID0gRWRpdEljb25MaW5rO1xuICAgICAgICBlZGl0QnV0dG9uLmFwcGVuZENoaWxkKGVkaXRJY29uKTtcbiAgICAgICAgaXRlbUJ1dHRvbnMuYXBwZW5kQ2hpbGQoZWRpdEJ1dHRvbik7XG5cbiAgICAgICAgY29uc3QgZGVsZXRlQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICAgICAgZGVsZXRlQnV0dG9uLmNsYXNzTmFtZSA9IFwiZGVsZXRlLWJ1dHRvblwiO1xuICAgICAgICBjb25zdCBkZWxldGVJY29uID0gbmV3IEltYWdlKCk7XG4gICAgICAgIGRlbGV0ZUljb24uc3JjID0gRGVsZXRlSWNvbkxpbms7XG4gICAgICAgIGRlbGV0ZUJ1dHRvbi5hcHBlbmRDaGlsZChkZWxldGVJY29uKTtcbiAgICAgICAgaXRlbUJ1dHRvbnMuYXBwZW5kQ2hpbGQoZGVsZXRlQnV0dG9uKTtcbiAgICAgICAgXG4gICAgICAgIGl0ZW0uYXBwZW5kQ2hpbGQoaXRlbUJ1dHRvbnMpO1xuICAgIH1cblxuICAgIHJldHVybiBpdGVtO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlU2lkZUJhckl0ZW07IiwiaW1wb3J0IFwiLi9zaWRlQmFyLmNzc1wiO1xuaW1wb3J0IGNyZWF0ZVNpZGVCYXJJdGVtIGZyb20gXCIuLi9zaWRlQmFySXRlbS9zaWRlQmFySXRlbVwiO1xuaW1wb3J0IEluYm94SWNvbkxpbmsgZnJvbSBcIi4uLy4uLy4uL2Fzc2V0cy9pbmJveC5zdmdcIjtcbmltcG9ydCBUb2RheUljb25MaW5rIGZyb20gXCIuLi8uLi8uLi9hc3NldHMvdG9kYXkuc3ZnXCI7XG5pbXBvcnQgVXBDb21waW5nSWNvbkxpbmsgZnJvbSBcIi4uLy4uLy4uL2Fzc2V0cy91cGNvbWluZy5zdmdcIjtcblxuY29uc3QgY3JlYXRlU2lkZUJhciA9ICgpID0+IHtcbiAgICBjb25zdCBzaWRlQmFyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBzaWRlQmFyLmNsYXNzTmFtZSA9IFwic2lkZS1iYXJcIjtcblxuICAgIC8vIEFkZCBkZWZhdWx0IHRhYnMgYXQgdGhlIHRvcFxuICAgIGNvbnN0IGRlZmF1bHRJdGVtcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgZGVmYXVsdEl0ZW1zLmNsYXNzTmFtZSA9IFwiZGVmYXVsdC1pdGVtc1wiO1xuICAgIGRlZmF1bHRJdGVtcy5hcHBlbmRDaGlsZChjcmVhdGVTaWRlQmFySXRlbShJbmJveEljb25MaW5rLCB7aWQ6IFwiSW5ib3hcIiwgbmFtZTogXCJJbmJveFwifSwgZmFsc2UpKTtcbiAgICBkZWZhdWx0SXRlbXMuYXBwZW5kQ2hpbGQoY3JlYXRlU2lkZUJhckl0ZW0oVG9kYXlJY29uTGluaywge2lkOiBcIlRvZGF5XCIsIG5hbWU6IFwiVG9kYXlcIn0sIGZhbHNlKSk7XG4gICAgZGVmYXVsdEl0ZW1zLmFwcGVuZENoaWxkKGNyZWF0ZVNpZGVCYXJJdGVtKFVwQ29tcGluZ0ljb25MaW5rLCB7aWQ6IFwiVXBjb21pbmdcIiwgbmFtZTogXCJVcGNvbWluZ1wifSwgZmFsc2UpKTtcbiAgICBzaWRlQmFyLmFwcGVuZENoaWxkKGRlZmF1bHRJdGVtcyk7XG5cbiAgICAvLyBQcm9qZWN0cyBzZWN0aW9uXG4gICAgY29uc3QgcHJvamVjdHMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIHByb2plY3RzLmNsYXNzTmFtZSA9IFwicHJvamVjdHNcIjtcbiAgICBwcm9qZWN0cy5hcHBlbmRDaGlsZChjcmVhdGVQcm9qZWN0c0hlYWRlcigpKTtcbiAgICBjb25zdCBwcm9qZWN0SXRlbXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIHByb2plY3RJdGVtcy5jbGFzc05hbWUgPSBcInByb2plY3QtaXRlbXNcIjtcbiAgICBwcm9qZWN0cy5hcHBlbmRDaGlsZChwcm9qZWN0SXRlbXMpO1xuICAgIHNpZGVCYXIuYXBwZW5kQ2hpbGQocHJvamVjdHMpO1xuXG4gICAgcmV0dXJuIHNpZGVCYXI7XG59O1xuXG5jb25zdCBjcmVhdGVQcm9qZWN0c0hlYWRlciA9ICgpID0+IHtcbiAgICBjb25zdCBoZWFkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGhlYWRlci5jbGFzc05hbWUgPSBcInByb2plY3RzLWhlYWRlclwiO1xuXG4gICAgY29uc3QgbmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIilcbiAgICBuYW1lLnRleHRDb250ZW50ID0gXCJQcm9qZWN0c1wiO1xuICAgIGhlYWRlci5hcHBlbmRDaGlsZChuYW1lKTtcblxuICAgIGNvbnN0IGFkZFByb2plY3RCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgIGFkZFByb2plY3RCdXR0b24uY2xhc3NOYW1lID0gXCJhZGQtcHJvamVjdC1idXR0b25cIjtcbiAgICBhZGRQcm9qZWN0QnV0dG9uLnRleHRDb250ZW50ID0gXCIrXCI7XG4gICAgaGVhZGVyLmFwcGVuZENoaWxkKGFkZFByb2plY3RCdXR0b24pO1xuXG4gICAgcmV0dXJuIGhlYWRlcjtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZVNpZGVCYXI7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2luYm94UGFnZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2luYm94UGFnZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgXCIuL2luYm94UGFnZS5jc3NcIjtcblxuY29uc3QgY3JlYXRlSW5ib3hQYWdlID0gKCkgPT4ge1xuICAgIC8vIENyZWF0ZSB0aGUgaW5ib3ggcGFnZVxuICAgIGNvbnN0IGluYm94UGFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgaW5ib3hQYWdlLmNsYXNzTmFtZSA9IFwiaW5ib3gtcGFnZVwiO1xuXG4gICAgLy8gQWRkIHRoZSBjb250ZW50IHdyYXBwZXIgb3V0c2lkZVxuICAgIGNvbnN0IGluYm94Q29udGVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgaW5ib3hDb250ZW50LmNsYXNzTmFtZSA9IFwiaW5ib3gtY29udGVudFwiO1xuXG4gICAgLy8gQWRkIGhlYWRlclxuICAgIGNvbnN0IGhlYWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgaGVhZGVyLmNsYXNzTmFtZSA9IFwiaW5ib3gtaGVhZGVyXCI7XG4gICAgaGVhZGVyLnRleHRDb250ZW50ID0gXCJJbmJveFwiO1xuICAgIGluYm94Q29udGVudC5hcHBlbmRDaGlsZChoZWFkZXIpO1xuXG4gICAgLy8gQWRkIHByaW9yaXR5IHNlY3Rpb25zXG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPCA1OyBpKyspIHtcbiAgICAgICAgY29uc3Qgc2VjdGlvbiA9IGNyZWF0ZVByaW9yaXR5U2VjdGlvbihpKTtcbiAgICAgICAgc2VjdGlvbi5jbGFzc05hbWUgPSBcInByaW9yaXR5LXNlY3Rpb25cIjtcbiAgICAgICAgaW5ib3hDb250ZW50LmFwcGVuZENoaWxkKHNlY3Rpb24pO1xuICAgIH1cblxuICAgIGluYm94UGFnZS5hcHBlbmRDaGlsZChpbmJveENvbnRlbnQpO1xuXG4gICAgcmV0dXJuIGluYm94UGFnZTtcbn07XG5cbmNvbnN0IGNyZWF0ZVByaW9yaXR5U2VjdGlvbiA9IHByaW9yaXR5TnVtYmVyID0+IHtcbiAgICAvLyBDcmVhdGUgc2VjdGlvblxuICAgIGNvbnN0IHNlY3Rpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIHNlY3Rpb24uY2xhc3NOYW1lID0gXCJwcmlvcml0eS1zZWN0aW9uXCI7XG5cbiAgICAvLyBBZGQgaGVhZGVyXG4gICAgY29uc3QgaGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBoZWFkZXIuY2xhc3NOYW1lID0gXCJwcmlvcml0eS1oZWFkZXJcIjtcbiAgICBoZWFkZXIudGV4dENvbnRlbnQgPSBgUHJpb3JpdHkgJHtwcmlvcml0eU51bWJlci50b1N0cmluZygpfWA7XG4gICAgc2VjdGlvbi5hcHBlbmRDaGlsZChoZWFkZXIpO1xuXG4gICAgLy8gQWRkIHRhc2tzIGxpc3RcbiAgICBjb25zdCB0YXNrcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgc2VjdGlvbi5hcHBlbmRDaGlsZCh0YXNrcyk7XG5cbiAgICAvLyBBZGQgYWRkLXRhc2sgYnV0dG9uXG4gICAgY29uc3QgYWRkVGFza0J1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgYWRkVGFza0J1dHRvbi5jbGFzc05hbWUgPSBcImFkZC10YXNrLWJ1dHRvblwiO1xuICAgIGNvbnN0IGFkZFN5bWJvbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xuICAgIGFkZFN5bWJvbC50ZXh0Q29udGVudCA9IFwiK1wiO1xuICAgIGNvbnN0IGFkZFRleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcbiAgICBhZGRUZXh0LnRleHRDb250ZW50ID0gXCJBZGQgdGFza1wiO1xuICAgIC8vIGFkZFRhc2tCdXR0b24udGV4dENvbnRlbnQgPSBcIisgQWRkIHRhc2tcIjtcbiAgICBhZGRUYXNrQnV0dG9uLmFwcGVuZENoaWxkKGFkZFN5bWJvbCk7XG4gICAgYWRkVGFza0J1dHRvbi5hcHBlbmRDaGlsZChhZGRUZXh0KTtcbiAgICBzZWN0aW9uLmFwcGVuZENoaWxkKGFkZFRhc2tCdXR0b24pO1xuXG4gICAgcmV0dXJuIHNlY3Rpb247XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZUluYm94UGFnZTsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vdG9kYXlQYWdlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vdG9kYXlQYWdlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi91cGNvbWluZ1BhZ2UuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi91cGNvbWluZ1BhZ2UuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2FkZFRhc2tDYXJkLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYWRkVGFza0NhcmQuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IFwiLi9hZGRUYXNrQ2FyZC5jc3NcIjtcblxuY29uc3QgY3JlYXRlQWRkVGFza0NhcmQgPSBwcm9qZWN0cyA9PiB7XG4gICAgY29uc3QgY2FyZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgY2FyZC5jbGFzc05hbWUgPSBcImFkZC10YXNrLWNhcmRcIjtcblxuICAgIC8vIEFkZCBuYW1lIHNlY3Rpb25cbiAgICBjb25zdCBuYW1lVGV4dEJveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xuICAgIG5hbWVUZXh0Qm94LnJvbGUgPSBcInRleHRib3hcIjtcbiAgICBuYW1lVGV4dEJveC5jb250ZW50RWRpdGFibGUgPSBcInRydWVcIjtcbiAgICBjYXJkLmFwcGVuZENoaWxkKG5hbWVUZXh0Qm94KTtcblxuICAgIC8vIEFkZCBkZXNjcmlwdGlvbiBzZWN0aW9uXG4gICAgY29uc3QgZGVzY3JpcHRpb25UZXh0Qm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XG4gICAgZGVzY3JpcHRpb25UZXh0Qm94LnJvbGUgPSBcInRleHRib3hcIjtcbiAgICBkZXNjcmlwdGlvblRleHRCb3guY29udGVudEVkaXRhYmxlID0gXCJ0cnVlXCI7XG4gICAgY2FyZC5hcHBlbmRDaGlsZChkZXNjcmlwdGlvblRleHRCb3gpO1xuXG4gICAgLy8gQWRkIHNlY3Rpb24gZm9yIGRhdGUgcGlja2VyIGFuZCBwcmlvcml0eSBkcm9wZG93blxuICAgIGNvbnN0IG1pZGRsZVJvdyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgbWlkZGxlUm93LmNsYXNzTmFtZSA9IFwibWlkZGxlLXJvd1wiO1xuICAgIG1pZGRsZVJvdy5hcHBlbmRDaGlsZChjcmVhdGVEYXRlUGlja2VyKCkpO1xuICAgIG1pZGRsZVJvdy5hcHBlbmRDaGlsZChjcmVhdGVEcm9wZG93bihbXCJQcmlvcml0eSAxXCIsIFwiUHJpb3JpdHkgMlwiLCBcIlByaW9yaXR5IDNcIiwgXCJQcmlvcml0eSA0XCJdLCBcIlByaW9yaXR5XCIpKTtcbiAgICBjYXJkLmFwcGVuZENoaWxkKG1pZGRsZVJvdyk7XG5cbiAgICAvLyBBZGQgdGhlIGJvdHRvbSByb3dcbiAgICBjb25zdCBib3R0b21Sb3cgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGJvdHRvbVJvdy5jbGFzc05hbWUgPSBcImJvdHRvbS1yb3dcIjtcbiAgICBib3R0b21Sb3cuYXBwZW5kQ2hpbGQoY3JlYXRlRHJvcGRvd24ocHJvamVjdHMubWFwKHByb2plY3QgPT4gcHJvamVjdC5uYW1lKSkpO1xuICAgIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgY29uc3QgY2FuY2VsQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICBjYW5jZWxCdXR0b24uY2xhc3NOYW1lID0gXCJjYW5jZWwtYnV0dG9uXCI7XG4gICAgY2FuY2VsQnV0dG9uLnRleHRDb250ZW50ID0gXCJDYW5jZWxcIjtcbiAgICBkaXYuYXBwZW5kQ2hpbGQoY2FuY2VsQnV0dG9uKTtcbiAgICBjb25zdCBhZGRCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgIGFkZEJ1dHRvbi50ZXh0Q29udGVudCA9IFwiQWRkIHRhc2tcIjtcbiAgICBhZGRCdXR0b24uY2xhc3NOYW1lID0gXCJhZGQtYnV0dG9uXCI7XG4gICAgYWRkQnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcbiAgICBkaXYuYXBwZW5kQ2hpbGQoYWRkQnV0dG9uKTtcbiAgICBib3R0b21Sb3cuYXBwZW5kQ2hpbGQoZGl2KTtcbiAgICBjYXJkLmFwcGVuZENoaWxkKGJvdHRvbVJvdyk7XG5cbiAgICByZXR1cm4gY2FyZDtcbn07XG5cbmNvbnN0IGNyZWF0ZURhdGVQaWNrZXIgPSAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG5cbiAgICBjb25zdCBsYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgbGFiZWwudGV4dENvbnRlbnQgPSBcIkR1ZSBkYXRlXCJcbiAgICB3cmFwcGVyLmFwcGVuZENoaWxkKGxhYmVsKTtcblxuICAgIGNvbnN0IHBpY2tlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgICBwaWNrZXIudHlwZSA9IFwiZGF0ZVwiO1xuICAgIHdyYXBwZXIuYXBwZW5kQ2hpbGQocGlja2VyKTtcblxuICAgIHJldHVybiB3cmFwcGVyO1xufTtcblxuY29uc3QgY3JlYXRlRHJvcGRvd24gPSAob3B0aW9ucywgbGFiZWxOYW1lKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG5cbiAgICBpZiAobGFiZWxOYW1lKSB7XG4gICAgICAgIGNvbnN0IGxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgbGFiZWwudGV4dENvbnRlbnQgPSBsYWJlbE5hbWU7XG4gICAgICAgIHdyYXBwZXIuYXBwZW5kQ2hpbGQobGFiZWwpO1xuICAgIH1cblxuICAgIGNvbnN0IGRyb3Bkb3duID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNlbGVjdFwiKTtcbiAgICBvcHRpb25zLmZvckVhY2gob3B0aW9uID0+IHtcbiAgICAgICAgZHJvcGRvd24uYXBwZW5kQ2hpbGQoY3JlYXRlT3B0aW9uKG9wdGlvbikpO1xuICAgIH0pO1xuICAgIHdyYXBwZXIuYXBwZW5kQ2hpbGQoZHJvcGRvd24pO1xuXG4gICAgcmV0dXJuIHdyYXBwZXI7XG59O1xuXG5jb25zdCBjcmVhdGVPcHRpb24gPSB2YWx1ZSA9PiB7XG4gICAgY29uc3Qgb3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTtcbiAgICBvcHRpb24udmFsdWUgPSB2YWx1ZTtcbiAgICBvcHRpb24udGV4dENvbnRlbnQgPSB2YWx1ZTtcblxuICAgIHJldHVybiBvcHRpb247XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVBZGRUYXNrQ2FyZDsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYWRkUHJvamVjdERpYWxvZy5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2FkZFByb2plY3REaWFsb2cuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3Byb2plY3RQYWdlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vcHJvamVjdFBhZ2UuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2VkaXRQcm9qZWN0RGlhbG9nLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vZWRpdFByb2plY3REaWFsb2cuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2RlbGV0ZVByb2plY3REaWFsb2cuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9kZWxldGVQcm9qZWN0RGlhbG9nLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi90YXNrQ2FyZC5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3Rhc2tDYXJkLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9kZWxldGVUYXNrRGlhbG9nLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vZGVsZXRlVGFza0RpYWxvZy5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJjb25zdCByYW5kb21VVUlEID0gdHlwZW9mIGNyeXB0byAhPT0gJ3VuZGVmaW5lZCcgJiYgY3J5cHRvLnJhbmRvbVVVSUQgJiYgY3J5cHRvLnJhbmRvbVVVSUQuYmluZChjcnlwdG8pO1xuZXhwb3J0IGRlZmF1bHQge1xuICByYW5kb21VVUlEXG59OyIsIi8vIFVuaXF1ZSBJRCBjcmVhdGlvbiByZXF1aXJlcyBhIGhpZ2ggcXVhbGl0eSByYW5kb20gIyBnZW5lcmF0b3IuIEluIHRoZSBicm93c2VyIHdlIHRoZXJlZm9yZVxuLy8gcmVxdWlyZSB0aGUgY3J5cHRvIEFQSSBhbmQgZG8gbm90IHN1cHBvcnQgYnVpbHQtaW4gZmFsbGJhY2sgdG8gbG93ZXIgcXVhbGl0eSByYW5kb20gbnVtYmVyXG4vLyBnZW5lcmF0b3JzIChsaWtlIE1hdGgucmFuZG9tKCkpLlxubGV0IGdldFJhbmRvbVZhbHVlcztcbmNvbnN0IHJuZHM4ID0gbmV3IFVpbnQ4QXJyYXkoMTYpO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcm5nKCkge1xuICAvLyBsYXp5IGxvYWQgc28gdGhhdCBlbnZpcm9ubWVudHMgdGhhdCBuZWVkIHRvIHBvbHlmaWxsIGhhdmUgYSBjaGFuY2UgdG8gZG8gc29cbiAgaWYgKCFnZXRSYW5kb21WYWx1ZXMpIHtcbiAgICAvLyBnZXRSYW5kb21WYWx1ZXMgbmVlZHMgdG8gYmUgaW52b2tlZCBpbiBhIGNvbnRleHQgd2hlcmUgXCJ0aGlzXCIgaXMgYSBDcnlwdG8gaW1wbGVtZW50YXRpb24uXG4gICAgZ2V0UmFuZG9tVmFsdWVzID0gdHlwZW9mIGNyeXB0byAhPT0gJ3VuZGVmaW5lZCcgJiYgY3J5cHRvLmdldFJhbmRvbVZhbHVlcyAmJiBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzLmJpbmQoY3J5cHRvKTtcblxuICAgIGlmICghZ2V0UmFuZG9tVmFsdWVzKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2NyeXB0by5nZXRSYW5kb21WYWx1ZXMoKSBub3Qgc3VwcG9ydGVkLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3V1aWRqcy91dWlkI2dldHJhbmRvbXZhbHVlcy1ub3Qtc3VwcG9ydGVkJyk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGdldFJhbmRvbVZhbHVlcyhybmRzOCk7XG59IiwiaW1wb3J0IHZhbGlkYXRlIGZyb20gJy4vdmFsaWRhdGUuanMnO1xuLyoqXG4gKiBDb252ZXJ0IGFycmF5IG9mIDE2IGJ5dGUgdmFsdWVzIHRvIFVVSUQgc3RyaW5nIGZvcm1hdCBvZiB0aGUgZm9ybTpcbiAqIFhYWFhYWFhYLVhYWFgtWFhYWC1YWFhYLVhYWFhYWFhYWFhYWFxuICovXG5cbmNvbnN0IGJ5dGVUb0hleCA9IFtdO1xuXG5mb3IgKGxldCBpID0gMDsgaSA8IDI1NjsgKytpKSB7XG4gIGJ5dGVUb0hleC5wdXNoKChpICsgMHgxMDApLnRvU3RyaW5nKDE2KS5zbGljZSgxKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1bnNhZmVTdHJpbmdpZnkoYXJyLCBvZmZzZXQgPSAwKSB7XG4gIC8vIE5vdGU6IEJlIGNhcmVmdWwgZWRpdGluZyB0aGlzIGNvZGUhICBJdCdzIGJlZW4gdHVuZWQgZm9yIHBlcmZvcm1hbmNlXG4gIC8vIGFuZCB3b3JrcyBpbiB3YXlzIHlvdSBtYXkgbm90IGV4cGVjdC4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS91dWlkanMvdXVpZC9wdWxsLzQzNFxuICByZXR1cm4gYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAwXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDFdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMl1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAzXV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDRdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgNV1dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA2XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDddXSArICctJyArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgOF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA5XV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDEwXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDExXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDEyXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDEzXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDE0XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDE1XV07XG59XG5cbmZ1bmN0aW9uIHN0cmluZ2lmeShhcnIsIG9mZnNldCA9IDApIHtcbiAgY29uc3QgdXVpZCA9IHVuc2FmZVN0cmluZ2lmeShhcnIsIG9mZnNldCk7IC8vIENvbnNpc3RlbmN5IGNoZWNrIGZvciB2YWxpZCBVVUlELiAgSWYgdGhpcyB0aHJvd3MsIGl0J3MgbGlrZWx5IGR1ZSB0byBvbmVcbiAgLy8gb2YgdGhlIGZvbGxvd2luZzpcbiAgLy8gLSBPbmUgb3IgbW9yZSBpbnB1dCBhcnJheSB2YWx1ZXMgZG9uJ3QgbWFwIHRvIGEgaGV4IG9jdGV0IChsZWFkaW5nIHRvXG4gIC8vIFwidW5kZWZpbmVkXCIgaW4gdGhlIHV1aWQpXG4gIC8vIC0gSW52YWxpZCBpbnB1dCB2YWx1ZXMgZm9yIHRoZSBSRkMgYHZlcnNpb25gIG9yIGB2YXJpYW50YCBmaWVsZHNcblxuICBpZiAoIXZhbGlkYXRlKHV1aWQpKSB7XG4gICAgdGhyb3cgVHlwZUVycm9yKCdTdHJpbmdpZmllZCBVVUlEIGlzIGludmFsaWQnKTtcbiAgfVxuXG4gIHJldHVybiB1dWlkO1xufVxuXG5leHBvcnQgZGVmYXVsdCBzdHJpbmdpZnk7IiwiaW1wb3J0IG5hdGl2ZSBmcm9tICcuL25hdGl2ZS5qcyc7XG5pbXBvcnQgcm5nIGZyb20gJy4vcm5nLmpzJztcbmltcG9ydCB7IHVuc2FmZVN0cmluZ2lmeSB9IGZyb20gJy4vc3RyaW5naWZ5LmpzJztcblxuZnVuY3Rpb24gdjQob3B0aW9ucywgYnVmLCBvZmZzZXQpIHtcbiAgaWYgKG5hdGl2ZS5yYW5kb21VVUlEICYmICFidWYgJiYgIW9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmF0aXZlLnJhbmRvbVVVSUQoKTtcbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBjb25zdCBybmRzID0gb3B0aW9ucy5yYW5kb20gfHwgKG9wdGlvbnMucm5nIHx8IHJuZykoKTsgLy8gUGVyIDQuNCwgc2V0IGJpdHMgZm9yIHZlcnNpb24gYW5kIGBjbG9ja19zZXFfaGlfYW5kX3Jlc2VydmVkYFxuXG4gIHJuZHNbNl0gPSBybmRzWzZdICYgMHgwZiB8IDB4NDA7XG4gIHJuZHNbOF0gPSBybmRzWzhdICYgMHgzZiB8IDB4ODA7IC8vIENvcHkgYnl0ZXMgdG8gYnVmZmVyLCBpZiBwcm92aWRlZFxuXG4gIGlmIChidWYpIHtcbiAgICBvZmZzZXQgPSBvZmZzZXQgfHwgMDtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTY7ICsraSkge1xuICAgICAgYnVmW29mZnNldCArIGldID0gcm5kc1tpXTtcbiAgICB9XG5cbiAgICByZXR1cm4gYnVmO1xuICB9XG5cbiAgcmV0dXJuIHVuc2FmZVN0cmluZ2lmeShybmRzKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdjQ7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2VkaXRUYXNrRGlhbG9nLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vZWRpdFRhc2tEaWFsb2cuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IFwiLi9lZGl0VGFza0RpYWxvZy5jc3NcIjtcblxuY29uc3QgY3JlYXRlRWRpdFRhc2tEaWFsb2cgPSBwcm9qZWN0cyA9PiB7XG4gICAgY29uc3QgZGlhbG9nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpYWxvZ1wiKTtcbiAgICBkaWFsb2cuY2xhc3NOYW1lID0gXCJlZGl0LXRhc2stZGlhbG9nXCI7XG5cbiAgICBjb25zdCB3cmFwcGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcblxuICAgIC8vIEFkZCBuYW1lIHNlY3Rpb25cbiAgICBjb25zdCBuYW1lVGV4dEJveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xuICAgIG5hbWVUZXh0Qm94LnJvbGUgPSBcInRleHRib3hcIjtcbiAgICBuYW1lVGV4dEJveC5jb250ZW50RWRpdGFibGUgPSBcInRydWVcIjtcbiAgICB3cmFwcGVyLmFwcGVuZENoaWxkKG5hbWVUZXh0Qm94KTtcblxuICAgIC8vIEFkZCBkZXNjcmlwdGlvbiBzZWN0aW9uXG4gICAgY29uc3QgZGVzY3JpcHRpb25UZXh0Qm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XG4gICAgZGVzY3JpcHRpb25UZXh0Qm94LnJvbGUgPSBcInRleHRib3hcIjtcbiAgICBkZXNjcmlwdGlvblRleHRCb3guY29udGVudEVkaXRhYmxlID0gXCJ0cnVlXCI7XG4gICAgd3JhcHBlci5hcHBlbmRDaGlsZChkZXNjcmlwdGlvblRleHRCb3gpO1xuXG4gICAgLy8gQWRkIHNlY3Rpb24gZm9yIGRhdGUgcGlja2VyIGFuZCBwcmlvcml0eSBkcm9wZG93blxuICAgIGNvbnN0IG1pZGRsZVJvdyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgbWlkZGxlUm93LmNsYXNzTmFtZSA9IFwibWlkZGxlLXJvd1wiO1xuICAgIG1pZGRsZVJvdy5hcHBlbmRDaGlsZChjcmVhdGVEYXRlUGlja2VyKCkpO1xuICAgIG1pZGRsZVJvdy5hcHBlbmRDaGlsZChjcmVhdGVEcm9wZG93bihbXCJQcmlvcml0eSAxXCIsIFwiUHJpb3JpdHkgMlwiLCBcIlByaW9yaXR5IDNcIiwgXCJQcmlvcml0eSA0XCJdLCBcIlByaW9yaXR5XCIpKTtcbiAgICB3cmFwcGVyLmFwcGVuZENoaWxkKG1pZGRsZVJvdyk7XG5cbiAgICAvLyBBZGQgdGhlIGJvdHRvbSByb3dcbiAgICBjb25zdCBib3R0b21Sb3cgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGJvdHRvbVJvdy5jbGFzc05hbWUgPSBcImJvdHRvbS1yb3dcIjtcbiAgICBib3R0b21Sb3cuYXBwZW5kQ2hpbGQoY3JlYXRlRHJvcGRvd24ocHJvamVjdHMubWFwKHByb2plY3QgPT4gcHJvamVjdC5uYW1lKSkpO1xuICAgIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgY29uc3QgY2FuY2VsQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICBjYW5jZWxCdXR0b24uY2xhc3NOYW1lID0gXCJjYW5jZWwtYnV0dG9uXCI7XG4gICAgY2FuY2VsQnV0dG9uLnRleHRDb250ZW50ID0gXCJDYW5jZWxcIjtcbiAgICBkaXYuYXBwZW5kQ2hpbGQoY2FuY2VsQnV0dG9uKTtcbiAgICBjb25zdCBzYXZlQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICBzYXZlQnV0dG9uLnRleHRDb250ZW50ID0gXCJTYXZlXCI7XG4gICAgc2F2ZUJ1dHRvbi5jbGFzc05hbWUgPSBcInNhdmUtYnV0dG9uXCI7XG4gICAgZGl2LmFwcGVuZENoaWxkKHNhdmVCdXR0b24pO1xuICAgIGJvdHRvbVJvdy5hcHBlbmRDaGlsZChkaXYpO1xuICAgIHdyYXBwZXIuYXBwZW5kQ2hpbGQoYm90dG9tUm93KTtcblxuICAgIGRpYWxvZy5hcHBlbmRDaGlsZCh3cmFwcGVyKTtcblxuICAgIHJldHVybiBkaWFsb2c7XG59O1xuXG5jb25zdCBjcmVhdGVEYXRlUGlja2VyID0gKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuXG4gICAgY29uc3QgbGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGxhYmVsLnRleHRDb250ZW50ID0gXCJEdWUgZGF0ZVwiXG4gICAgd3JhcHBlci5hcHBlbmRDaGlsZChsYWJlbCk7XG5cbiAgICBjb25zdCBwaWNrZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgcGlja2VyLnR5cGUgPSBcImRhdGVcIjtcbiAgICB3cmFwcGVyLmFwcGVuZENoaWxkKHBpY2tlcik7XG5cbiAgICByZXR1cm4gd3JhcHBlcjtcbn07XG5cbmNvbnN0IGNyZWF0ZURyb3Bkb3duID0gKG9wdGlvbnMsIGxhYmVsTmFtZSkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuXG4gICAgaWYgKGxhYmVsTmFtZSkge1xuICAgICAgICBjb25zdCBsYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIGxhYmVsLnRleHRDb250ZW50ID0gbGFiZWxOYW1lO1xuICAgICAgICB3cmFwcGVyLmFwcGVuZENoaWxkKGxhYmVsKTtcbiAgICB9XG5cbiAgICBjb25zdCBkcm9wZG93biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzZWxlY3RcIik7XG4gICAgb3B0aW9ucy5mb3JFYWNoKG9wdGlvbiA9PiB7XG4gICAgICAgIGRyb3Bkb3duLmFwcGVuZENoaWxkKGNyZWF0ZU9wdGlvbihvcHRpb24pKTtcbiAgICB9KTtcbiAgICB3cmFwcGVyLmFwcGVuZENoaWxkKGRyb3Bkb3duKTtcblxuICAgIHJldHVybiB3cmFwcGVyO1xufTtcblxuY29uc3QgY3JlYXRlT3B0aW9uID0gdmFsdWUgPT4ge1xuICAgIGNvbnN0IG9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XG4gICAgb3B0aW9uLnZhbHVlID0gdmFsdWU7XG4gICAgb3B0aW9uLnRleHRDb250ZW50ID0gdmFsdWU7XG5cbiAgICByZXR1cm4gb3B0aW9uO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlRWRpdFRhc2tEaWFsb2c7IiwiaW1wb3J0IGNyZWF0ZU5hdkJhciBmcm9tIFwiLi4vY29tcG9uZW50cy9uYXZCYXIvbmF2QmFyXCI7XG5pbXBvcnQgY3JlYXRlU2lkZUJhciBmcm9tIFwiLi4vY29tcG9uZW50cy9zaWRlQmFyL3NpZGVCYXJcIjtcbmltcG9ydCBjcmVhdGVJbmJveFBhZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvaW5ib3hQYWdlL2luYm94UGFnZVwiO1xuaW1wb3J0IGNyZWF0ZVRvZGF5UGFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy90b2RheVBhZ2UvdG9kYXlQYWdlXCI7XG5pbXBvcnQgY3JlYXRlVXBjb21pbmdQYWdlIGZyb20gXCIuLi9jb21wb25lbnRzL3VwY29taW5nUGFnZS91cGNvbWluZ1BhZ2VcIjtcbmltcG9ydCBjcmVhdGVBZGRUYXNrQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9hZGRUYXNrQ2FyZC9hZGRUYXNrQ2FyZFwiO1xuaW1wb3J0IGNyZWF0ZUFkZFByb2plY3REaWFsb2cgZnJvbSBcIi4uL2NvbXBvbmVudHMvYWRkUHJvamVjdERpYWxvZy9hZGRQcm9qZWN0RGlhbG9nXCI7XG5pbXBvcnQgRGF0YWJhc2VDb250cm9sbGVyIGZyb20gXCIuL0RhdGFiYXNlQ29udHJvbGxlclwiO1xuaW1wb3J0IGNyZWF0ZVNpZGVCYXJJdGVtIGZyb20gXCIuLi9jb21wb25lbnRzL3NpZGVCYXJJdGVtL3NpZGVCYXJJdGVtXCI7XG5pbXBvcnQgUHJvamVjdEljb25MaW5rIGZyb20gXCIuLi8uLi9hc3NldHMvY2lyY2xlLnN2Z1wiO1xuaW1wb3J0IGNyZWF0ZVByb2plY3RQYWdlIGZyb20gXCIuLi9jb21wb25lbnRzL3Byb2plY3RQYWdlL3Byb2plY3RQYWdlXCI7XG5pbXBvcnQgY3JlYXRlRWRpdFByb2plY3REaWFsb2cgZnJvbSBcIi4uL2NvbXBvbmVudHMvZWRpdFByb2plY3REaWFsb2cvZWRpdFByb2plY3REaWFsb2dcIjtcbmltcG9ydCBjcmVhdGVEZWxldGVQcm9qZWN0RGlhbG9nIGZyb20gXCIuLi9jb21wb25lbnRzL2RlbGV0ZVByb2plY3REaWFsb2cvZGVsZXRlUHJvamVjdERpYWxvZ1wiO1xuaW1wb3J0IGNyZWF0ZVRhc2tDYXJkIGZyb20gXCIuLi9jb21wb25lbnRzL3Rhc2tDYXJkL3Rhc2tDYXJkXCI7XG5pbXBvcnQgY3JlYXRlRGVsZXRlVGFza0RpYWxvZyBmcm9tIFwiLi4vY29tcG9uZW50cy9kZWxldGVUYXNrRGlhbG9nL2RlbGV0ZVRhc2tEaWFsb2dcIjtcbmltcG9ydCB7IHY0IGFzIHV1aWR2NCB9IGZyb20gXCJ1dWlkXCI7XG5pbXBvcnQgY3JlYXRlRWRpdFRhc2tEaWFsb2cgZnJvbSBcIi4uL2NvbXBvbmVudHMvZWRpdFRhc2tEaWFsb2cvZWRpdFRhc2tEaWFsb2dcIjtcblxuY29uc3QgU2NyZWVuQ29udHJvbGxlciA9ICgpID0+IHtcbiAgICBjb25zdCBkYXRhYmFzZUNvbnRyb2xsZXIgPSBEYXRhYmFzZUNvbnRyb2xsZXIoKTtcblxuICAgIGNvbnN0IGluaXQgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGJvZHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiYm9keVwiKTtcblxuICAgICAgICAvLyBBZGQgbmF2YmFyXG4gICAgICAgIGNvbnN0IG5hdkJhciA9IGNyZWF0ZU5hdkJhcigpO1xuICAgICAgICBib2R5LmFwcGVuZENoaWxkKG5hdkJhcik7XG4gICAgICAgIF9zZXROYXZCYXJMb2dvTGlzdGVuZXIoKTtcblxuICAgICAgICAvLyBBZGQgc2lkZWJhclxuICAgICAgICBjb25zdCBzaWRlQmFyID0gY3JlYXRlU2lkZUJhcigpO1xuICAgICAgICBib2R5LmFwcGVuZENoaWxkKHNpZGVCYXIpO1xuICAgICAgICBfbG9hZFByb2plY3RJdGVtcygpO1xuICAgICAgICBfc2V0QWRkUHJvamVjdEJ1dHRvbkxpc3RlbmVyKCk7XG5cbiAgICAgICAgLy8gQWRkIG1haW4gY29udGVudFxuICAgICAgICBjb25zdCBjb250ZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgY29udGVudC5pZCA9IFwiY29udGVudFwiO1xuICAgICAgICBib2R5LmFwcGVuZENoaWxkKGNvbnRlbnQpO1xuXG4gICAgICAgIC8vIEFkZCBhZGQtcHJvamVjdCBkaWFsb2cgZm9yIGxhdGVyIHVzZVxuICAgICAgICBjb25zdCBhZGRQcm9qZWN0RGlhbG9nID0gY3JlYXRlQWRkUHJvamVjdERpYWxvZygpO1xuICAgICAgICBib2R5LmFwcGVuZENoaWxkKGFkZFByb2plY3REaWFsb2cpO1xuICAgICAgICBfc2V0QWRkUHJvamVjdERpYWxvZ0xpc3RlbmVyKCk7XG4gICAgICAgIF9zZXRBZGRQcm9qZWN0RGlhbG9nSW5wdXQoKTtcbiAgICAgICAgX3NldEFkZFByb2plY3RQcmVzc0VudGVyKCk7XG4gICAgICAgIF9zZXRBZGRQcm9qZWN0RGlhbG9nQ2FuY2VsQnV0dG9uKCk7XG4gICAgICAgIF9zZXRBZGRQcm9qZWN0RGlhbG9nQWRkQnV0dG9uKCk7XG5cbiAgICAgICAgLy8gQWRkIGVkaXQtcHJvamVjdCBkaWFsb2cgZm9yIGxhdGVyIHVzZVxuICAgICAgICBjb25zdCBlZGl0UHJvamVjdERpYWxvZyA9IGNyZWF0ZUVkaXRQcm9qZWN0RGlhbG9nKCk7XG4gICAgICAgIGJvZHkuYXBwZW5kQ2hpbGQoZWRpdFByb2plY3REaWFsb2cpO1xuICAgICAgICBfc2V0RWRpdFByb2plY3REaWFsb2dDbG9zZSgpO1xuICAgICAgICBfc2V0RWRpdFByb2plY3REaWFsb2dJbnB1dCgpO1xuICAgICAgICBfc2V0RWRpdFByb2plY3RQcmVzc0VudGVyKCk7XG4gICAgICAgIF9zZXRFZGl0UHJvamVjdERpYWxvZ0NhbmNlbEJ1dHRvbigpO1xuICAgICAgICBfc2V0RWRpdFByb2plY3REaWFsb2dTYXZlQnV0dG9uKCk7XG5cbiAgICAgICAgLy8gQWRkIGRlbGV0ZS1wcm9qZWN0IGRpYWxvZyBmb3IgbGF0ZXIgdXNlXG4gICAgICAgIGNvbnN0IGRlbGV0ZVByb2plY3REaWFsb2cgPSBjcmVhdGVEZWxldGVQcm9qZWN0RGlhbG9nKCk7XG4gICAgICAgIGJvZHkuYXBwZW5kQ2hpbGQoZGVsZXRlUHJvamVjdERpYWxvZyk7XG4gICAgICAgIF9zZXREZWxldGVQcm9qZWN0RGlhbG9nTGlzdGVuZXIoKTtcbiAgICAgICAgX3NldERlbGV0ZVByb2plY3REaWFsb2dDYW5jZWxCdXR0b24oKTtcbiAgICAgICAgX3NldERlbGV0ZVByb2plY3REaWFsb2dEZWxldGVCdXR0b24oKTtcbiAgICAgICAgX3NldERlbGV0ZVByb2plY3REaWFsb2dQcmVzc0VudGVyKCk7XG5cbiAgICAgICAgLy8gQWRkIGVkaXQtdGFzayBkaWFsb2cgZm9yIGxhdGVyIHVzZVxuICAgICAgICBjb25zdCBlZGl0VGFza0RpYWxvZyA9IGNyZWF0ZUVkaXRUYXNrRGlhbG9nKGRhdGFiYXNlQ29udHJvbGxlci5nZXRBbGxQcm9qZWN0cygpKTtcbiAgICAgICAgYm9keS5hcHBlbmRDaGlsZChlZGl0VGFza0RpYWxvZyk7XG4gICAgICAgIF9zZXRFZGl0VGFza0RpYWxvZ05hbWVJbnB1dCgpO1xuICAgICAgICBfc2V0RWRpdFRhc2tEaWFsb2dDbG9zZSgpO1xuICAgICAgICBfc2V0RWRpdFRhc2tEaWFsb2dDYW5jZWxCdXR0b24oKTtcblxuICAgICAgICAvLyBBZGQgZGVsZXRlLXRhc2sgZGlhbG9nIGZvciBsYXRlciB1c2VcbiAgICAgICAgY29uc3QgZGVsZXRlVGFza0RpYWxvZyA9IGNyZWF0ZURlbGV0ZVRhc2tEaWFsb2coKTtcbiAgICAgICAgYm9keS5hcHBlbmRDaGlsZChkZWxldGVUYXNrRGlhbG9nKTtcbiAgICAgICAgX3NldERlbGV0ZVRhc2tEaWFsb2dDbG9zZSgpO1xuICAgICAgICBfc2V0RGVsZXRlVGFza0RpYWxvZ0NhbmNlbEJ1dHRvbigpO1xuICAgICAgICBfc2V0RGVsZXRlVGFza0RpYWxvZ0RlbGV0ZUJ1dHRvbigpO1xuICAgICAgICBfc2V0RGVsZXRlVGFza0RpYWxvZ1ByZXNzRW50ZXIoKTtcblxuICAgICAgICAvLyBMb2FkIHRoZSBpbmJveCBwYWdlIGJ5IGRlZmF1bHRcbiAgICAgICAgX3N3aXRjaFBhZ2UoXCJJbmJveFwiKTtcbiAgICB9O1xuXG4gICAgLy8gTkFWQkFSXG5cbiAgICAvLyBEaXJlY3QgdG8gaW5ib3ggcGFnZSB3aGVuIHVzZXIgY2xpY2tzIG9uIHRoZSBsb2dvXG4gICAgY29uc3QgX3NldE5hdkJhckxvZ29MaXN0ZW5lciA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgbG9nbyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubG9nb1wiKTtcbiAgICAgICAgbG9nby5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgaW5ib3hJdGVtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNJbmJveFwiKTtcbiAgICAgICAgICAgIGlmICghaW5ib3hJdGVtLmNsYXNzTGlzdC5jb250YWlucyhcInNpZGViYXItaXRlbS1hY3RpdmVcIikpIHtcbiAgICAgICAgICAgICAgICBfc3dpdGNoUGFnZShpbmJveEl0ZW0uaWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgLy8gU0lERUJBUlxuXG4gICAgLy8gTG9hZCB0aGUgcHJvamVjdCBpdGVtcyBvbiB0aGUgc2lkZWJhclxuICAgIGNvbnN0IF9sb2FkUHJvamVjdEl0ZW1zID0gKCkgPT4ge1xuICAgICAgICAvLyBHZXQgYWxsIHByb2plY3RzIGV4Y2VwdCBJbmJveFxuICAgICAgICBsZXQgcHJvamVjdHMgPSBkYXRhYmFzZUNvbnRyb2xsZXIuZ2V0QWxsUHJvamVjdHMoKTtcbiAgICAgICAgcHJvamVjdHMgPSBwcm9qZWN0cy5maWx0ZXIocHJvamVjdCA9PiBwcm9qZWN0Lm5hbWUgIT09IFwiSW5ib3hcIik7XG5cbiAgICAgICAgLy8gUmVtb3ZlIGFsbCBpdGVtc1xuICAgICAgICBjb25zdCB3cmFwcGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zaWRlLWJhciAucHJvamVjdC1pdGVtc1wiKTtcbiAgICAgICAgd2hpbGUgKHdyYXBwZXIubGFzdENoaWxkKSB7XG4gICAgICAgICAgICB3cmFwcGVyLnJlbW92ZUNoaWxkKHdyYXBwZXIubGFzdENoaWxkKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEF0dGFjaCB0aGUgcHJvamVjdCBpdGVtcyB0byBzaWRlYmFyXG4gICAgICAgIHByb2plY3RzLmZvckVhY2gocHJvamVjdCA9PiB7XG4gICAgICAgICAgICB3cmFwcGVyLmFwcGVuZENoaWxkKGNyZWF0ZVNpZGVCYXJJdGVtKFByb2plY3RJY29uTGluaywgcHJvamVjdCwgdHJ1ZSkpO1xuICAgICAgICB9KTtcblxuICAgICAgICAvLyBBdHRhY2ggbGlzdGVuZXIgZm9yIHNpZGViYXIgcHJvamVjdCBpdGVtcyBhZ2FpblxuICAgICAgICBfc2V0SXRlbUxpc3RlbmVyKCk7XG4gICAgICAgIF9zZXRQcm9qZWN0SXRlbUVkaXRCdXR0b25zKCk7XG4gICAgICAgIF9zZXRQcm9qZWN0SXRlbURlbGV0ZUJ1dHRvbnMoKTtcbiAgICB9O1xuXG4gICAgLy8gQXR0YWNoIGxpc3RlbmVyIHRvIGVkaXQgYnV0dG9ucyBvbiB0aGUgcHJvamVjdCBpdGVtcyBvbiBzaWRlYmFyXG4gICAgY29uc3QgX3NldFByb2plY3RJdGVtRWRpdEJ1dHRvbnMgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGVkaXRCdXR0b25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5zaWRlYmFyLWl0ZW0gLmVkaXQtYnV0dG9uXCIpO1xuICAgICAgICBlZGl0QnV0dG9ucy5mb3JFYWNoKGJ1dHRvbiA9PiB7XG4gICAgICAgICAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBwcm9qZWN0ID0gZGF0YWJhc2VDb250cm9sbGVyLmdldFByb2plY3RCeUlkKGJ1dHRvbi5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnQuaWQpO1xuICAgICAgICAgICAgICAgIF9vcGVuRWRpdFByb2plY3REaWFsb2cocHJvamVjdCk7XG4gICAgICAgICAgICB9KVxuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgLy8gQXR0YWNoIGxpc3RlbmVyIHRvIGRlbGV0ZSBidXR0b25zIG9uIHRoZSBwcm9qZWN0IGl0ZW1zIG9uIHNpZGViYXJcbiAgICBjb25zdCBfc2V0UHJvamVjdEl0ZW1EZWxldGVCdXR0b25zID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBkZWxldGVCdXR0b25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5zaWRlYmFyLWl0ZW0gLmRlbGV0ZS1idXR0b25cIik7XG4gICAgICAgIGRlbGV0ZUJ1dHRvbnMuZm9yRWFjaChidXR0b24gPT4ge1xuICAgICAgICAgICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgcHJvamVjdCA9IGRhdGFiYXNlQ29udHJvbGxlci5nZXRQcm9qZWN0QnlJZChidXR0b24ucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50LmlkKTtcbiAgICAgICAgICAgICAgICBfb3BlbkRlbGV0ZVByb2plY3REaWFsb2cocHJvamVjdCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIC8vIERpcmVjdCB0byB0aGUgY29ycmVzcG9uZGluZyBwYWdlIHdoZW4gdXNlciBjbGlja3MgYW4gaXRlbSBvbiB0aGUgc2lkZWJhclxuICAgIGNvbnN0IF9zZXRJdGVtTGlzdGVuZXIgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHNpZGVCYXJJdGVtcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuc2lkZWJhci1pdGVtXCIpO1xuICAgICAgICBzaWRlQmFySXRlbXMuZm9yRWFjaChpdGVtID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGNvbnRlbnQgPSBpdGVtLnF1ZXJ5U2VsZWN0b3IoXCIuaXRlbS1jb250ZW50XCIpO1xuICAgICAgICAgICAgY29udGVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghaXRlbS5jbGFzc0xpc3QuY29udGFpbnMoXCJzaWRlYmFyLWl0ZW0tYWN0aXZlXCIpKSB7XG4gICAgICAgICAgICAgICAgICAgIF9zd2l0Y2hQYWdlKGl0ZW0uaWQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgLy8gQ2hhbmdlIGJhY2tncm91bmQgb2YgdGhlIGFjdGl2ZSBpdGVtXG4gICAgY29uc3QgX3NldEl0ZW1BY3RpdmUgPSBpdGVtSWQgPT4ge1xuICAgICAgICAvLyBSZW1vdmUgYWN0aXZlIHN0YXRlcyBmcm9tIGFsbCBpdGVtcyBmaXJzdFxuICAgICAgICBsZXQgaXRlbXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnNpZGViYXItaXRlbVwiKTtcbiAgICAgICAgaXRlbXMuZm9yRWFjaChpID0+IHtcbiAgICAgICAgICAgIGkuY2xhc3NOYW1lID0gXCJzaWRlYmFyLWl0ZW1cIjtcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIEFwcGVuZCBhY3RpdmUgY2xhc3MgdG8gc2VsZWN0ZWQgaXRlbVxuICAgICAgICBsZXQgaXRlbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGl0ZW1JZCk7XG4gICAgICAgIGl0ZW0uY2xhc3NMaXN0LmFkZChcInNpZGViYXItaXRlbS1hY3RpdmVcIik7XG4gICAgfTtcblxuICAgIGNvbnN0IF9zd2l0Y2hQYWdlID0gaXRlbUlkID0+IHtcbiAgICAgICAgX3NldEl0ZW1BY3RpdmUoaXRlbUlkKTtcblxuICAgICAgICBpZiAoaXRlbUlkID09PSBcIkluYm94XCIpIHtcbiAgICAgICAgICAgIF9sb2FkSW5ib3hQYWdlKCk7XG4gICAgICAgIH0gZWxzZSBpZiAoaXRlbUlkID09PSBcIlRvZGF5XCIpIHtcbiAgICAgICAgICAgIF9sb2FkVG9kYXlQYWdlKCk7XG4gICAgICAgIH0gZWxzZSBpZiAoaXRlbUlkID09PSBcIlVwY29taW5nXCIpIHtcbiAgICAgICAgICAgIF9sb2FkVXBjb21pbmdQYWdlKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBfbG9hZFByb2plY3RQYWdlKGl0ZW1JZCk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgY29uc3QgX2xvYWRJbmJveFBhZ2UgPSAoKSA9PiB7XG4gICAgICAgIC8vIFJlbW92ZSBjdXJyZW50IHBhZ2VcbiAgICAgICAgY29uc3QgY29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY29udGVudFwiKTtcbiAgICAgICAgaWYgKGNvbnRlbnQubGFzdENoaWxkKSB7XG4gICAgICAgICAgICBjb250ZW50LnJlbW92ZUNoaWxkKGNvbnRlbnQubGFzdENoaWxkKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIENyZWF0ZSBpbmJveCBwYWdlXG4gICAgICAgIGNvbnN0IGluYm94UGFnZSA9IGNyZWF0ZUluYm94UGFnZSgpO1xuXG4gICAgICAgIC8vIEZldGNoIHRhc2tzIGZyb20gbG9jYWwgc3RvcmFnZVxuICAgICAgICBjb25zdCB0YXNrcyA9IGRhdGFiYXNlQ29udHJvbGxlci5nZXRUYXNrc0J5UHJvamVjdElkKFwiSW5ib3hcIik7XG5cbiAgICAgICAgLy8gRGlzcGxheSB0YXNrc1xuICAgICAgICBjb25zdCBwcmlvcml0eVNlY3Rpb25zID0gaW5ib3hQYWdlLnF1ZXJ5U2VsZWN0b3JBbGwoXCIucHJpb3JpdHktc2VjdGlvblwiKTtcbiAgICAgICAgdGFza3MuZm9yRWFjaCh0YXNrID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHByaW9yaXR5ID0gcGFyc2VJbnQodGFzay5wcmlvcml0eSk7XG4gICAgICAgICAgICBjb25zdCB3cmFwcGVyID0gcHJpb3JpdHlTZWN0aW9uc1twcmlvcml0eSAtIDFdLmNoaWxkcmVuLml0ZW0oMSk7XG4gICAgICAgICAgICBjb25zdCBjYXJkID0gY3JlYXRlVGFza0NhcmQodGFzayk7XG4gICAgICAgICAgICB3cmFwcGVyLmFwcGVuZENoaWxkKGNhcmQpO1xuICAgICAgICAgICAgX3NldFRhc2tDYXJkTGlzdGVuZXJzKGNhcmQpO1xuICAgICAgICB9KTtcblxuICAgICAgICAvLyBBZGQgaW5ib3ggcGFnZVxuICAgICAgICBjb250ZW50LmFwcGVuZENoaWxkKGluYm94UGFnZSk7XG5cbiAgICAgICAgX3NldEluYm94QWRkVGFza0J1dHRvbkxpc3RlbmVyKCk7XG4gICAgfTtcblxuICAgIGNvbnN0IF9sb2FkVG9kYXlQYWdlID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBjb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjb250ZW50XCIpO1xuICAgICAgICBpZiAoY29udGVudC5sYXN0Q2hpbGQpIHtcbiAgICAgICAgICAgIGNvbnRlbnQucmVtb3ZlQ2hpbGQoY29udGVudC5sYXN0Q2hpbGQpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnRlbnQuYXBwZW5kQ2hpbGQoY3JlYXRlVG9kYXlQYWdlKCkpO1xuICAgIH07XG5cbiAgICBjb25zdCBfbG9hZFVwY29taW5nUGFnZSA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgY29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY29udGVudFwiKTtcbiAgICAgICAgaWYgKGNvbnRlbnQubGFzdENoaWxkKSB7XG4gICAgICAgICAgICBjb250ZW50LnJlbW92ZUNoaWxkKGNvbnRlbnQubGFzdENoaWxkKTtcbiAgICAgICAgfVxuICAgICAgICBjb250ZW50LmFwcGVuZENoaWxkKGNyZWF0ZVVwY29taW5nUGFnZSgpKTtcbiAgICB9O1xuXG4gICAgY29uc3QgX2xvYWRQcm9qZWN0UGFnZSA9IHByb2plY3RJZCA9PiB7XG4gICAgICAgIGNvbnN0IGNvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NvbnRlbnRcIik7XG4gICAgICAgIGlmIChjb250ZW50Lmxhc3RDaGlsZCkge1xuICAgICAgICAgICAgY29udGVudC5yZW1vdmVDaGlsZChjb250ZW50Lmxhc3RDaGlsZCk7XG4gICAgICAgIH1cbiAgICAgICAgY29udGVudC5hcHBlbmRDaGlsZChjcmVhdGVQcm9qZWN0UGFnZShwcm9qZWN0SWQpKTtcbiAgICB9O1xuXG4gICAgLy8gQURELVBST0pFQ1QgRElBTE9HXG5cbiAgICAvLyBBdHRhY2ggbGlzdGVuZXIgdG8gdGhlIGFkZC1wcm9qZWN0IGJ1dHRvbiBvbiB0aGUgc2lkZSBiYXJcbiAgICBjb25zdCBfc2V0QWRkUHJvamVjdEJ1dHRvbkxpc3RlbmVyID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBhZGRQcm9qZWN0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hZGQtcHJvamVjdC1idXR0b25cIik7XG4gICAgICAgIGFkZFByb2plY3RCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgICAgIF9vcGVuQWRkUHJvamVjdERpYWxvZygpO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgY29uc3QgX29wZW5BZGRQcm9qZWN0RGlhbG9nID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBkaWFsb2cgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmFkZC1wcm9qZWN0LWRpYWxvZ1wiKTtcbiAgICAgICAgZGlhbG9nLnNob3dNb2RhbCgpO1xuICAgICAgICAvLyBQcmV2ZW50IHNjcm9sbGluZ1xuICAgICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93ID0gXCJoaWRkZW5cIjtcblxuICAgICAgICAvLyBSZXNldCBpbnB1dCdzIGNvbnRlbnQgYW5kIGFueSBlcnJvciBtZXNzYWdlXG4gICAgICAgIGNvbnN0IGlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hZGQtcHJvamVjdC1kaWFsb2cgaW5wdXRcIik7XG4gICAgICAgIGlucHV0LnZhbHVlID0gXCJcIjtcbiAgICAgICAgY29uc3QgZXJyb3JNZXNzYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hZGQtcHJvamVjdC1kaWFsb2cgLmVycm9yLW1lc3NhZ2VcIik7XG4gICAgICAgIGVycm9yTWVzc2FnZS50ZXh0Q29udGVudCA9IFwiXCI7XG5cbiAgICAgICAgLy8gRGlzYWJsZSBhZGQgYnV0dG9uXG4gICAgICAgIGNvbnN0IGFkZEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYWRkLXByb2plY3QtZGlhbG9nIC5hZGQtYnV0dG9uXCIpO1xuICAgICAgICBhZGRCdXR0b24uZGlzYWJsZWQgPSB0cnVlO1xuICAgIH07XG5cbiAgICBjb25zdCBfY2xvc2VBZGRQcm9qZWN0RGlhbG9nID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBkaWFsb2cgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmFkZC1wcm9qZWN0LWRpYWxvZ1wiKTtcbiAgICAgICAgZGlhbG9nLmNsb3NlKCk7XG4gICAgfTtcblxuICAgIC8vIEF0dGFjaCBsaXN0ZW5lciB0byBhZGQtcHJvamVjdCBkaWFsb2cgdG8gZGV0ZWN0IHdoZW4gaXQgY2xvc2VzXG4gICAgY29uc3QgX3NldEFkZFByb2plY3REaWFsb2dMaXN0ZW5lciA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgZGlhbG9nID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hZGQtcHJvamVjdC1kaWFsb2dcIik7XG4gICAgICAgIGRpYWxvZy5hZGRFdmVudExpc3RlbmVyKFwiY2xvc2VcIiwgKCkgPT4ge1xuICAgICAgICAgICAgLy8gRW5hYmxlIHNjcm9sbGluZyBhZ2FpblxuICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdyA9IFwiYXV0b1wiO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgLy8gQXR0YWNoIGxpc3RlbmVyIHRvIGNhbmNlbCBidXR0b24gaW4gYWRkLXByb2plY3QgZGlhbG9nXG4gICAgY29uc3QgX3NldEFkZFByb2plY3REaWFsb2dDYW5jZWxCdXR0b24gPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYWRkLXByb2plY3QtZGlhbG9nIC5jYW5jZWwtYnV0dG9uXCIpO1xuICAgICAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGV2ZW50ID0+IHtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBfY2xvc2VBZGRQcm9qZWN0RGlhbG9nKCk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICAvLyBEZXRlY3Qgd2hlbiB1c2VyIGlzIHR5cGluZyB0aGUgcHJvamVjdCdzIG5hbWUgdG8gaW5wdXQgYW5kIHZlcmlmeSBpdFxuICAgIGNvbnN0IF9zZXRBZGRQcm9qZWN0RGlhbG9nSW5wdXQgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hZGQtcHJvamVjdC1kaWFsb2cgaW5wdXRcIik7XG4gICAgICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBuYW1lUmVzdWx0ID0gX3ZlcmlmeVByb2plY3ROYW1lKGlucHV0LnZhbHVlKTtcbiAgICAgICAgICAgIGNvbnN0IGFkZEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYWRkLXByb2plY3QtZGlhbG9nIC5hZGQtYnV0dG9uXCIpO1xuICAgICAgICAgICAgY29uc3QgZXJyb3JNZXNzYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hZGQtcHJvamVjdC1kaWFsb2cgLmVycm9yLW1lc3NhZ2VcIik7XG4gICAgICAgICAgICBpZiAobmFtZVJlc3VsdCA9PT0gXCJ2YWxpZFwiKSB7XG4gICAgICAgICAgICAgICAgYWRkQnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgZXJyb3JNZXNzYWdlLnRleHRDb250ZW50ID0gXCJcIjtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgYWRkQnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBlcnJvck1lc3NhZ2UudGV4dENvbnRlbnQgPSBuYW1lUmVzdWx0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgLy8gUmV0dXJuIHRoZSBlcnJvciBzdHJpbmdcbiAgICBjb25zdCBfdmVyaWZ5UHJvamVjdE5hbWUgPSBuYW1lID0+IHtcbiAgICAgICAgbGV0IHJlc3VsdCA9IFwidmFsaWRcIjtcbiAgICAgICAgLy8gQ2hlY2sgaWYgdGhlIG5hbWUgaXMgYmV0d2VlbiAxLTIwIGNoYXJhY3RlcnNcbiAgICAgICAgaWYgKG5hbWUubGVuZ3RoID09IDAgfHwgbmFtZS5sZW5ndGggPiAyMCkge1xuICAgICAgICAgICAgcmVzdWx0ID0gXCJQcm9qZWN0J3MgbmFtZSBtdXN0IGhhdmUgMS0yMCBjaGFyYWN0ZXJzLlwiO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gQ2hlY2sgaWYgdGhlIG5hbWUgaXMgYWxyZWFkeSB0YWtlblxuICAgICAgICAgICAgY29uc3QgcHJvamVjdHMgPSBkYXRhYmFzZUNvbnRyb2xsZXIuZ2V0QWxsUHJvamVjdHMoKTtcbiAgICAgICAgICAgIGZvciAobGV0IHByb2plY3Qgb2YgcHJvamVjdHMpIHtcbiAgICAgICAgICAgICAgICBpZiAocHJvamVjdC5uYW1lID09PSBuYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdCA9IFwiVGhpcyBuYW1lIGlzIGFscmVhZHkgdGFrZW4uXCI7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcblxuICAgIC8vIERldGVjdCB3aGVuIHVzZXIgY2xpY2tzIGFkZCBidXR0b25cbiAgICBjb25zdCBfc2V0QWRkUHJvamVjdERpYWxvZ0FkZEJ1dHRvbiA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgYWRkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hZGQtcHJvamVjdC1kaWFsb2cgLmFkZC1idXR0b25cIik7XG4gICAgICAgIGFkZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZXZlbnQgPT4ge1xuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIGNvbnN0IGlkID0gdXVpZHY0KCk7XG4gICAgICAgICAgICBjb25zdCBuYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hZGQtcHJvamVjdC1kaWFsb2cgaW5wdXRcIikudmFsdWU7XG4gICAgICAgICAgICBjb25zdCB0aW1lU3RhbXAgPSAobmV3IERhdGUoKSkuZ2V0VGltZSgpO1xuICAgICAgICAgICAgZGF0YWJhc2VDb250cm9sbGVyLmNyZWF0ZVByb2plY3Qoe1xuICAgICAgICAgICAgICAgIGlkOiBpZCxcbiAgICAgICAgICAgICAgICBuYW1lOiBuYW1lLFxuICAgICAgICAgICAgICAgIHRpbWVDcmVhdGVkOiB0aW1lU3RhbXAsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIF9jbG9zZUFkZFByb2plY3REaWFsb2coKTtcbiAgICAgICAgICAgIF9sb2FkUHJvamVjdEl0ZW1zKCk7XG4gICAgICAgICAgICBfc3dpdGNoUGFnZShpZCk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICAvLyBEZXRlY3Qgd2hlbiB1c2VyIHByZXNzZXMgZW50ZXJcbiAgICBjb25zdCBfc2V0QWRkUHJvamVjdFByZXNzRW50ZXIgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hZGQtcHJvamVjdC1kaWFsb2cgaW5wdXRcIik7XG4gICAgICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlwcmVzc1wiLCBldmVudCA9PiB7XG4gICAgICAgICAgICBpZiAoZXZlbnQua2V5Q29kZSA9PT0gMTMpIHtcbiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIGlmIChfdmVyaWZ5UHJvamVjdE5hbWUoaW5wdXQudmFsdWUpID09PSBcInZhbGlkXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaWQgPSB1dWlkdjQoKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbmFtZSA9IGlucHV0LnZhbHVlO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB0aW1lU3RhbXAgPSAobmV3IERhdGUoKSkuZ2V0VGltZSgpO1xuICAgICAgICAgICAgICAgICAgICBkYXRhYmFzZUNvbnRyb2xsZXIuY3JlYXRlUHJvamVjdCh7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZDogaWQsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBuYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGltZUNyZWF0ZWQ6IHRpbWVTdGFtcCxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIF9jbG9zZUFkZFByb2plY3REaWFsb2coKTtcbiAgICAgICAgICAgICAgICAgICAgX2xvYWRQcm9qZWN0SXRlbXMoKTtcbiAgICAgICAgICAgICAgICAgICAgX3N3aXRjaFBhZ2UoaWQpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGVycm9yTWVzc2FnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYWRkLXByb2plY3QtZGlhbG9nIC5lcnJvci1tZXNzYWdlXCIpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZXJyb3JNZXNzYWdlLnRleHRDb250ZW50ID09PSBcIlwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlcnJvck1lc3NhZ2UudGV4dENvbnRlbnQgPSBfdmVyaWZ5UHJvamVjdE5hbWUoaW5wdXQudmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyBFRElUIFBST0pFQ1QgRElBTE9HXG5cbiAgICBjb25zdCBfb3BlbkVkaXRQcm9qZWN0RGlhbG9nID0gcHJvamVjdCA9PiB7XG4gICAgICAgIGNvbnN0IGRpYWxvZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWRpdC1wcm9qZWN0LWRpYWxvZ1wiKTtcbiAgICAgICAgZGlhbG9nLmRhdGFQcm9qZWN0ID0gcHJvamVjdDtcbiAgICAgICAgZGlhbG9nLnNob3dNb2RhbCgpO1xuICAgICAgICAvLyBQcmV2ZW50IHNjcm9sbGluZ1xuICAgICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93ID0gXCJoaWRkZW5cIjtcbiAgICAgICAgLy8gUG9wdWxhdGUgcHJvamVjdCBuYW1lIHRvIGlucHV0IGZpZWxkXG4gICAgICAgIGNvbnN0IGlucHV0ID0gZGlhbG9nLnF1ZXJ5U2VsZWN0b3IoXCJpbnB1dFwiKTtcbiAgICAgICAgaW5wdXQudmFsdWUgPSBwcm9qZWN0Lm5hbWU7XG4gICAgICAgIC8vIFJlc2V0IGVycm9yIG1lc3NhZ2VcbiAgICAgICAgY29uc3QgZXJyb3JNZXNzYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5lZGl0LXByb2plY3QtZGlhbG9nIC5lcnJvci1tZXNzYWdlXCIpO1xuICAgICAgICBlcnJvck1lc3NhZ2UudGV4dENvbnRlbnQgPSBcIlwiO1xuICAgICAgICAvLyBEaXNhYmxlIHNhdmUgYnV0dG9uXG4gICAgICAgIGNvbnN0IHNhdmVCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmVkaXQtcHJvamVjdC1kaWFsb2cgLnNhdmUtYnV0dG9uXCIpO1xuICAgICAgICBzYXZlQnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcbiAgICB9O1xuXG4gICAgLy8gQXR0YWNoIGxpc3RlbmVyIHRvIGVkaXQtcHJvamVjdCBkaWFsb2cgdG8gZGV0ZWN0IHdoZW4gaXQgY2xvc2VzXG4gICAgY29uc3QgX3NldEVkaXRQcm9qZWN0RGlhbG9nQ2xvc2UgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGRpYWxvZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWRpdC1wcm9qZWN0LWRpYWxvZ1wiKTtcbiAgICAgICAgZGlhbG9nLmFkZEV2ZW50TGlzdGVuZXIoXCJjbG9zZVwiLCAoKSA9PiB7XG4gICAgICAgICAgICAvLyBFbmFibGUgc2Nyb2xsaW5nIGFnYWluXG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93ID0gXCJhdXRvXCI7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICAvLyBEZXRlY3Qgd2hlbiB1c2VyIGNsaWNrcyBjYW5jZWwgYnV0dG9uXG4gICAgY29uc3QgX3NldEVkaXRQcm9qZWN0RGlhbG9nQ2FuY2VsQnV0dG9uID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBidXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmVkaXQtcHJvamVjdC1kaWFsb2cgLmNhbmNlbC1idXR0b25cIik7XG4gICAgICAgIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZXZlbnQgPT4ge1xuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIF9jbG9zZUVkaXRQcm9qZWN0RGlhbG9nKCk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBjb25zdCBfY2xvc2VFZGl0UHJvamVjdERpYWxvZyA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgZGlhbG9nID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5lZGl0LXByb2plY3QtZGlhbG9nXCIpO1xuICAgICAgICBkaWFsb2cuY2xvc2UoKTtcbiAgICB9XG5cbiAgICAvLyBEZXRlY3Qgd2hlbiB1c2VyIGlzIHR5cGluZyBuZXcgbmFtZSB0byBpbnB1dCBmaWVsZCBhbmQgdmVyaWZ5XG4gICAgY29uc3QgX3NldEVkaXRQcm9qZWN0RGlhbG9nSW5wdXQgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5lZGl0LXByb2plY3QtZGlhbG9nIGlucHV0XCIpO1xuICAgICAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgbmFtZVJlc3VsdCA9IF92ZXJpZnlQcm9qZWN0TmFtZShpbnB1dC52YWx1ZSk7XG4gICAgICAgICAgICBjb25zdCBzYXZlQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5lZGl0LXByb2plY3QtZGlhbG9nIC5zYXZlLWJ1dHRvblwiKTtcbiAgICAgICAgICAgIGNvbnN0IGVycm9yTWVzc2FnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWRpdC1wcm9qZWN0LWRpYWxvZyAuZXJyb3ItbWVzc2FnZVwiKTtcbiAgICAgICAgICAgIGlmIChuYW1lUmVzdWx0ID09PSBcInZhbGlkXCIpIHtcbiAgICAgICAgICAgICAgICBzYXZlQnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgZXJyb3JNZXNzYWdlLnRleHRDb250ZW50ID0gXCJcIjtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgc2F2ZUJ1dHRvbi5kaXNhYmxlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgZXJyb3JNZXNzYWdlLnRleHRDb250ZW50ID0gbmFtZVJlc3VsdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIC8vIERldGVjdCB3aGVuIHVzZXIgY2xpY2tzIHNhdmVcbiAgICBjb25zdCBfc2V0RWRpdFByb2plY3REaWFsb2dTYXZlQnV0dG9uID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBzYXZlQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5lZGl0LXByb2plY3QtZGlhbG9nIC5zYXZlLWJ1dHRvblwiKTtcbiAgICAgICAgc2F2ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZXZlbnQgPT4ge1xuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIGNvbnN0IG9sZFByb2plY3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmVkaXQtcHJvamVjdC1kaWFsb2dcIikuZGF0YVByb2plY3Q7XG4gICAgICAgICAgICBsZXQgbmV3UHJvamVjdCA9IHt9XG4gICAgICAgICAgICBuZXdQcm9qZWN0LmlkID0gb2xkUHJvamVjdC5pZDtcbiAgICAgICAgICAgIG5ld1Byb2plY3QubmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWRpdC1wcm9qZWN0LWRpYWxvZyBpbnB1dFwiKS52YWx1ZTtcbiAgICAgICAgICAgIG5ld1Byb2plY3QudGltZUNyZWF0ZWQgPSBvbGRQcm9qZWN0LnRpbWVDcmVhdGVkO1xuICAgICAgICAgICAgZGF0YWJhc2VDb250cm9sbGVyLnVwZGF0ZVByb2plY3Qob2xkUHJvamVjdCwgbmV3UHJvamVjdClcbiAgICAgICAgICAgIF9jbG9zZUVkaXRQcm9qZWN0RGlhbG9nKCk7XG4gICAgICAgICAgICBfbG9hZFByb2plY3RJdGVtcygpO1xuICAgICAgICAgICAgX3N3aXRjaFBhZ2UobmV3UHJvamVjdC5pZCk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICAvLyBEZXRlY3Qgd2hlbiB1c2VyIHByZXNzZXMgZW50ZXJcbiAgICBjb25zdCBfc2V0RWRpdFByb2plY3RQcmVzc0VudGVyID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBpbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWRpdC1wcm9qZWN0LWRpYWxvZyBpbnB1dFwiKTtcbiAgICAgICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcImtleXByZXNzXCIsIGV2ZW50ID0+IHtcbiAgICAgICAgICAgIGlmIChldmVudC5rZXlDb2RlID09PSAxMykge1xuICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgaWYgKF92ZXJpZnlQcm9qZWN0TmFtZShpbnB1dC52YWx1ZSkgPT09IFwidmFsaWRcIikge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBvbGRQcm9qZWN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5lZGl0LXByb2plY3QtZGlhbG9nXCIpLmRhdGFQcm9qZWN0O1xuICAgICAgICAgICAgICAgICAgICBsZXQgbmV3UHJvamVjdCA9IHt9XG4gICAgICAgICAgICAgICAgICAgIG5ld1Byb2plY3QuaWQgPSBvbGRQcm9qZWN0LmlkO1xuICAgICAgICAgICAgICAgICAgICBuZXdQcm9qZWN0Lm5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmVkaXQtcHJvamVjdC1kaWFsb2cgaW5wdXRcIikudmFsdWU7XG4gICAgICAgICAgICAgICAgICAgIG5ld1Byb2plY3QudGltZUNyZWF0ZWQgPSBvbGRQcm9qZWN0LnRpbWVDcmVhdGVkO1xuICAgICAgICAgICAgICAgICAgICBkYXRhYmFzZUNvbnRyb2xsZXIudXBkYXRlUHJvamVjdChvbGRQcm9qZWN0LCBuZXdQcm9qZWN0KTtcbiAgICAgICAgICAgICAgICAgICAgX2Nsb3NlRWRpdFByb2plY3REaWFsb2coKTtcbiAgICAgICAgICAgICAgICAgICAgX2xvYWRQcm9qZWN0SXRlbXMoKTtcbiAgICAgICAgICAgICAgICAgICAgX3N3aXRjaFBhZ2UobmV3UHJvamVjdC5pZCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZXJyb3JNZXNzYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5lZGl0LXByb2plY3QtZGlhbG9nIC5lcnJvci1tZXNzYWdlXCIpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZXJyb3JNZXNzYWdlLnRleHRDb250ZW50ID09PSBcIlwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlcnJvck1lc3NhZ2UudGV4dENvbnRlbnQgPSBfdmVyaWZ5UHJvamVjdE5hbWUoaW5wdXQudmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgLy8gREVMRVRFIFBST0pFQ1QgRElBTE9HXG5cbiAgICBjb25zdCBfb3BlbkRlbGV0ZVByb2plY3REaWFsb2cgPSBwcm9qZWN0ID0+IHtcbiAgICAgICAgY29uc3QgZGlhbG9nID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5kZWxldGUtcHJvamVjdC1kaWFsb2dcIik7XG4gICAgICAgIGRpYWxvZy5kYXRhUHJvamVjdCA9IHByb2plY3Q7XG4gICAgICAgIGRpYWxvZy5zaG93TW9kYWwoKTtcbiAgICAgICAgLy8gUHJldmVudCBzY3JvbGxpbmdcbiAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdyA9IFwiaGlkZGVuXCI7XG4gICAgICAgIC8vIFBvcHVsYXRlIHByb2plY3QgbmFtZSB0byBtZXNzYWdlXG4gICAgICAgIGNvbnN0IG5hbWVTcGFuID0gZGlhbG9nLnF1ZXJ5U2VsZWN0b3IoXCIubWVzc2FnZSBzcGFuOmZpcnN0LUNoaWxkXCIpO1xuICAgICAgICBuYW1lU3Bhbi50ZXh0Q29udGVudCA9IHByb2plY3QubmFtZTtcbiAgICB9O1xuXG4gICAgLy8gQXR0YWNoIGxpc3RlbmVyIHRvIGRlbGV0ZS1wcm9qZWN0IGRpYWxvZyB0byBkZXRlY3Qgd2hlbiBpdCBjbG9zZXNcbiAgICBjb25zdCBfc2V0RGVsZXRlUHJvamVjdERpYWxvZ0xpc3RlbmVyID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBkaWFsb2cgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmRlbGV0ZS1wcm9qZWN0LWRpYWxvZ1wiKTtcbiAgICAgICAgZGlhbG9nLmFkZEV2ZW50TGlzdGVuZXIoXCJjbG9zZVwiLCAoKSA9PiB7XG4gICAgICAgICAgICAvLyBFbmFibGUgc2Nyb2xsaW5nIGFnYWluXG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93ID0gXCJhdXRvXCI7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICAvLyBEZXRlY3Qgd2hlbiB1c2VyIGNsaWNrcyBjYW5jZWwgYnV0dG9uXG4gICAgY29uc3QgX3NldERlbGV0ZVByb2plY3REaWFsb2dDYW5jZWxCdXR0b24gPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZGVsZXRlLXByb2plY3QtZGlhbG9nIC5jYW5jZWwtYnV0dG9uXCIpO1xuICAgICAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGV2ZW50ID0+IHtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBfY2xvc2VEZWxldGVQcm9qZWN0RGlhbG9nKCk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBjb25zdCBfY2xvc2VEZWxldGVQcm9qZWN0RGlhbG9nID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBkaWFsb2cgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmRlbGV0ZS1wcm9qZWN0LWRpYWxvZ1wiKTtcbiAgICAgICAgZGlhbG9nLmNsb3NlKCk7XG4gICAgfTtcblxuICAgIC8vIERlbGV0ZSBwcm9qZWN0IHdoZW4gdXNlciBjbGlja3MgZGVsZXRlIGJ1dHRvblxuICAgIGNvbnN0IF9zZXREZWxldGVQcm9qZWN0RGlhbG9nRGVsZXRlQnV0dG9uID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBkZWxldGVCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmRlbGV0ZS1wcm9qZWN0LWRpYWxvZyAuZGVsZXRlLWJ1dHRvblwiKTtcbiAgICAgICAgZGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBldmVudCA9PiB7XG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgY29uc3QgcHJvamVjdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZGVsZXRlLXByb2plY3QtZGlhbG9nXCIpLmRhdGFQcm9qZWN0O1xuICAgICAgICAgICAgZGF0YWJhc2VDb250cm9sbGVyLmRlbGV0ZVByb2plY3QocHJvamVjdC5pZCk7XG4gICAgICAgICAgICBfY2xvc2VEZWxldGVQcm9qZWN0RGlhbG9nKCk7XG4gICAgICAgICAgICAvLyBSZWRpcmVjdCB0byBpbmJveCBwYWdlIGlmIHRoZSBjdXJyZW50IHBhZ2UgaXMgdGhlIGRlbGV0ZWQgcHJvamVjdFxuICAgICAgICAgICAgY29uc3QgYWN0aXZlUGFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2lkZWJhci1pdGVtLWFjdGl2ZVwiKTtcbiAgICAgICAgICAgIGlmIChhY3RpdmVQYWdlLmlkID09PSBwcm9qZWN0LmlkKSB7XG4gICAgICAgICAgICAgICAgX3N3aXRjaFBhZ2UoXCJJbmJveFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF9sb2FkUHJvamVjdEl0ZW1zKCk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICAvLyBEZWxldGUgcHJvamVjdCB3aGVuIHVzZXIgcHJlc3NlcyBlbnRlclxuICAgIGNvbnN0IF9zZXREZWxldGVQcm9qZWN0RGlhbG9nUHJlc3NFbnRlciA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgZGlhbG9nID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5kZWxldGUtcHJvamVjdC1kaWFsb2dcIik7XG4gICAgICAgIGRpYWxvZy5hZGRFdmVudExpc3RlbmVyKFwia2V5cHJlc3NcIiwgZXZlbnQgPT4ge1xuICAgICAgICAgICAgaWYgKGV2ZW50LmtleUNvZGUgPT09IDEzKSB7XG4gICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICBjb25zdCBwcm9qZWN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5kZWxldGUtcHJvamVjdC1kaWFsb2dcIikuZGF0YVByb2plY3Q7XG4gICAgICAgICAgICAgICAgZGF0YWJhc2VDb250cm9sbGVyLmRlbGV0ZVByb2plY3QocHJvamVjdC5pZCk7XG4gICAgICAgICAgICAgICAgX2Nsb3NlRGVsZXRlUHJvamVjdERpYWxvZygpO1xuICAgICAgICAgICAgICAgIC8vIFJlZGlyZWN0IHRvIGluYm94IHBhZ2UgaWYgdGhlIGN1cnJlbnQgcGFnZSBpcyB0aGUgZGVsZXRlZCBwcm9qZWN0XG4gICAgICAgICAgICAgICAgY29uc3QgYWN0aXZlUGFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2lkZWJhci1pdGVtLWFjdGl2ZVwiKTtcbiAgICAgICAgICAgICAgICBpZiAoYWN0aXZlUGFnZS5pZCA9PT0gcHJvamVjdC5pZCkge1xuICAgICAgICAgICAgICAgICAgICBfc3dpdGNoUGFnZShcIkluYm94XCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBfbG9hZFByb2plY3RJdGVtcygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgLy8gSU5CT1ggUEFHRVxuXG4gICAgY29uc3QgX3NldEluYm94QWRkVGFza0J1dHRvbkxpc3RlbmVyID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBidXR0b25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5hZGQtdGFzay1idXR0b25cIik7XG4gICAgICAgIGJ1dHRvbnMuZm9yRWFjaChidXR0b24gPT4ge1xuICAgICAgICAgICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgX29wZW5BZGRUYXNrQ2FyZChidXR0b24pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBjb25zdCBfb3BlbkFkZFRhc2tDYXJkID0gYWRkQnV0dG9uID0+IHtcbiAgICAgICAgLy8gSGlkZSB0aGUgYWRkLXRhc2sgYnV0dG9uc1xuICAgICAgICBjb25zdCBhZGRCdXR0b25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5pbmJveC1wYWdlXCIpLnF1ZXJ5U2VsZWN0b3JBbGwoXCIuYWRkLXRhc2stYnV0dG9uXCIpO1xuICAgICAgICBhZGRCdXR0b25zLmZvckVhY2goYnV0dG9uID0+IHtcbiAgICAgICAgICAgIGJ1dHRvbi5jbGFzc0xpc3QuYWRkKFwiYWRkLXRhc2stYnV0dG9uLWhpZGRlblwiKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gQ3JlYXRlIHRoZSBhZGQtdGFzayBjYXJkXG4gICAgICAgIGNvbnN0IGNhcmQgPSBjcmVhdGVBZGRUYXNrQ2FyZChkYXRhYmFzZUNvbnRyb2xsZXIuZ2V0QWxsUHJvamVjdHMoKSk7XG5cbiAgICAgICAgLy8gU2V0IGRlZmF1bHQgdmFsdWVzXG4gICAgICAgIF9zZXRBZGRUYXNrQ2FyZERlZmF1bHRQcmlvcml0eShjYXJkLCBwYXJzZUludChhZGRCdXR0b24ucGFyZW50RWxlbWVudC5maXJzdENoaWxkLnRleHRDb250ZW50LnNwbGl0KFwiIFwiKVsxXSkpO1xuXG4gICAgICAgIC8vIFNldCBsaXN0ZW5lcnNcbiAgICAgICAgX3NldEFkZFRhc2tDYXJkQ2FuY2VsQnV0dG9uTGlzdGVuZXIoY2FyZC5xdWVyeVNlbGVjdG9yKFwiLmFkZC10YXNrLWNhcmQgLmNhbmNlbC1idXR0b25cIikpO1xuICAgICAgICBfc2V0QWRkVGFza0NhcmRUYXNrTmFtZUlucHV0KGNhcmQpO1xuICAgICAgICBfc2V0QWRkVGFza0NhcmRBZGRCdXR0b24oY2FyZCk7XG5cbiAgICAgICAgLy8gQWRkIHRoZSBjYXJkXG4gICAgICAgIGNvbnN0IHByaW9yaXR5U2VjdGlvbiA9IGFkZEJ1dHRvbi5wYXJlbnRFbGVtZW50O1xuICAgICAgICBwcmlvcml0eVNlY3Rpb24uYXBwZW5kQ2hpbGQoY2FyZCk7XG4gICAgfTtcblxuICAgIC8vIFNldCBkZWZhdWx0IHByaW9yaXR5IGZvciB0aGUgZHJvcGRvd25cbiAgICBjb25zdCBfc2V0QWRkVGFza0NhcmREZWZhdWx0UHJpb3JpdHkgPSAoY2FyZCwgcHJpb3JpdHkpID0+IHtcbiAgICAgICAgY29uc3QgZHJvcGRvd24gPSBjYXJkLnF1ZXJ5U2VsZWN0b3IoXCIubWlkZGxlLXJvdyBzZWxlY3RcIik7XG4gICAgICAgIGNvbnN0IG9wdGlvbiA9IGRyb3Bkb3duLmNoaWxkcmVuLml0ZW0ocHJpb3JpdHkgLSAxKTtcbiAgICAgICAgb3B0aW9uLnNlbGVjdGVkID0gXCJzZWxlY3RlZFwiO1xuICAgIH07XG5cbiAgICAvLyBBdHRhY2ggbGlzdGVuZXIgdG8gY2FuY2VsIGJ1dHRvbiBpbiBhZGQtdGFzayBjYXJkXG4gICAgY29uc3QgX3NldEFkZFRhc2tDYXJkQ2FuY2VsQnV0dG9uTGlzdGVuZXIgPSBjYW5jZWxCdXR0b24gPT4ge1xuICAgICAgICBjYW5jZWxCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgICAgIF9jbG9zZUFkZFRhc2tDYXJkKCk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICAvLyBBdHRhY2ggbGlzdGVuZXIgZm9yIHRhc2sgbmFtZSBpbnB1dCBmaWVsZFxuICAgIGNvbnN0IF9zZXRBZGRUYXNrQ2FyZFRhc2tOYW1lSW5wdXQgPSBjYXJkID0+IHtcbiAgICAgICAgY29uc3QgaW5wdXQgPSBjYXJkLmZpcnN0Q2hpbGQ7XG4gICAgICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBhZGRCdXR0b24gPSBjYXJkLnF1ZXJ5U2VsZWN0b3IoXCIuYWRkLWJ1dHRvblwiKTtcbiAgICAgICAgICAgIGlmIChpbnB1dC50ZXh0Q29udGVudC50cmltKCkgIT09IFwiXCIpIHtcbiAgICAgICAgICAgICAgICBhZGRCdXR0b24uZGlzYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgYWRkQnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIC8vIEF0dGFjaCBsaXN0ZW5lciB0byBhZGQgYnV0dG9uIGluIGFkZC10YXNrIGNhcmRcbiAgICBjb25zdCBfc2V0QWRkVGFza0NhcmRBZGRCdXR0b24gPSBjYXJkID0+IHtcbiAgICAgICAgY29uc3QgYWRkQnV0dG9uID0gY2FyZC5xdWVyeVNlbGVjdG9yKFwiLmFkZC1idXR0b25cIik7XG4gICAgICAgIGFkZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgdGltZUNyZWF0ZWQgPSAobmV3IERhdGUoKSkuZ2V0VGltZSgpO1xuICAgICAgICAgICAgY29uc3QgbmFtZSA9IGNhcmQuZmlyc3RDaGlsZC50ZXh0Q29udGVudC50cmltKCk7XG4gICAgICAgICAgICBjb25zdCBkZXNjcmlwdGlvbiA9IGNhcmQuY2hpbGRyZW4uaXRlbSgxKS50ZXh0Q29udGVudC50cmltKCk7XG4gICAgICAgICAgICBjb25zdCBkdWVEYXRlU3RyaW5nID0gY2FyZC5xdWVyeVNlbGVjdG9yKFwiLm1pZGRsZS1yb3cgaW5wdXRcIikudmFsdWU7XG4gICAgICAgICAgICBsZXQgZHVlRGF0ZSA9IG5ldyBEYXRlKCk7XG4gICAgICAgICAgICBpZiAoZHVlRGF0ZVN0cmluZyAhPT0gXCJcIikge1xuICAgICAgICAgICAgICAgIGR1ZURhdGUuc2V0VVRDRnVsbFllYXIoZHVlRGF0ZVN0cmluZy5zcGxpdChcIi1cIilbMF0pO1xuICAgICAgICAgICAgICAgIGR1ZURhdGUuc2V0TW9udGgocGFyc2VJbnQoZHVlRGF0ZVN0cmluZy5zcGxpdChcIi1cIilbMV0pIC0gMSk7XG4gICAgICAgICAgICAgICAgZHVlRGF0ZS5zZXREYXRlKGR1ZURhdGVTdHJpbmcuc3BsaXQoXCItXCIpWzJdKTtcbiAgICAgICAgICAgICAgICBkdWVEYXRlLnNldFVUQ0hvdXJzKDApO1xuICAgICAgICAgICAgICAgIGR1ZURhdGUuc2V0TWludXRlcygwKTtcbiAgICAgICAgICAgICAgICBkdWVEYXRlLnNldFNlY29uZHMoMCk7XG4gICAgICAgICAgICAgICAgZHVlRGF0ZS5zZXRNaWxsaXNlY29uZHMoMCk7XG4gICAgICAgICAgICAgICAgZHVlRGF0ZSA9IGR1ZURhdGUuZ2V0VGltZSgpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBkdWVEYXRlID0gXCJcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHByaW9yaXR5ID0gY2FyZC5xdWVyeVNlbGVjdG9yKFwiLm1pZGRsZS1yb3cgc2VsZWN0XCIpLnZhbHVlLnNwbGl0KFwiIFwiKVsxXTtcbiAgICAgICAgICAgIGNvbnN0IHByb2plY3ROYW1lID0gY2FyZC5xdWVyeVNlbGVjdG9yKFwiLmJvdHRvbS1yb3cgc2VsZWN0XCIpLnZhbHVlO1xuICAgICAgICAgICAgY29uc3QgdGFzayA9IHtcbiAgICAgICAgICAgICAgICBpZDogdXVpZHY0KCksXG4gICAgICAgICAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogZGVzY3JpcHRpb24sXG4gICAgICAgICAgICAgICAgZHVlRGF0ZTogZHVlRGF0ZSxcbiAgICAgICAgICAgICAgICBwcmlvcml0eTogcHJpb3JpdHksXG4gICAgICAgICAgICAgICAgcHJvamVjdElkOiBkYXRhYmFzZUNvbnRyb2xsZXIuZ2V0UHJvamVjdEJ5TmFtZShwcm9qZWN0TmFtZSkuaWQsXG4gICAgICAgICAgICAgICAgdGltZUNyZWF0ZWQ6IHRpbWVDcmVhdGVkLFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZGF0YWJhc2VDb250cm9sbGVyLmNyZWF0ZVRhc2sodGFzayk7XG4gICAgICAgICAgICBfbG9hZEluYm94UGFnZSgpO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgY29uc3QgX2Nsb3NlQWRkVGFza0NhcmQgPSAoKSA9PiB7XG4gICAgICAgIC8vIFJlbW92ZSB0aGUgY2FyZFxuICAgICAgICBjb25zdCBjYXJkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hZGQtdGFzay1jYXJkXCIpO1xuICAgICAgICBjb25zdCBwcmlvcml0eVNlY3Rpb24gPSBjYXJkLnBhcmVudEVsZW1lbnQ7XG4gICAgICAgIHByaW9yaXR5U2VjdGlvbi5yZW1vdmVDaGlsZChwcmlvcml0eVNlY3Rpb24ubGFzdENoaWxkKTtcblxuICAgICAgICAvLyBTaG93IHRoZSBhZGQtdGFzayBidXR0b25zIGFnYWluXG4gICAgICAgIGNvbnN0IGFkZEJ1dHRvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmluYm94LXBhZ2VcIikucXVlcnlTZWxlY3RvckFsbChcIi5hZGQtdGFzay1idXR0b25cIik7XG4gICAgICAgIGFkZEJ1dHRvbnMuZm9yRWFjaChidXR0b24gPT4ge1xuICAgICAgICAgICAgYnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoXCJhZGQtdGFzay1idXR0b24taGlkZGVuXCIpO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgLy8gVEFTSyBDQVJEXG5cbiAgICBjb25zdCBfc2V0VGFza0NhcmRMaXN0ZW5lcnMgPSBjYXJkID0+IHtcbiAgICAgICAgX3NldFRhc2tDYXJkQ2hlY2tCdXR0b24oY2FyZCk7XG4gICAgICAgIF9zZXRUYXNrQ2FyZERlbGV0ZUJ1dHRvbihjYXJkKTtcbiAgICAgICAgX3NldFRhc2tDYXJkQ2xpY2soY2FyZCk7XG4gICAgfTtcblxuICAgIC8vIERldGVjdCB3aGVuIHVzZXIgY2xpY2tzIHRoZSB0YXNrIGNhcmRcbiAgICBjb25zdCBfc2V0VGFza0NhcmRDbGljayA9IGNhcmQgPT4ge1xuICAgICAgICBjYXJkLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgICAgICBfb3BlbkVkaXRUYXNrRGlhbG9nKGNhcmQuZGF0YVRhc2spO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgY29uc3QgX3NldFRhc2tDYXJkQ2hlY2tCdXR0b24gPSBjYXJkID0+IHtcbiAgICAgICAgY29uc3QgY2hlY2tCdXR0b24gPSBjYXJkLnF1ZXJ5U2VsZWN0b3IoXCIuY2hlY2stYnV0dG9uXCIpO1xuICAgICAgICBjaGVja0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZXZlbnQgPT4ge1xuICAgICAgICAgICAgZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICBkYXRhYmFzZUNvbnRyb2xsZXIuZGVsZXRlVGFzayhjYXJkLmRhdGFUYXNrLmlkKTtcbiAgICAgICAgICAgIF9sb2FkSW5ib3hQYWdlKCk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBjb25zdCBfc2V0VGFza0NhcmREZWxldGVCdXR0b24gPSBjYXJkID0+IHtcbiAgICAgICAgY29uc3QgZGVsZXRlQnV0dG9uID0gY2FyZC5xdWVyeVNlbGVjdG9yKFwiLmRlbGV0ZS1idXR0b25cIik7XG4gICAgICAgIGRlbGV0ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZXZlbnQgPT4ge1xuICAgICAgICAgICAgZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICBjb25zdCB0YXNrID0gY2FyZC5kYXRhVGFzaztcbiAgICAgICAgICAgIF9vcGVuRGVsZXRlVGFza0RpYWxvZyh0YXNrKTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIC8vIEVESVQgVEFTSyBESUFMT0dcbiAgICBjb25zdCBfb3BlbkVkaXRUYXNrRGlhbG9nID0gdGFzayA9PiB7XG4gICAgICAgIGNvbnN0IGRpYWxvZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWRpdC10YXNrLWRpYWxvZ1wiKTtcbiAgICAgICAgZGlhbG9nLnNob3dNb2RhbCgpO1xuICAgICAgICAvLyBQcmV2ZW50IHNjcm9sbGluZ1xuICAgICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93ID0gXCJoaWRkZW5cIjtcblxuICAgICAgICAvLyBQb3B1bGF0ZSB0YXNrJ3MgbmFtZVxuICAgICAgICBjb25zdCBuYW1lRmllbGQgPSBkaWFsb2cucXVlcnlTZWxlY3RvcihcInNwYW46Zmlyc3QtY2hpbGRcIik7XG4gICAgICAgIG5hbWVGaWVsZC50ZXh0Q29udGVudCA9IHRhc2submFtZTtcblxuICAgICAgICAvLyBQb3B1bGF0ZSB0YXNrJ3MgZGVzY3JpcHRpb25cbiAgICAgICAgY29uc3QgZGVzY3JpcHRpb25GaWVsZCA9IGRpYWxvZy5xdWVyeVNlbGVjdG9yKFwic3BhbjpudGgtY2hpbGQoMilcIik7XG4gICAgICAgIGRlc2NyaXB0aW9uRmllbGQudGV4dENvbnRlbnQgPSB0YXNrLmRlc2NyaXB0aW9uO1xuXG4gICAgICAgIC8vIFBvcHVsYXRlIHRhc2sncyBkdWUgZGF0ZVxuICAgICAgICBjb25zdCBkdWVEYXRlUGlja2VyID0gZGlhbG9nLnF1ZXJ5U2VsZWN0b3IoXCIubWlkZGxlLXJvdyBpbnB1dFwiKTtcbiAgICAgICAgZHVlRGF0ZVBpY2tlci52YWx1ZSA9IFwiXCI7XG4gICAgICAgIGlmICh0YXNrLmR1ZURhdGUgIT09IFwiXCIpIHtcbiAgICAgICAgICAgIGNvbnN0IGR1ZURhdGUgPSBuZXcgRGF0ZShwYXJzZUludCh0YXNrLmR1ZURhdGUpKTtcbiAgICAgICAgICAgIGR1ZURhdGVQaWNrZXIudmFsdWUgPSBgJHtkdWVEYXRlLmdldEZ1bGxZZWFyKCl9LSR7KGR1ZURhdGUuZ2V0TW9udGgoKSArIDEpLnRvTG9jYWxlU3RyaW5nKCdlbi1VUycsIHttaW5pbXVtSW50ZWdlckRpZ2l0czogMiwgdXNlR3JvdXBpbmc6ZmFsc2V9KX0tJHtkdWVEYXRlLmdldERhdGUoKS50b0xvY2FsZVN0cmluZygnZW4tVVMnLCB7bWluaW11bUludGVnZXJEaWdpdHM6IDIsIHVzZUdyb3VwaW5nOmZhbHNlfSl9YDtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFBvcHVsYXRlIHByaW9yaXR5XG4gICAgICAgIGNvbnN0IHByaW9yaXR5RHJvcGRvd24gPSBkaWFsb2cucXVlcnlTZWxlY3RvcihcIi5taWRkbGUtcm93IHNlbGVjdFwiKTtcbiAgICAgICAgcHJpb3JpdHlEcm9wZG93bi5jaGlsZHJlbi5pdGVtKHRhc2sucHJpb3JpdHkgLSAxKS5zZWxlY3RlZCA9IHRydWU7XG5cbiAgICAgICAgLy8gUG9wdWxhdGUgcHJvamVjdFxuICAgICAgICBjb25zdCBwcm9qZWN0RHJvcGRvd24gPSBkaWFsb2cucXVlcnlTZWxlY3RvcihcIi5ib3R0b20tcm93IHNlbGVjdFwiKTtcbiAgICAgICAgY29uc3QgcHJvamVjdE5hbWUgPSBkYXRhYmFzZUNvbnRyb2xsZXIuZ2V0UHJvamVjdEJ5SWQodGFzay5wcm9qZWN0SWQpLm5hbWU7XG4gICAgICAgIGNvbnN0IG9wdGlvbiA9IHByb2plY3REcm9wZG93bi5xdWVyeVNlbGVjdG9yKGBvcHRpb25bdmFsdWUgPSBcIiR7cHJvamVjdE5hbWV9XCJdYCk7XG4gICAgICAgIG9wdGlvbi5zZWxlY3RlZCA9IHRydWU7XG4gICAgfTtcblxuICAgIC8vIERldGVjdCB3aGVuIHRoZSBlZGl0LXRhc2sgZGlhbG9nIGNsb3Nlc1xuICAgIGNvbnN0IF9zZXRFZGl0VGFza0RpYWxvZ0Nsb3NlID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBkaWFsb2cgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmVkaXQtdGFzay1kaWFsb2dcIik7XG4gICAgICAgIGRpYWxvZy5hZGRFdmVudExpc3RlbmVyKFwiY2xvc2VcIiwgKCkgPT4ge1xuICAgICAgICAgICAgLy8gRW5hYmxlIHNjcm9sbGluZyBhZ2FpblxuICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdyA9IFwiYXV0b1wiO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgLy8gRGV0ZWN0IHdoZW4gdXNlciBjbGlja3MgY2FuY2VsIGJ1dHRvbiBvbiBlZGl0LXRhc2sgZGlhbG9nXG4gICAgY29uc3QgX3NldEVkaXRUYXNrRGlhbG9nQ2FuY2VsQnV0dG9uID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBidXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmVkaXQtdGFzay1kaWFsb2cgLmNhbmNlbC1idXR0b25cIik7XG4gICAgICAgIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZXZlbnQgPT4ge1xuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIF9jbG9zZUVkaXRUYXNrRGlhbG9nKCk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBjb25zdCBfY2xvc2VFZGl0VGFza0RpYWxvZyA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgZGlhbG9nID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5lZGl0LXRhc2stZGlhbG9nXCIpO1xuICAgICAgICBkaWFsb2cuY2xvc2UoKTtcbiAgICB9O1xuXG4gICAgLy8gRGlzYWJsZSB0aGUgc2F2ZSBidXR0b24gd2hlbiBuYW1lIGZpZWxkIGlzIGVtcHR5XG4gICAgY29uc3QgX3NldEVkaXRUYXNrRGlhbG9nTmFtZUlucHV0ID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBpbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWRpdC10YXNrLWRpYWxvZyBzcGFuOmZpcnN0LWNoaWxkXCIpO1xuICAgICAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3Qgc2F2ZUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWRpdC10YXNrLWRpYWxvZyAuc2F2ZS1idXR0b25cIik7XG4gICAgICAgICAgICBpZiAoaW5wdXQudGV4dENvbnRlbnQgPT09IFwiXCIpIHtcbiAgICAgICAgICAgICAgICBzYXZlQnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgc2F2ZUJ1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgLy8gREVMRVRFIFRBU0sgRElBTE9HXG5cbiAgICBjb25zdCBfb3BlbkRlbGV0ZVRhc2tEaWFsb2cgPSB0YXNrID0+IHtcbiAgICAgICAgY29uc3QgZGlhbG9nID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5kZWxldGUtdGFzay1kaWFsb2dcIik7XG4gICAgICAgIGRpYWxvZy5kYXRhVGFzayA9IHRhc2s7XG4gICAgICAgIGRpYWxvZy5zaG93TW9kYWwoKTtcbiAgICAgICAgLy8gUHJldmVudCBzY3JvbGxpbmdcbiAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdyA9IFwiaGlkZGVuXCI7XG4gICAgICAgIC8vIFBvcHVsYXRlIHRhc2sgbmFtZSB0byBtZXNzYWdlXG4gICAgICAgIGNvbnN0IG5hbWVTcGFuID0gZGlhbG9nLnF1ZXJ5U2VsZWN0b3IoXCIubWVzc2FnZSBzcGFuOmZpcnN0LUNoaWxkXCIpO1xuICAgICAgICBuYW1lU3Bhbi50ZXh0Q29udGVudCA9IHRhc2submFtZTtcbiAgICB9O1xuXG4gICAgLy8gRGV0ZWN0IHdoZW4gdGhlIGRlbGV0ZS10YXNrIGRpYWxvZyBjbG9zZXNcbiAgICBjb25zdCBfc2V0RGVsZXRlVGFza0RpYWxvZ0Nsb3NlID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBkaWFsb2cgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmRlbGV0ZS10YXNrLWRpYWxvZ1wiKTtcbiAgICAgICAgZGlhbG9nLmFkZEV2ZW50TGlzdGVuZXIoXCJjbG9zZVwiLCAoKSA9PiB7XG4gICAgICAgICAgICAvLyBFbmFibGUgc2Nyb2xsaW5nIGFnYWluXG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93ID0gXCJhdXRvXCI7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBjb25zdCBfc2V0RGVsZXRlVGFza0RpYWxvZ0NhbmNlbEJ1dHRvbiA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgYnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5kZWxldGUtdGFzay1kaWFsb2cgLmNhbmNlbC1idXR0b25cIik7XG4gICAgICAgIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZXZlbnQgPT4ge1xuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIF9jbG9zZURlbGV0ZVRhc2tEaWFsb2coKTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIGNvbnN0IF9jbG9zZURlbGV0ZVRhc2tEaWFsb2cgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGRpYWxvZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZGVsZXRlLXRhc2stZGlhbG9nXCIpO1xuICAgICAgICBkaWFsb2cuY2xvc2UoKTtcbiAgICB9O1xuXG4gICAgLy8gRGVsZXRlIHRhc2sgd2hlbiB1c2VyIGNsaWNrcyBkZWxldGUgYnV0dG9uXG4gICAgY29uc3QgX3NldERlbGV0ZVRhc2tEaWFsb2dEZWxldGVCdXR0b24gPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGRlbGV0ZUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZGVsZXRlLXRhc2stZGlhbG9nIC5kZWxldGUtYnV0dG9uXCIpO1xuICAgICAgICBkZWxldGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGV2ZW50ID0+IHtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBjb25zdCB0YXNrID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5kZWxldGUtdGFzay1kaWFsb2dcIikuZGF0YVRhc2s7XG4gICAgICAgICAgICBkYXRhYmFzZUNvbnRyb2xsZXIuZGVsZXRlVGFzayh0YXNrLmlkKTtcbiAgICAgICAgICAgIF9jbG9zZURlbGV0ZVRhc2tEaWFsb2coKTtcbiAgICAgICAgICAgIF9sb2FkSW5ib3hQYWdlKCk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICAvLyBEZWxldGUgdGFzayB3aGVuIHVzZXIgcHJlc3NlcyBlbnRlclxuICAgIGNvbnN0IF9zZXREZWxldGVUYXNrRGlhbG9nUHJlc3NFbnRlciA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgZGlhbG9nID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5kZWxldGUtdGFzay1kaWFsb2dcIik7XG4gICAgICAgIGRpYWxvZy5hZGRFdmVudExpc3RlbmVyKFwia2V5cHJlc3NcIiwgZXZlbnQgPT4ge1xuICAgICAgICAgICAgaWYgKGV2ZW50LmtleUNvZGUgPT09IDEzKSB7XG4gICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICBjb25zdCB0YXNrID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5kZWxldGUtdGFzay1kaWFsb2dcIikuZGF0YVRhc2s7XG4gICAgICAgICAgICAgICAgZGF0YWJhc2VDb250cm9sbGVyLmRlbGV0ZVRhc2sodGFzay5pZCk7XG4gICAgICAgICAgICAgICAgX2Nsb3NlRGVsZXRlVGFza0RpYWxvZygpO1xuICAgICAgICAgICAgICAgIF9sb2FkSW5ib3hQYWdlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICByZXR1cm4ge1xuICAgICAgICBpbml0LFxuICAgIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBTY3JlZW5Db250cm9sbGVyOyIsImltcG9ydCBcIi4vdGFza0NhcmQuY3NzXCI7XG5pbXBvcnQgQ2FsZW5kYXJJY29uUGF0aCBmcm9tIFwiLi4vLi4vLi4vYXNzZXRzL2NhbGVuZGFyLnN2Z1wiO1xuaW1wb3J0IERlbGV0ZUljb25QYXRoIGZyb20gXCIuLi8uLi8uLi9hc3NldHMvZGVsZXRlLnN2Z1wiO1xuXG5jb25zdCBjcmVhdGVUYXNrQ2FyZCA9IHRhc2sgPT4ge1xuICAgIGNvbnN0IGNhcmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGNhcmQuY2xhc3NOYW1lID0gXCJ0YXNrLWNhcmRcIjtcbiAgICBjYXJkLmRhdGFUYXNrID0gdGFzaztcblxuICAgIGNvbnN0IGxlZnRDb2x1bW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuXG4gICAgLy8gQ3JlYXRlIGNoZWNrIGJ1dHRvbiBvbiB0aGUgbGVmdFxuICAgIGNvbnN0IGNoZWNrQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICBjaGVja0J1dHRvbi5jbGFzc05hbWUgPSBcImNoZWNrLWJ1dHRvblwiO1xuICAgIGxlZnRDb2x1bW4uYXBwZW5kQ2hpbGQoY2hlY2tCdXR0b24pO1xuXG4gICAgY2FyZC5hcHBlbmRDaGlsZChsZWZ0Q29sdW1uKTtcblxuICAgIGNvbnN0IG1pZGRsZUNvbHVtbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgbWlkZGxlQ29sdW1uLmNsYXNzTmFtZSA9IFwibWlkZGxlLWNvbHVtblwiO1xuXG4gICAgLy8gQWRkIHRhc2sgbmFtZVxuICAgIGNvbnN0IG5hbWVEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIG5hbWVEaXYudGV4dENvbnRlbnQgPSB0YXNrLm5hbWU7XG4gICAgbWlkZGxlQ29sdW1uLmFwcGVuZENoaWxkKG5hbWVEaXYpO1xuXG4gICAgLy8gQWRkIHRhc2sgZGVzY3JpcHRpb25cbiAgICBjb25zdCBkZXNjcmlwdGlvbkRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgZGVzY3JpcHRpb25EaXYudGV4dENvbnRlbnQgPSB0YXNrLmRlc2NyaXB0aW9uO1xuICAgIG1pZGRsZUNvbHVtbi5hcHBlbmRDaGlsZChkZXNjcmlwdGlvbkRpdik7XG5cbiAgICAvLyBBZGQgZHVlIGRhdGVcbiAgICBjb25zdCBkdWVEYXRlRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBkdWVEYXRlRGl2LmNsYXNzTmFtZSA9IFwiZHVlLWRhdGVcIjtcbiAgICBjb25zdCBpY29uID0gbmV3IEltYWdlKCk7XG4gICAgaWNvbi5zcmMgPSBDYWxlbmRhckljb25QYXRoO1xuICAgIGR1ZURhdGVEaXYuYXBwZW5kQ2hpbGQoaWNvbik7XG4gICAgY29uc3QgdGV4dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgbGV0IGRhdGVTdHJpbmc7XG4gICAgaWYgKHRhc2suZHVlRGF0ZSA9PT0gXCJcIikge1xuICAgICAgICBkYXRlU3RyaW5nID0gXCJObyBkdWUgZGF0ZVwiO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGxldCBkdWVEYXRlID0gbmV3IERhdGUocGFyc2VJbnQodGFzay5kdWVEYXRlKSk7XG4gICAgICAgIGRhdGVTdHJpbmcgPSBgJHtkdWVEYXRlLmdldEZ1bGxZZWFyKCl9LSR7KGR1ZURhdGUuZ2V0TW9udGgoKSArIDEpLnRvTG9jYWxlU3RyaW5nKCdlbi1VUycsIHttaW5pbXVtSW50ZWdlckRpZ2l0czogMiwgdXNlR3JvdXBpbmc6ZmFsc2V9KX0tJHtkdWVEYXRlLmdldERhdGUoKS50b0xvY2FsZVN0cmluZygnZW4tVVMnLCB7bWluaW11bUludGVnZXJEaWdpdHM6IDIsIHVzZUdyb3VwaW5nOmZhbHNlfSl9YDtcbiAgICB9XG4gICAgdGV4dC50ZXh0Q29udGVudCA9IGRhdGVTdHJpbmc7XG4gICAgZHVlRGF0ZURpdi5hcHBlbmRDaGlsZCh0ZXh0KTtcbiAgICBtaWRkbGVDb2x1bW4uYXBwZW5kQ2hpbGQoZHVlRGF0ZURpdilcblxuICAgIGNhcmQuYXBwZW5kQ2hpbGQobWlkZGxlQ29sdW1uKVxuXG4gICAgY29uc3QgcmlnaHRDb2x1bW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuXG4gICAgLy8gQWRkIGRlbGV0ZSBidXR0b25cbiAgICBjb25zdCBkZWxldGVCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgIGRlbGV0ZUJ1dHRvbi5jbGFzc05hbWUgPSBcImRlbGV0ZS1idXR0b25cIjtcbiAgICBjb25zdCBkZWxldGVJY29uID0gbmV3IEltYWdlKCk7XG4gICAgZGVsZXRlSWNvbi5zcmMgPSBEZWxldGVJY29uUGF0aDtcbiAgICBkZWxldGVCdXR0b24uYXBwZW5kQ2hpbGQoZGVsZXRlSWNvbik7XG4gICAgcmlnaHRDb2x1bW4uYXBwZW5kQ2hpbGQoZGVsZXRlQnV0dG9uKTtcblxuICAgIGNhcmQuYXBwZW5kQ2hpbGQocmlnaHRDb2x1bW4pO1xuXG4gICAgcmV0dXJuIGNhcmQ7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVUYXNrQ2FyZDsiLCJpbXBvcnQgXCIuL3RvZGF5UGFnZS5jc3NcIjtcblxuY29uc3QgY3JlYXRlVG9kYXlQYWdlID0gKCkgPT4ge1xuICAgIGNvbnN0IHRvZGF5UGFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgdG9kYXlQYWdlLmNsYXNzTmFtZSA9IFwidG9kYXktcGFnZVwiO1xuICAgIHRvZGF5UGFnZS50ZXh0Q29udGVudCA9IFwidG9kYXkgcGFnZVwiO1xuXG4gICAgcmV0dXJuIHRvZGF5UGFnZTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZVRvZGF5UGFnZTsiLCJpbXBvcnQgXCIuL3VwY29taW5nUGFnZS5jc3NcIjtcblxuY29uc3QgY3JlYXRlVXBjb21pbmdQYWdlID0gKCkgPT4ge1xuICAgIGNvbnN0IHVwY29taW5nUGFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgdXBjb21pbmdQYWdlLmNsYXNzTmFtZSA9IFwidXBjb21pbmctcGFnZVwiO1xuICAgIHVwY29taW5nUGFnZS50ZXh0Q29udGVudCA9IFwidXBjb21pbmcgcGFnZVwiO1xuXG4gICAgcmV0dXJuIHVwY29taW5nUGFnZTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZVVwY29taW5nUGFnZTsiLCJpbXBvcnQgXCIuL3Byb2plY3RQYWdlLmNzc1wiO1xuXG5jb25zdCBjcmVhdGVQcm9qZWN0UGFnZSA9IHByb2plY3RJZCA9PiB7XG4gICAgY29uc3QgcGFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgcGFnZS50ZXh0Q29udGVudCA9IGBQcm9qZWN0IHBhZ2U6ICR7cHJvamVjdElkfWA7XG5cbiAgICByZXR1cm4gcGFnZTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZVByb2plY3RQYWdlOyIsImltcG9ydCBcIi4vbmF2QmFyLmNzc1wiO1xuaW1wb3J0IExvZ29MaW5rIGZyb20gXCIuLi8uLi8uLi9hc3NldHMvbG9nby5zdmdcIjtcblxuY29uc3QgY3JlYXRlTG9nbyA9ICgpID0+IHtcbiAgICAvLyBDcmVhdGUgdGhlIGxvZ28gd3JhcHBlciBvdXRzaWRlXG4gICAgY29uc3QgbG9nbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgbG9nby5jbGFzc05hbWUgPSBcImxvZ29cIjtcblxuICAgIC8vIENyZWF0ZSB0aGUgaWNvblxuICAgIGNvbnN0IGltYWdlID0gbmV3IEltYWdlKCk7XG4gICAgaW1hZ2Uuc3JjID0gTG9nb0xpbms7XG4gICAgbG9nby5hcHBlbmRDaGlsZChpbWFnZSk7XG5cbiAgICAvLyBDcmVhdGUgdGhlIHRleHRcbiAgICBjb25zdCB0ZXh0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICB0ZXh0LnRleHRDb250ZW50ID0gXCJUb2RvIExpc3RcIjtcbiAgICBsb2dvLmFwcGVuZENoaWxkKHRleHQpO1xuXG4gICAgcmV0dXJuIGxvZ29cbn07XG5cbmNvbnN0IGNyZWF0ZU5hdkJhciA9ICgpID0+IHtcbiAgICBjb25zdCBuYXZCYXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIG5hdkJhci5jbGFzc05hbWUgPSBcIm5hdi1iYXJcIjtcblxuICAgIGNvbnN0IGxvZ28gPSBjcmVhdGVMb2dvKCk7XG4gICAgbmF2QmFyLmFwcGVuZENoaWxkKGxvZ28pO1xuXG4gICAgcmV0dXJuIG5hdkJhcjtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZU5hdkJhcjsiLCJpbXBvcnQgXCIuL2FkZFByb2plY3REaWFsb2cuY3NzXCI7XG5cbmNvbnN0IGNyZWF0ZUFkZFByb2plY3REaWFsb2cgPSAoKSA9PiB7XG4gICAgLy8gQWRkIHRoZSBkaWFsb2dcbiAgICBjb25zdCBkaWFsb2cgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGlhbG9nXCIpO1xuICAgIGRpYWxvZy5jbGFzc05hbWUgPSBcImFkZC1wcm9qZWN0LWRpYWxvZ1wiO1xuXG4gICAgLy8gQWRkIHRoZSBmb3JtXG4gICAgY29uc3QgZm9ybSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJmb3JtXCIpO1xuICAgIGZvcm0uYWN0aW9uID0gXCIjXCI7XG4gICAgZm9ybS5tZXRob2QgPSBcInBvc3RcIjtcbiAgICBmb3JtLm5vVmFsaWRhdGUgPSB0cnVlO1xuICAgIGZvcm0uY2xhc3NOYW1lID0gXCJmb3JtXCI7XG4gICAgXG4gICAgLy8gQWRkIHRoZSBoZWFkZXJcbiAgICBjb25zdCBoZWFkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGhlYWRlci5jbGFzc05hbWUgPSBcImhlYWRlclwiO1xuICAgIGhlYWRlci50ZXh0Q29udGVudCA9IFwiQWRkIHByb2plY3RcIjtcbiAgICBmb3JtLmFwcGVuZENoaWxkKGhlYWRlcik7IFxuXG4gICAgLy8gQWRkIGxhYmVsIGFuZCBpbnB1dFxuICAgIGNvbnN0IGZvcm1GaWVsZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJmb3JtLWZpZWxkXCIpO1xuICAgIGNvbnN0IGxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xuICAgIGxhYmVsLmZvciA9IFwicHJvamVjdC1uYW1lXCI7XG4gICAgbGFiZWwudGV4dENvbnRlbnQgPSBcIk5hbWVcIjtcbiAgICBmb3JtRmllbGQuYXBwZW5kQ2hpbGQobGFiZWwpO1xuICAgIGNvbnN0IGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xuICAgIGlucHV0LnR5cGUgPSBcInRleHRcIjtcbiAgICBpbnB1dC5pZCA9IFwicHJvamVjdC1uYW1lXCI7XG4gICAgZm9ybUZpZWxkLmFwcGVuZENoaWxkKGlucHV0KTtcbiAgICBjb25zdCBlcnJvck1lc3NhZ2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcbiAgICBlcnJvck1lc3NhZ2UuY2xhc3NOYW1lID0gXCJlcnJvci1tZXNzYWdlXCI7XG4gICAgZXJyb3JNZXNzYWdlLmFyaWFMaXZlID0gXCJwb2xpdGVcIjtcbiAgICBmb3JtRmllbGQuYXBwZW5kQ2hpbGQoZXJyb3JNZXNzYWdlKTtcbiAgICBmb3JtLmFwcGVuZENoaWxkKGZvcm1GaWVsZCk7XG5cbiAgICAvLyBBZGQgdGhlIGJ1dHRvbnNcbiAgICBjb25zdCBidXR0b25zID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBidXR0b25zLmNsYXNzTmFtZSA9IFwiYnV0dG9uc1wiO1xuICAgIGNvbnN0IGNhbmNlbEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgY2FuY2VsQnV0dG9uLmNsYXNzTmFtZSA9IFwiY2FuY2VsLWJ1dHRvblwiO1xuICAgIGNhbmNlbEJ1dHRvbi50ZXh0Q29udGVudCA9IFwiQ2FuY2VsXCI7XG4gICAgYnV0dG9ucy5hcHBlbmRDaGlsZChjYW5jZWxCdXR0b24pO1xuICAgIGZvcm0uYXBwZW5kQ2hpbGQoYnV0dG9ucyk7XG4gICAgY29uc3QgYWRkQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKVxuICAgIGFkZEJ1dHRvbi5jbGFzc05hbWUgPSBcImFkZC1idXR0b25cIjtcbiAgICBhZGRCdXR0b24udGV4dENvbnRlbnQgPSBcIkFkZFwiO1xuICAgIGFkZEJ1dHRvbi5kaXNhYmxlZCA9IHRydWU7XG4gICAgYnV0dG9ucy5hcHBlbmRDaGlsZChhZGRCdXR0b24pO1xuXG4gICAgZGlhbG9nLmFwcGVuZENoaWxkKGZvcm0pO1xuXG4gICAgcmV0dXJuIGRpYWxvZztcbn1cblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlQWRkUHJvamVjdERpYWxvZzsiLCJpbXBvcnQgXCIuL2VkaXRQcm9qZWN0RGlhbG9nLmNzc1wiO1xuXG4vLyBjb25zdCBjcmVhdGVFZGl0UHJvamVjdERpYWxvZyA9ICgpID0+IHtcbi8vICAgICAvLyBBZGQgdGhlIGRpYWxvZ1xuLy8gICAgIGNvbnN0IGRpYWxvZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaWFsb2dcIik7XG4vLyAgICAgZGlhbG9nLmNsYXNzTmFtZSA9IFwiZWRpdC1wcm9qZWN0LWRpYWxvZ1wiO1xuXG4vLyAgICAgLy8gQWRkIHRoZSB3cmFwcGVyIGZvciBjb250ZW50XG4vLyAgICAgY29uc3Qgd3JhcHBlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG5cbi8vICAgICAvLyBBZGQgdGhlIGhlYWRlclxuLy8gICAgIGNvbnN0IGhlYWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4vLyAgICAgaGVhZGVyLmNsYXNzTmFtZSA9IFwiaGVhZGVyXCI7XG4vLyAgICAgaGVhZGVyLnRleHRDb250ZW50ID0gXCJFZGl0IHByb2plY3RcIjtcbi8vICAgICB3cmFwcGVyLmFwcGVuZENoaWxkKGhlYWRlcik7XG5cbi8vICAgICAvLyBBZGQgdGhlIGlucHV0IGZvciBwcm9qZWN0IG5hbWVcbi8vICAgICBjb25zdCBmb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbi8vICAgICBmb3JtLmNsYXNzTmFtZSA9IFwiZm9ybVwiO1xuLy8gICAgIGNvbnN0IGxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xuLy8gICAgIGxhYmVsLnRleHRDb250ZW50ID0gXCJOYW1lXCI7XG4vLyAgICAgZm9ybS5hcHBlbmRDaGlsZChsYWJlbCk7XG4vLyAgICAgY29uc3QgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4vLyAgICAgZm9ybS5hcHBlbmRDaGlsZChpbnB1dCk7XG4vLyAgICAgY29uc3QgZXJyb3JNZXNzYWdlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XG4vLyAgICAgZXJyb3JNZXNzYWdlLmNsYXNzTmFtZSA9IFwiZXJyb3ItbWVzc2FnZVwiO1xuLy8gICAgIGVycm9yTWVzc2FnZS5hcmlhTGl2ZSA9IFwicG9saXRlXCI7XG4vLyAgICAgZm9ybS5hcHBlbmRDaGlsZChlcnJvck1lc3NhZ2UpXG4vLyAgICAgd3JhcHBlci5hcHBlbmRDaGlsZChmb3JtKTtcblxuLy8gICAgIC8vIEFkZCB0aGUgYnV0dG9uc1xuLy8gICAgIGNvbnN0IGJvdHRvbVJvdyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4vLyAgICAgYm90dG9tUm93LmNsYXNzTmFtZSA9IFwiYm90dG9tLXJvd1wiO1xuLy8gICAgIGNvbnN0IGNhbmNlbEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4vLyAgICAgY2FuY2VsQnV0dG9uLmNsYXNzTmFtZSA9IFwiY2FuY2VsLWJ1dHRvblwiO1xuLy8gICAgIGNhbmNlbEJ1dHRvbi50ZXh0Q29udGVudCA9IFwiQ2FuY2VsXCI7XG4vLyAgICAgYm90dG9tUm93LmFwcGVuZENoaWxkKGNhbmNlbEJ1dHRvbik7XG4vLyAgICAgY29uc3QgYWRkQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKVxuLy8gICAgIGFkZEJ1dHRvbi5jbGFzc05hbWUgPSBcInNhdmUtYnV0dG9uXCI7XG4vLyAgICAgYWRkQnV0dG9uLnRleHRDb250ZW50ID0gXCJTYXZlXCI7XG4vLyAgICAgYWRkQnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcbi8vICAgICBib3R0b21Sb3cuYXBwZW5kQ2hpbGQoYWRkQnV0dG9uKTtcbi8vICAgICB3cmFwcGVyLmFwcGVuZENoaWxkKGJvdHRvbVJvdyk7XG5cbi8vICAgICBkaWFsb2cuYXBwZW5kQ2hpbGQod3JhcHBlcik7XG5cbi8vICAgICByZXR1cm4gZGlhbG9nO1xuLy8gfTtcblxuY29uc3QgY3JlYXRlRWRpdFByb2plY3REaWFsb2cgPSAoKSA9PiB7XG4gICAgLy8gQWRkIHRoZSBkaWFsb2dcbiAgICBjb25zdCBkaWFsb2cgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGlhbG9nXCIpO1xuICAgIGRpYWxvZy5jbGFzc05hbWUgPSBcImVkaXQtcHJvamVjdC1kaWFsb2dcIjtcblxuICAgIC8vIEFkZCB0aGUgZm9ybVxuICAgIGNvbnN0IGZvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZm9ybVwiKTtcbiAgICBmb3JtLmFjdGlvbiA9IFwiI1wiO1xuICAgIGZvcm0ubWV0aG9kID0gXCJwb3N0XCI7XG4gICAgZm9ybS5ub1ZhbGlkYXRlID0gdHJ1ZTtcbiAgICBmb3JtLmNsYXNzTmFtZSA9IFwiZm9ybVwiO1xuICAgIFxuICAgIC8vIEFkZCB0aGUgaGVhZGVyXG4gICAgY29uc3QgaGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBoZWFkZXIuY2xhc3NOYW1lID0gXCJoZWFkZXJcIjtcbiAgICBoZWFkZXIudGV4dENvbnRlbnQgPSBcIkVkaXQgcHJvamVjdFwiO1xuICAgIGZvcm0uYXBwZW5kQ2hpbGQoaGVhZGVyKTsgXG5cbiAgICAvLyBBZGQgbGFiZWwgYW5kIGlucHV0XG4gICAgY29uc3QgZm9ybUZpZWxkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZvcm0tZmllbGRcIik7XG4gICAgY29uc3QgbGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XG4gICAgbGFiZWwuZm9yID0gXCJwcm9qZWN0LW5hbWVcIjtcbiAgICBsYWJlbC50ZXh0Q29udGVudCA9IFwiTmFtZVwiO1xuICAgIGZvcm1GaWVsZC5hcHBlbmRDaGlsZChsYWJlbCk7XG4gICAgY29uc3QgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgaW5wdXQudHlwZSA9IFwidGV4dFwiO1xuICAgIGlucHV0LmlkID0gXCJwcm9qZWN0LW5hbWVcIjtcbiAgICBmb3JtRmllbGQuYXBwZW5kQ2hpbGQoaW5wdXQpO1xuICAgIGNvbnN0IGVycm9yTWVzc2FnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xuICAgIGVycm9yTWVzc2FnZS5jbGFzc05hbWUgPSBcImVycm9yLW1lc3NhZ2VcIjtcbiAgICBlcnJvck1lc3NhZ2UuYXJpYUxpdmUgPSBcInBvbGl0ZVwiO1xuICAgIGZvcm1GaWVsZC5hcHBlbmRDaGlsZChlcnJvck1lc3NhZ2UpO1xuICAgIGZvcm0uYXBwZW5kQ2hpbGQoZm9ybUZpZWxkKTtcblxuICAgIC8vIEFkZCB0aGUgYnV0dG9uc1xuICAgIGNvbnN0IGJ1dHRvbnMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGJ1dHRvbnMuY2xhc3NOYW1lID0gXCJidXR0b25zXCI7XG4gICAgY29uc3QgY2FuY2VsQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICBjYW5jZWxCdXR0b24uY2xhc3NOYW1lID0gXCJjYW5jZWwtYnV0dG9uXCI7XG4gICAgY2FuY2VsQnV0dG9uLnRleHRDb250ZW50ID0gXCJDYW5jZWxcIjtcbiAgICBidXR0b25zLmFwcGVuZENoaWxkKGNhbmNlbEJ1dHRvbik7XG4gICAgZm9ybS5hcHBlbmRDaGlsZChidXR0b25zKTtcbiAgICBjb25zdCBzYXZlQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKVxuICAgIHNhdmVCdXR0b24uY2xhc3NOYW1lID0gXCJzYXZlLWJ1dHRvblwiO1xuICAgIHNhdmVCdXR0b24udGV4dENvbnRlbnQgPSBcIlNhdmVcIjtcbiAgICBzYXZlQnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcbiAgICBidXR0b25zLmFwcGVuZENoaWxkKHNhdmVCdXR0b24pO1xuXG4gICAgZGlhbG9nLmFwcGVuZENoaWxkKGZvcm0pO1xuXG4gICAgcmV0dXJuIGRpYWxvZztcbn1cblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlRWRpdFByb2plY3REaWFsb2c7IiwiaW1wb3J0IFwiLi9kZWxldGVQcm9qZWN0RGlhbG9nLmNzc1wiO1xuXG5jb25zdCBjcmVhdGVEZWxldGVQcm9qZWN0RGlhbG9nID0gKCkgPT4ge1xuICAgIC8vIEFkZCB0aGUgZGlhbG9nXG4gICAgY29uc3QgZGlhbG9nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpYWxvZ1wiKTtcbiAgICBkaWFsb2cuY2xhc3NOYW1lID0gXCJkZWxldGUtcHJvamVjdC1kaWFsb2dcIjtcblxuICAgIC8vIEFkZCB0aGUgd3JhcHBlciBmb3IgY29udGVudFxuICAgIGNvbnN0IHdyYXBwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuXG4gICAgLy8gQWRkIHRoZSBoZWFkZXJcbiAgICBjb25zdCBoZWFkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGhlYWRlci5jbGFzc05hbWUgPSBcImhlYWRlclwiO1xuICAgIGhlYWRlci50ZXh0Q29udGVudCA9IFwiRGVsZXRlIHByb2plY3Q/XCI7XG4gICAgd3JhcHBlci5hcHBlbmRDaGlsZChoZWFkZXIpO1xuXG4gICAgLy8gQWRkIHRoZSBtZXNzYWdlXG4gICAgY29uc3QgbWVzc2FnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgbWVzc2FnZS5jbGFzc05hbWUgPSBcIm1lc3NhZ2VcIjtcbiAgICBtZXNzYWdlLnRleHRDb250ZW50ID0gXCJBcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gZGVsZXRlIFwiO1xuICAgIGNvbnN0IHNwYW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcbiAgICBtZXNzYWdlLmFwcGVuZENoaWxkKHNwYW4pO1xuICAgIGNvbnN0IHNwYW4yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XG4gICAgc3BhbjIudGV4dENvbnRlbnQgPSBcIj9cIjtcbiAgICBtZXNzYWdlLmFwcGVuZENoaWxkKHNwYW4yKTtcbiAgICB3cmFwcGVyLmFwcGVuZENoaWxkKG1lc3NhZ2UpO1xuXG4gICAgLy8gQWRkIHRoZSBidXR0b25zXG4gICAgY29uc3QgYm90dG9tUm93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBib3R0b21Sb3cuY2xhc3NOYW1lID0gXCJib3R0b20tcm93XCI7XG4gICAgY29uc3QgY2FuY2VsQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICBjYW5jZWxCdXR0b24uY2xhc3NOYW1lID0gXCJjYW5jZWwtYnV0dG9uXCI7XG4gICAgY2FuY2VsQnV0dG9uLnRleHRDb250ZW50ID0gXCJDYW5jZWxcIjtcbiAgICBib3R0b21Sb3cuYXBwZW5kQ2hpbGQoY2FuY2VsQnV0dG9uKTtcbiAgICBjb25zdCBkZWxldGVCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpXG4gICAgZGVsZXRlQnV0dG9uLmNsYXNzTmFtZSA9IFwiZGVsZXRlLWJ1dHRvblwiO1xuICAgIGRlbGV0ZUJ1dHRvbi50ZXh0Q29udGVudCA9IFwiRGVsZXRlXCI7XG4gICAgYm90dG9tUm93LmFwcGVuZENoaWxkKGRlbGV0ZUJ1dHRvbik7XG4gICAgd3JhcHBlci5hcHBlbmRDaGlsZChib3R0b21Sb3cpO1xuXG4gICAgZGlhbG9nLmFwcGVuZENoaWxkKHdyYXBwZXIpO1xuXG4gICAgcmV0dXJuIGRpYWxvZztcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZURlbGV0ZVByb2plY3REaWFsb2c7IiwiaW1wb3J0IFwiLi9kZWxldGVUYXNrRGlhbG9nLmNzc1wiO1xuXG5jb25zdCBjcmVhdGVEZWxldGVUYXNrRGlhbG9nID0gKCkgPT4ge1xuICAgIC8vIEFkZCB0aGUgZGlhbG9nXG4gICAgY29uc3QgZGlhbG9nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpYWxvZ1wiKTtcbiAgICBkaWFsb2cuY2xhc3NOYW1lID0gXCJkZWxldGUtdGFzay1kaWFsb2dcIjtcblxuICAgIC8vIEFkZCB0aGUgd3JhcHBlciBmb3IgY29udGVudFxuICAgIGNvbnN0IHdyYXBwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuXG4gICAgLy8gQWRkIHRoZSBoZWFkZXJcbiAgICBjb25zdCBoZWFkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGhlYWRlci5jbGFzc05hbWUgPSBcImhlYWRlclwiO1xuICAgIGhlYWRlci50ZXh0Q29udGVudCA9IFwiRGVsZXRlIHRhc2s/XCI7XG4gICAgd3JhcHBlci5hcHBlbmRDaGlsZChoZWFkZXIpO1xuXG4gICAgLy8gQWRkIHRoZSBtZXNzYWdlXG4gICAgY29uc3QgbWVzc2FnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgbWVzc2FnZS5jbGFzc05hbWUgPSBcIm1lc3NhZ2VcIjtcbiAgICBtZXNzYWdlLnRleHRDb250ZW50ID0gXCJBcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gZGVsZXRlIFwiO1xuICAgIGNvbnN0IHNwYW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcbiAgICBtZXNzYWdlLmFwcGVuZENoaWxkKHNwYW4pO1xuICAgIGNvbnN0IHNwYW4yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XG4gICAgc3BhbjIudGV4dENvbnRlbnQgPSBcIj9cIjtcbiAgICBtZXNzYWdlLmFwcGVuZENoaWxkKHNwYW4yKTtcbiAgICB3cmFwcGVyLmFwcGVuZENoaWxkKG1lc3NhZ2UpO1xuXG4gICAgLy8gQWRkIHRoZSBidXR0b25zXG4gICAgY29uc3QgYm90dG9tUm93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBib3R0b21Sb3cuY2xhc3NOYW1lID0gXCJib3R0b20tcm93XCI7XG4gICAgY29uc3QgY2FuY2VsQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICBjYW5jZWxCdXR0b24uY2xhc3NOYW1lID0gXCJjYW5jZWwtYnV0dG9uXCI7XG4gICAgY2FuY2VsQnV0dG9uLnRleHRDb250ZW50ID0gXCJDYW5jZWxcIjtcbiAgICBib3R0b21Sb3cuYXBwZW5kQ2hpbGQoY2FuY2VsQnV0dG9uKTtcbiAgICBjb25zdCBkZWxldGVCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpXG4gICAgZGVsZXRlQnV0dG9uLmNsYXNzTmFtZSA9IFwiZGVsZXRlLWJ1dHRvblwiO1xuICAgIGRlbGV0ZUJ1dHRvbi50ZXh0Q29udGVudCA9IFwiRGVsZXRlXCI7XG4gICAgYm90dG9tUm93LmFwcGVuZENoaWxkKGRlbGV0ZUJ1dHRvbik7XG4gICAgd3JhcHBlci5hcHBlbmRDaGlsZChib3R0b21Sb3cpO1xuXG4gICAgZGlhbG9nLmFwcGVuZENoaWxkKHdyYXBwZXIpO1xuXG4gICAgcmV0dXJuIGRpYWxvZztcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZURlbGV0ZVRhc2tEaWFsb2c7IiwiaW1wb3J0IERhdGFiYXNlQ29udHJvbGxlciBmcm9tIFwiLi9EYXRhYmFzZUNvbnRyb2xsZXJcIjtcbmltcG9ydCBTY3JlZW5Db250cm9sbGVyIGZyb20gXCIuL1NjcmVlbkNvbnRyb2xsZXJcIjtcblxuY29uc3QgQXBwQ29udHJvbGxlciA9ICgpID0+IHtcbiAgICBsZXQgc2NyZWVuQ29udHJvbGxlciA9IFNjcmVlbkNvbnRyb2xsZXIoKTtcbiAgICBsZXQgZGF0YWJhc2VDb250cm9sbGVyID0gRGF0YWJhc2VDb250cm9sbGVyKCk7XG4gICAgY29uc3QgaW5pdCA9ICgpID0+IHtcbiAgICAgICAgZGF0YWJhc2VDb250cm9sbGVyLmluaXQoKTtcbiAgICAgICAgc2NyZWVuQ29udHJvbGxlci5pbml0KCk7XG4gICAgfTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIGluaXQsXG4gICAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEFwcENvbnRyb2xsZXI7IiwiaW1wb3J0IFwiLi9zdHlsZS5jc3NcIjtcbmltcG9ydCBBcHBDb250cm9sbGVyIGZyb20gXCIuL21vZHVsZXMvY29udHJvbGxlcnMvQXBwQ29udHJvbGxlclwiO1xuXG5jb25zdCBhcHBDb250cm9sbGVyID0gQXBwQ29udHJvbGxlcigpO1xuYXBwQ29udHJvbGxlci5pbml0KCk7Il0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImciLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInJlcGxhY2UiLCJwIiwibmMiLCJsb2NhbHMiLCJjcmVhdGVQcm9qZWN0IiwicHJvamVjdCIsInByb2plY3RzIiwiZ2V0QWxsUHJvamVjdHMiLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwiZ2V0UHJvamVjdEJ5TmFtZSIsIm5hbWUiLCJwYXJzZSIsImdldEl0ZW0iLCJmaWx0ZXIiLCJnZXRBbGxUYXNrcyIsImluaXQiLCJ0aW1lQ3JlYXRlZCIsIkRhdGUiLCJnZXRUaW1lIiwiZ2V0UHJvamVjdEJ5SWQiLCJ1cGRhdGVQcm9qZWN0Iiwib2xkUHJvamVjdCIsIm5ld1Byb2plY3QiLCJkZWxldGVQcm9qZWN0IiwiY3JlYXRlVGFzayIsInRhc2siLCJ0YXNrcyIsImdldFRhc2tzQnlQcm9qZWN0SWQiLCJwcm9qZWN0SWQiLCJnZXRUYXNrQnlJZCIsImRlbGV0ZVRhc2siLCJpbWFnZUxpbmsiLCJlZGl0YWJsZSIsImNsYXNzTmFtZSIsIml0ZW1Db250ZW50IiwiaW1hZ2UiLCJJbWFnZSIsIml0ZW1OYW1lIiwidGV4dENvbnRlbnQiLCJpdGVtQnV0dG9ucyIsImVkaXRCdXR0b24iLCJlZGl0SWNvbiIsImRlbGV0ZUJ1dHRvbiIsImRlbGV0ZUljb24iLCJzaWRlQmFyIiwiZGVmYXVsdEl0ZW1zIiwiaGVhZGVyIiwiYWRkUHJvamVjdEJ1dHRvbiIsImNyZWF0ZVByb2plY3RzSGVhZGVyIiwicHJvamVjdEl0ZW1zIiwiY3JlYXRlUHJpb3JpdHlTZWN0aW9uIiwicHJpb3JpdHlOdW1iZXIiLCJzZWN0aW9uIiwiYWRkVGFza0J1dHRvbiIsImFkZFN5bWJvbCIsImFkZFRleHQiLCJjcmVhdGVEcm9wZG93biIsImxhYmVsTmFtZSIsIndyYXBwZXIiLCJsYWJlbCIsImRyb3Bkb3duIiwiZm9yRWFjaCIsIm9wdGlvbiIsImNyZWF0ZU9wdGlvbiIsInZhbHVlIiwiY2FyZCIsIm5hbWVUZXh0Qm94Iiwicm9sZSIsImNvbnRlbnRFZGl0YWJsZSIsImRlc2NyaXB0aW9uVGV4dEJveCIsIm1pZGRsZVJvdyIsInBpY2tlciIsInR5cGUiLCJjcmVhdGVEYXRlUGlja2VyIiwiYm90dG9tUm93IiwiZGl2IiwiY2FuY2VsQnV0dG9uIiwiYWRkQnV0dG9uIiwiZGlzYWJsZWQiLCJyYW5kb21VVUlEIiwiY3J5cHRvIiwiYmluZCIsImdldFJhbmRvbVZhbHVlcyIsInJuZHM4IiwiVWludDhBcnJheSIsInJuZyIsImJ5dGVUb0hleCIsInNsaWNlIiwiYnVmIiwib2Zmc2V0Iiwicm5kcyIsInJhbmRvbSIsImFyciIsInVuc2FmZVN0cmluZ2lmeSIsImRpYWxvZyIsInNhdmVCdXR0b24iLCJkYXRhYmFzZUNvbnRyb2xsZXIiLCJfbG9hZFByb2plY3RJdGVtcyIsImxhc3RDaGlsZCIsIl9zZXRJdGVtTGlzdGVuZXIiLCJfc2V0UHJvamVjdEl0ZW1FZGl0QnV0dG9ucyIsIl9zZXRQcm9qZWN0SXRlbURlbGV0ZUJ1dHRvbnMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiYnV0dG9uIiwiYWRkRXZlbnRMaXN0ZW5lciIsInBhcmVudEVsZW1lbnQiLCJfb3BlbkVkaXRQcm9qZWN0RGlhbG9nIiwiX29wZW5EZWxldGVQcm9qZWN0RGlhbG9nIiwiY2xhc3NMaXN0IiwiY29udGFpbnMiLCJfc3dpdGNoUGFnZSIsIml0ZW1JZCIsImdldEVsZW1lbnRCeUlkIiwiYWRkIiwiX3NldEl0ZW1BY3RpdmUiLCJfbG9hZEluYm94UGFnZSIsIl9sb2FkVG9kYXlQYWdlIiwiX2xvYWRVcGNvbWluZ1BhZ2UiLCJfbG9hZFByb2plY3RQYWdlIiwiaW5ib3hQYWdlIiwiaW5ib3hDb250ZW50IiwicHJpb3JpdHlTZWN0aW9ucyIsInByaW9yaXR5IiwicGFyc2VJbnQiLCJjaGlsZHJlbiIsImRhdGFUYXNrIiwibGVmdENvbHVtbiIsImNoZWNrQnV0dG9uIiwibWlkZGxlQ29sdW1uIiwibmFtZURpdiIsImRlc2NyaXB0aW9uRGl2IiwiZGVzY3JpcHRpb24iLCJkdWVEYXRlRGl2IiwiaWNvbiIsInRleHQiLCJkYXRlU3RyaW5nIiwiZHVlRGF0ZSIsImdldEZ1bGxZZWFyIiwiZ2V0TW9udGgiLCJ0b0xvY2FsZVN0cmluZyIsIm1pbmltdW1JbnRlZ2VyRGlnaXRzIiwidXNlR3JvdXBpbmciLCJnZXREYXRlIiwicmlnaHRDb2x1bW4iLCJfc2V0VGFza0NhcmRMaXN0ZW5lcnMiLCJfc2V0SW5ib3hBZGRUYXNrQnV0dG9uTGlzdGVuZXIiLCJ0b2RheVBhZ2UiLCJ1cGNvbWluZ1BhZ2UiLCJwYWdlIiwiX29wZW5BZGRQcm9qZWN0RGlhbG9nIiwic2hvd01vZGFsIiwiYm9keSIsIm92ZXJmbG93IiwiX2Nsb3NlQWRkUHJvamVjdERpYWxvZyIsImNsb3NlIiwiX3ZlcmlmeVByb2plY3ROYW1lIiwiZGF0YVByb2plY3QiLCJfY2xvc2VFZGl0UHJvamVjdERpYWxvZyIsIl9jbG9zZURlbGV0ZVByb2plY3REaWFsb2ciLCJfb3BlbkFkZFRhc2tDYXJkIiwiX3NldEFkZFRhc2tDYXJkRGVmYXVsdFByaW9yaXR5Iiwic3BsaXQiLCJfc2V0QWRkVGFza0NhcmRDYW5jZWxCdXR0b25MaXN0ZW5lciIsIl9zZXRBZGRUYXNrQ2FyZFRhc2tOYW1lSW5wdXQiLCJfc2V0QWRkVGFza0NhcmRBZGRCdXR0b24iLCJzZWxlY3RlZCIsIl9jbG9zZUFkZFRhc2tDYXJkIiwiaW5wdXQiLCJ0cmltIiwiZHVlRGF0ZVN0cmluZyIsInNldFVUQ0Z1bGxZZWFyIiwic2V0TW9udGgiLCJzZXREYXRlIiwic2V0VVRDSG91cnMiLCJzZXRNaW51dGVzIiwic2V0U2Vjb25kcyIsInNldE1pbGxpc2Vjb25kcyIsInByb2plY3ROYW1lIiwicHJpb3JpdHlTZWN0aW9uIiwiX3NldFRhc2tDYXJkQ2hlY2tCdXR0b24iLCJfc2V0VGFza0NhcmREZWxldGVCdXR0b24iLCJfc2V0VGFza0NhcmRDbGljayIsIl9vcGVuRWRpdFRhc2tEaWFsb2ciLCJldmVudCIsInN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbiIsIl9vcGVuRGVsZXRlVGFza0RpYWxvZyIsImR1ZURhdGVQaWNrZXIiLCJwcm9qZWN0RHJvcGRvd24iLCJfY2xvc2VFZGl0VGFza0RpYWxvZyIsIl9jbG9zZURlbGV0ZVRhc2tEaWFsb2ciLCJuYXZCYXIiLCJsb2dvIiwiY3JlYXRlTG9nbyIsImluYm94SXRlbSIsImFkZFByb2plY3REaWFsb2ciLCJmb3JtIiwiYWN0aW9uIiwibWV0aG9kIiwibm9WYWxpZGF0ZSIsImZvcm1GaWVsZCIsImZvciIsImVycm9yTWVzc2FnZSIsImFyaWFMaXZlIiwiYnV0dG9ucyIsIm5hbWVSZXN1bHQiLCJfc2V0QWRkUHJvamVjdERpYWxvZ0lucHV0Iiwia2V5Q29kZSIsInByZXZlbnREZWZhdWx0IiwidGltZVN0YW1wIiwiX3NldEFkZFByb2plY3RQcmVzc0VudGVyIiwiZWRpdFByb2plY3REaWFsb2ciLCJfc2V0RWRpdFByb2plY3REaWFsb2dJbnB1dCIsIl9zZXRFZGl0UHJvamVjdFByZXNzRW50ZXIiLCJkZWxldGVQcm9qZWN0RGlhbG9nIiwibWVzc2FnZSIsInNwYW4iLCJzcGFuMiIsImVkaXRUYXNrRGlhbG9nIiwiX3NldEVkaXRUYXNrRGlhbG9nTmFtZUlucHV0IiwiZGVsZXRlVGFza0RpYWxvZyIsInNjcmVlbkNvbnRyb2xsZXIiXSwic291cmNlUm9vdCI6IiJ9