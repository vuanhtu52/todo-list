(()=>{"use strict";var e={177:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),d=t.n(o),a=t(645),r=t.n(a)()(d());r.push([e.id,".add-project-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 300px;\n    position: relative;\n    top: -30%;\n}\n\n.add-project-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.add-project-dialog > form {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.add-project-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n \n.add-project-dialog form-field {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n\n.add-project-dialog input {\n    height: 30px;\n    width: max(100%, 200px);\n    border-radius: 5px;\n    border: 1px solid #ddd;\n}\n\n.add-project-dialog input:focus {\n    outline: none;\n    border: 1px solid grey;\n}\n\n.add-project-dialog .error-message {\n    font-size: 14px;\n    color: red;\n    height: 14px;\n}\n\n.add-project-dialog .buttons {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.add-project-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.add-project-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.add-project-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.add-project-dialog .add-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.add-project-dialog .add-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.add-project-dialog .add-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.add-project-dialog .add-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n} \n\n\n\n","",{version:3,sources:["webpack://./src/modules/components/addProjectDialog/addProjectDialog.css"],names:[],mappings:"AAAA;IACI,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;IACZ,kBAAkB;IAClB,SAAS;AACb;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;;AAGA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;AACZ;;;AAGA;IACI,YAAY;IACZ,uBAAuB;IACvB,kBAAkB;IAClB,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,eAAe;IACf,UAAU;IACV,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,0CAA0C;IAC1C,eAAe;AACnB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,yBAAyB;IACzB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,uCAAuC;AAC3C",sourcesContent:[".add-project-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 300px;\n    position: relative;\n    top: -30%;\n}\n\n.add-project-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.add-project-dialog > form {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.add-project-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n \n.add-project-dialog form-field {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n\n.add-project-dialog input {\n    height: 30px;\n    width: max(100%, 200px);\n    border-radius: 5px;\n    border: 1px solid #ddd;\n}\n\n.add-project-dialog input:focus {\n    outline: none;\n    border: 1px solid grey;\n}\n\n.add-project-dialog .error-message {\n    font-size: 14px;\n    color: red;\n    height: 14px;\n}\n\n.add-project-dialog .buttons {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.add-project-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.add-project-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.add-project-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.add-project-dialog .add-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.add-project-dialog .add-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.add-project-dialog .add-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.add-project-dialog .add-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n} \n\n\n\n"],sourceRoot:""}]);const i=r},620:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),d=t.n(o),a=t(645),r=t.n(a)()(d());r.push([e.id,'.add-task-card {\n    width: 100%;\n    min-width: 400px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    border: 1px solid #9ca3af;\n    border-radius: 10px;\n    padding: 10px;\n}\n\n.add-task-card > :first-child {\n    width: 100%;\n    border: none;\n    outline: none;\n    font-weight: 900;\n}\n\n.add-task-card > :first-child[contenteditable]:empty:before {\n    content: "Task name";\n    color: #8e8e8e;\n}\n\n.add-task-card > :nth-child(2) {\n    width: 100%;\n    border: none;\n    outline: none;\n    font-size: 14px;\n    font-weight: 200;\n}\n\n.add-task-card > :nth-child(2)[contenteditable]:empty:before {\n    content: "Description";\n    color: #8e8e8e;\n}\n\n.add-task-card .middle-row {\n    display: flex;\n    gap: 30px;\n}\n\n.add-task-card .middle-row > * {\n    display: flex;\n    gap: 10px;\n    align-items: center;\n    padding-bottom: 5px;\n}\n\n/* Date picker */\n.add-task-card .middle-row input {\n    min-height: 25px;\n}\n\n/* Priority dropdown */\n.add-task-card .middle-row select {\n    min-height: 25px;\n}\n\n.add-task-card .bottom-row {\n    display: flex;\n    justify-content: space-between;\n    border-top: 1px solid #e5e7eb;\n    padding-top: 10px;\n}\n\n/* Project dropdown */\n.add-task-card .bottom-row select {\n    height: 30px;\n    text-align: center;\n    border: none;\n    outline: none;\n    border-radius: 5px;\n}\n\n.add-task-card .bottom-row select:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n/* The buttons at the end of card */\n.add-task-card .bottom-row > :last-child {\n    display: flex;\n    gap: 10px;\n}\n\n/* Cancel button */\n.add-task-card .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.add-task-card .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.add-task-card .cancel-button:active {\n    transform: scale(0.95);\n}\n\n/* Add button */\n.add-task-card .add-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.add-task-card .add-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.add-task-card .add-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.add-task-card .add-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n}',"",{version:3,sources:["webpack://./src/modules/components/addTaskCard/addTaskCard.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,yBAAyB;IACzB,mBAAmB;IACnB,aAAa;AACjB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,gBAAgB;AACpB;;AAEA;IACI,oBAAoB;IACpB,cAAc;AAClB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,sBAAsB;IACtB,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,aAAa;IACb,SAAS;IACT,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA,gBAAgB;AAChB;IACI,gBAAgB;AACpB;;AAEA,sBAAsB;AACtB;IACI,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,6BAA6B;IAC7B,iBAAiB;AACrB;;AAEA,qBAAqB;AACrB;IACI,YAAY;IACZ,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA,mCAAmC;AACnC;IACI,aAAa;IACb,SAAS;AACb;;AAEA,kBAAkB;AAClB;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,0CAA0C;IAC1C,eAAe;AACnB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA,eAAe;AACf;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,yBAAyB;IACzB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,uCAAuC;AAC3C",sourcesContent:['.add-task-card {\n    width: 100%;\n    min-width: 400px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    border: 1px solid #9ca3af;\n    border-radius: 10px;\n    padding: 10px;\n}\n\n.add-task-card > :first-child {\n    width: 100%;\n    border: none;\n    outline: none;\n    font-weight: 900;\n}\n\n.add-task-card > :first-child[contenteditable]:empty:before {\n    content: "Task name";\n    color: #8e8e8e;\n}\n\n.add-task-card > :nth-child(2) {\n    width: 100%;\n    border: none;\n    outline: none;\n    font-size: 14px;\n    font-weight: 200;\n}\n\n.add-task-card > :nth-child(2)[contenteditable]:empty:before {\n    content: "Description";\n    color: #8e8e8e;\n}\n\n.add-task-card .middle-row {\n    display: flex;\n    gap: 30px;\n}\n\n.add-task-card .middle-row > * {\n    display: flex;\n    gap: 10px;\n    align-items: center;\n    padding-bottom: 5px;\n}\n\n/* Date picker */\n.add-task-card .middle-row input {\n    min-height: 25px;\n}\n\n/* Priority dropdown */\n.add-task-card .middle-row select {\n    min-height: 25px;\n}\n\n.add-task-card .bottom-row {\n    display: flex;\n    justify-content: space-between;\n    border-top: 1px solid #e5e7eb;\n    padding-top: 10px;\n}\n\n/* Project dropdown */\n.add-task-card .bottom-row select {\n    height: 30px;\n    text-align: center;\n    border: none;\n    outline: none;\n    border-radius: 5px;\n}\n\n.add-task-card .bottom-row select:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n/* The buttons at the end of card */\n.add-task-card .bottom-row > :last-child {\n    display: flex;\n    gap: 10px;\n}\n\n/* Cancel button */\n.add-task-card .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.add-task-card .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.add-task-card .cancel-button:active {\n    transform: scale(0.95);\n}\n\n/* Add button */\n.add-task-card .add-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.add-task-card .add-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.add-task-card .add-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.add-task-card .add-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n}'],sourceRoot:""}]);const i=r},914:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),d=t.n(o),a=t(645),r=t.n(a)()(d());r.push([e.id,".delete-project-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 400px;\n    position: relative;\n    top: -30%;\n}\n\n.delete-project-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.delete-project-dialog > div {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.delete-project-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.delete-project-dialog .message span:first-child {\n    font-weight: 900;\n}\n\n.delete-project-dialog .bottom-row {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.delete-project-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.delete-project-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.delete-project-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.delete-project-dialog .delete-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.delete-project-dialog .delete-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.delete-project-dialog .delete-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.delete-project-dialog .delete-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n}\n\n\n\n\n","",{version:3,sources:["webpack://./src/modules/components/deleteProjectDialog/deleteProjectDialog.css"],names:[],mappings:"AAAA;IACI,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;IACZ,kBAAkB;IAClB,SAAS;AACb;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,0CAA0C;IAC1C,eAAe;AACnB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,yBAAyB;IACzB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,uCAAuC;AAC3C",sourcesContent:[".delete-project-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 400px;\n    position: relative;\n    top: -30%;\n}\n\n.delete-project-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.delete-project-dialog > div {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.delete-project-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.delete-project-dialog .message span:first-child {\n    font-weight: 900;\n}\n\n.delete-project-dialog .bottom-row {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.delete-project-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.delete-project-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.delete-project-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.delete-project-dialog .delete-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.delete-project-dialog .delete-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.delete-project-dialog .delete-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.delete-project-dialog .delete-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n}\n\n\n\n\n"],sourceRoot:""}]);const i=r},934:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),d=t.n(o),a=t(645),r=t.n(a)()(d());r.push([e.id,".delete-task-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 400px;\n    position: relative;\n    top: -30%;\n}\n\n.delete-task-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.delete-task-dialog > div {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.delete-task-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.delete-task-dialog .message {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.delete-task-dialog .message span:first-child {\n    font-weight: 900;\n}\n\n.delete-task-dialog .bottom-row {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.delete-task-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.delete-task-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.delete-task-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.delete-task-dialog .delete-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.delete-task-dialog .delete-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.delete-task-dialog .delete-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.delete-task-dialog .delete-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n}\n\n\n\n\n","",{version:3,sources:["webpack://./src/modules/components/deleteTaskDialog/deleteTaskDialog.css"],names:[],mappings:"AAAA;IACI,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;IACZ,kBAAkB;IAClB,SAAS;AACb;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;IACnB,gBAAgB;IAChB,uBAAuB;AAC3B;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,0CAA0C;IAC1C,eAAe;AACnB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,yBAAyB;IACzB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,uCAAuC;AAC3C",sourcesContent:[".delete-task-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 400px;\n    position: relative;\n    top: -30%;\n}\n\n.delete-task-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.delete-task-dialog > div {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.delete-task-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.delete-task-dialog .message {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.delete-task-dialog .message span:first-child {\n    font-weight: 900;\n}\n\n.delete-task-dialog .bottom-row {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.delete-task-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.delete-task-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.delete-task-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.delete-task-dialog .delete-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.delete-task-dialog .delete-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.delete-task-dialog .delete-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.delete-task-dialog .delete-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n}\n\n\n\n\n"],sourceRoot:""}]);const i=r},930:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),d=t.n(o),a=t(645),r=t.n(a)()(d());r.push([e.id,".edit-project-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 300px;\n    position: relative;\n    top: -30%;\n}\n\n.edit-project-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.edit-project-dialog > form {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.edit-project-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n \n.edit-project-dialog form-field {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n\n.edit-project-dialog input {\n    height: 30px;\n    width: max(100%, 200px);\n    border-radius: 5px;\n    border: 1px solid #ddd;\n}\n\n.edit-project-dialog input:focus {\n    outline: none;\n    border: 1px solid grey;\n}\n\n.edit-project-dialog .error-message {\n    font-size: 14px;\n    color: red;\n    height: 14px;\n}\n\n.edit-project-dialog .buttons {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.edit-project-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.edit-project-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.edit-project-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.edit-project-dialog .save-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.edit-project-dialog .save-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.edit-project-dialog .save-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.edit-project-dialog .save-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n} \n\n\n\n","",{version:3,sources:["webpack://./src/modules/components/editProjectDialog/editProjectDialog.css"],names:[],mappings:"AAAA;IACI,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;IACZ,kBAAkB;IAClB,SAAS;AACb;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;;AAGA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;AACZ;;;AAGA;IACI,YAAY;IACZ,uBAAuB;IACvB,kBAAkB;IAClB,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,eAAe;IACf,UAAU;IACV,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,0CAA0C;IAC1C,eAAe;AACnB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,yBAAyB;IACzB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,uCAAuC;AAC3C",sourcesContent:[".edit-project-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 300px;\n    position: relative;\n    top: -30%;\n}\n\n.edit-project-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.edit-project-dialog > form {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.edit-project-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n \n.edit-project-dialog form-field {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n\n.edit-project-dialog input {\n    height: 30px;\n    width: max(100%, 200px);\n    border-radius: 5px;\n    border: 1px solid #ddd;\n}\n\n.edit-project-dialog input:focus {\n    outline: none;\n    border: 1px solid grey;\n}\n\n.edit-project-dialog .error-message {\n    font-size: 14px;\n    color: red;\n    height: 14px;\n}\n\n.edit-project-dialog .buttons {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.edit-project-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.edit-project-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.edit-project-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.edit-project-dialog .save-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.edit-project-dialog .save-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.edit-project-dialog .save-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.edit-project-dialog .save-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n} \n\n\n\n"],sourceRoot:""}]);const i=r},718:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),d=t.n(o),a=t(645),r=t.n(a)()(d());r.push([e.id,".inbox-page {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    gap: 50px;\n}\n\n.inbox-content {\n    display: flex;\n    flex-direction: column;\n    gap: 50px;\n    width: 60%;\n    padding: 20px 0;\n}\n\n.inbox-header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.priority-section {\n    width: 100%;\n}\n\n.priority-header {\n    font-weight: 900;\n}\n\n.add-task-button {\n    width: 100%;\n    text-align: left;\n    background: none;\n    border: none;\n    cursor: pointer;\n    color: #78716c;\n    font-size: 14px;\n    display: flex;\n    gap: 10px;\n    align-items: center;\n}\n\n.add-task-button > :first-child {\n    font-size: 25px;\n    display: flex;\n    align-items: center;\n}\n\n.add-task-button > :nth-child(2) {\n    display: flex;\n    align-items: center;\n}\n\n.add-task-button:hover {\n    color: #A16207;\n}\n\n.add-task-button-hidden {\n    display: none;\n}\n","",{version:3,sources:["webpack://./src/modules/components/inboxPage/inboxPage.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,UAAU;IACV,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,WAAW;IACX,gBAAgB;IAChB,gBAAgB;IAChB,YAAY;IACZ,eAAe;IACf,cAAc;IACd,eAAe;IACf,aAAa;IACb,SAAS;IACT,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,aAAa;AACjB",sourcesContent:[".inbox-page {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    gap: 50px;\n}\n\n.inbox-content {\n    display: flex;\n    flex-direction: column;\n    gap: 50px;\n    width: 60%;\n    padding: 20px 0;\n}\n\n.inbox-header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.priority-section {\n    width: 100%;\n}\n\n.priority-header {\n    font-weight: 900;\n}\n\n.add-task-button {\n    width: 100%;\n    text-align: left;\n    background: none;\n    border: none;\n    cursor: pointer;\n    color: #78716c;\n    font-size: 14px;\n    display: flex;\n    gap: 10px;\n    align-items: center;\n}\n\n.add-task-button > :first-child {\n    font-size: 25px;\n    display: flex;\n    align-items: center;\n}\n\n.add-task-button > :nth-child(2) {\n    display: flex;\n    align-items: center;\n}\n\n.add-task-button:hover {\n    color: #A16207;\n}\n\n.add-task-button-hidden {\n    display: none;\n}\n"],sourceRoot:""}]);const i=r},404:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),d=t.n(o),a=t(645),r=t.n(a)()(d());r.push([e.id,".nav-bar {\n    padding: 20px;\n    background-color: #A16207;\n    color: #e7e5e4;\n    grid-column: 1 / 3;\n}\n\n.logo {\n    width: max-content;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    cursor: pointer;\n}\n\n.logo > img {\n    width: 50px;\n}\n\n.logo > div {\n    font-size: 40px;\n    font-weight: 900;\n}\n\n","",{version:3,sources:["webpack://./src/modules/components/navBar/navBar.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,yBAAyB;IACzB,cAAc;IACd,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,eAAe;AACnB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB",sourcesContent:[".nav-bar {\n    padding: 20px;\n    background-color: #A16207;\n    color: #e7e5e4;\n    grid-column: 1 / 3;\n}\n\n.logo {\n    width: max-content;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    cursor: pointer;\n}\n\n.logo > img {\n    width: 50px;\n}\n\n.logo > div {\n    font-size: 40px;\n    font-weight: 900;\n}\n\n"],sourceRoot:""}]);const i=r},386:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),d=t.n(o),a=t(645),r=t.n(a)()(d());r.push([e.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]);const i=r},332:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),d=t.n(o),a=t(645),r=t.n(a)()(d());r.push([e.id,".side-bar {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    background-color: rgba(209, 213, 219, 0.2);\n    padding: 30px 20px;\n}\n\n.default-items {\n    display: flex;\n    flex-direction: column;\n}\n\n.projects {\n    display: flex;\n    flex-direction: column;\n}\n\n.projects-header {\n    display: flex;  \n    justify-content: space-between; \n    cursor: pointer;\n    padding: 5px 5px 5px 0;\n}\n\n.projects-header:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.projects-header > div {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.add-project-button {\n    background: none;\n    border: none;\n    font-size: 20px;\n    cursor: pointer;\n    border-radius: 2px;\n}\n\n.add-project-button:hover {\n    background-color: white;\n}\n\n","",{version:3,sources:["webpack://./src/modules/components/sideBar/sideBar.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,0CAA0C;IAC1C,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,eAAe;IACf,sBAAsB;AAC1B;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,YAAY;IACZ,eAAe;IACf,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,uBAAuB;AAC3B",sourcesContent:[".side-bar {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    background-color: rgba(209, 213, 219, 0.2);\n    padding: 30px 20px;\n}\n\n.default-items {\n    display: flex;\n    flex-direction: column;\n}\n\n.projects {\n    display: flex;\n    flex-direction: column;\n}\n\n.projects-header {\n    display: flex;  \n    justify-content: space-between; \n    cursor: pointer;\n    padding: 5px 5px 5px 0;\n}\n\n.projects-header:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.projects-header > div {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.add-project-button {\n    background: none;\n    border: none;\n    font-size: 20px;\n    cursor: pointer;\n    border-radius: 2px;\n}\n\n.add-project-button:hover {\n    background-color: white;\n}\n\n"],sourceRoot:""}]);const i=r},540:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),d=t.n(o),a=t(645),r=t.n(a)()(d());r.push([e.id,".sidebar-item {\n    display: flex;\n    align-items: center;\n    padding: 5px;\n    cursor: pointer;\n    border-radius: 5px;\n}\n\n.sidebar-item:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.sidebar-item-active {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.sidebar-item > .item-content > img {\n    width: 25px;\n}\n\n.sidebar-item > .item-content {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    width: 100%;\n}\n\n.sidebar-item > .item-buttons {\n    display: flex;\n    gap: 5px;\n    visibility: hidden;\n}\n\n.sidebar-item:hover .item-buttons {\n    visibility: visible;\n}\n\n.sidebar-item > .item-buttons > button {\n    height: 20px;\n    width: 20px;\n    background-color: transparent;\n    padding: 0;\n    border: none;\n    cursor: pointer;\n    border-radius: 2px;\n}\n\n.sidebar-item > .item-buttons > button:hover {\n    background-color: white;\n}\n\n.sidebar-item > .item-buttons > button > img {\n    width: 15px;\n    height: 15px;\n}","",{version:3,sources:["webpack://./src/modules/components/sideBarItem/sideBarItem.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;IACnB,YAAY;IACZ,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,WAAW;AACf;;AAEA;IACI,aAAa;IACb,QAAQ;IACR,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,6BAA6B;IAC7B,UAAU;IACV,YAAY;IACZ,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,WAAW;IACX,YAAY;AAChB",sourcesContent:[".sidebar-item {\n    display: flex;\n    align-items: center;\n    padding: 5px;\n    cursor: pointer;\n    border-radius: 5px;\n}\n\n.sidebar-item:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.sidebar-item-active {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.sidebar-item > .item-content > img {\n    width: 25px;\n}\n\n.sidebar-item > .item-content {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    width: 100%;\n}\n\n.sidebar-item > .item-buttons {\n    display: flex;\n    gap: 5px;\n    visibility: hidden;\n}\n\n.sidebar-item:hover .item-buttons {\n    visibility: visible;\n}\n\n.sidebar-item > .item-buttons > button {\n    height: 20px;\n    width: 20px;\n    background-color: transparent;\n    padding: 0;\n    border: none;\n    cursor: pointer;\n    border-radius: 2px;\n}\n\n.sidebar-item > .item-buttons > button:hover {\n    background-color: white;\n}\n\n.sidebar-item > .item-buttons > button > img {\n    width: 15px;\n    height: 15px;\n}"],sourceRoot:""}]);const i=r},258:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),d=t.n(o),a=t(645),r=t.n(a)()(d());r.push([e.id,".task-card {\n    display: grid;\n    grid-template-columns: max-content minmax(0, 1fr) max-content;\n    grid-template-rows: max-content;\n    gap: 10px;\n    border-bottom: 0.5px solid #ddd;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    cursor: pointer;\n}\n\n.task-card .check-button {\n    aspect-ratio: 1 / 1;\n    width: 10px;\n    border-radius: 50%;\n    cursor: pointer;\n    border: 2px solid #A16207;\n    background-color: rgba(161, 98, 7, 0.1);\n}\n\n.task-card .check-button:hover {\n    background-color: rgba(161, 98, 7, 0.5);\n}\n\n.task-card .check-button:active {\n    transform: scale(1.2);\n}\n\n.task-card .middle-column {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n/* Name field */\n.task-card .middle-column > :first-child {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n/* Description field */\n.task-card .middle-column > :nth-child(2) {\n    color: #666666;\n    font-size: 14px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.task-card .due-date {\n    display: flex;\n    gap: 5px;\n    color: #666666;\n    font-size: 14px;\n}\n\n.task-card .due-date > :first-child {\n    width: 15px;\n}\n\n.task-card .delete-button {\n    height: 30px;\n    width: 30px;\n    background-color: transparent;\n    padding: 0;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    visibility: hidden;\n}\n\n.task-card .delete-button:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.task-card:hover .delete-button {\n    visibility: visible;\n}\n\n.task-card .delete-button > img {\n    width: 20px;\n    height: 20px;\n}\n\n","",{version:3,sources:["webpack://./src/modules/components/taskCard/taskCard.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,6DAA6D;IAC7D,+BAA+B;IAC/B,SAAS;IACT,+BAA+B;IAC/B,iBAAiB;IACjB,oBAAoB;IACpB,eAAe;AACnB;;AAEA;IACI,mBAAmB;IACnB,WAAW;IACX,kBAAkB;IAClB,eAAe;IACf,yBAAyB;IACzB,uCAAuC;AAC3C;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA,eAAe;AACf;IACI,mBAAmB;IACnB,gBAAgB;IAChB,uBAAuB;AAC3B;;AAEA,sBAAsB;AACtB;IACI,cAAc;IACd,eAAe;IACf,mBAAmB;IACnB,gBAAgB;IAChB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,QAAQ;IACR,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,6BAA6B;IAC7B,UAAU;IACV,YAAY;IACZ,kBAAkB;IAClB,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB",sourcesContent:[".task-card {\n    display: grid;\n    grid-template-columns: max-content minmax(0, 1fr) max-content;\n    grid-template-rows: max-content;\n    gap: 10px;\n    border-bottom: 0.5px solid #ddd;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    cursor: pointer;\n}\n\n.task-card .check-button {\n    aspect-ratio: 1 / 1;\n    width: 10px;\n    border-radius: 50%;\n    cursor: pointer;\n    border: 2px solid #A16207;\n    background-color: rgba(161, 98, 7, 0.1);\n}\n\n.task-card .check-button:hover {\n    background-color: rgba(161, 98, 7, 0.5);\n}\n\n.task-card .check-button:active {\n    transform: scale(1.2);\n}\n\n.task-card .middle-column {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n/* Name field */\n.task-card .middle-column > :first-child {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n/* Description field */\n.task-card .middle-column > :nth-child(2) {\n    color: #666666;\n    font-size: 14px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.task-card .due-date {\n    display: flex;\n    gap: 5px;\n    color: #666666;\n    font-size: 14px;\n}\n\n.task-card .due-date > :first-child {\n    width: 15px;\n}\n\n.task-card .delete-button {\n    height: 30px;\n    width: 30px;\n    background-color: transparent;\n    padding: 0;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    visibility: hidden;\n}\n\n.task-card .delete-button:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.task-card:hover .delete-button {\n    visibility: visible;\n}\n\n.task-card .delete-button > img {\n    width: 20px;\n    height: 20px;\n}\n\n"],sourceRoot:""}]);const i=r},773:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),d=t.n(o),a=t(645),r=t.n(a)()(d());r.push([e.id,".today-page {\n    width: 100%;\n    height: 100%;\n}","",{version:3,sources:["webpack://./src/modules/components/todayPage/todayPage.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,YAAY;AAChB",sourcesContent:[".today-page {\n    width: 100%;\n    height: 100%;\n}"],sourceRoot:""}]);const i=r},627:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),d=t.n(o),a=t(645),r=t.n(a)()(d());r.push([e.id,".upcoming-page {\n    width: 100%;\n    height: 100%;\n}","",{version:3,sources:["webpack://./src/modules/components/upcomingPage/upcomingPage.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,YAAY;AAChB",sourcesContent:[".upcoming-page {\n    width: 100%;\n    height: 100%;\n}"],sourceRoot:""}]);const i=r},426:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),d=t.n(o),a=t(645),r=t.n(a)()(d());r.push([e.id,"* {\n    /* Fix issue with extra space on the side when adding padding */\n    -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */\n    -moz-box-sizing: border-box;    /* Firefox, other Gecko */\n    box-sizing: border-box;         /* Opera/IE 8+ */\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 300px minmax(0, 1fr);\n    grid-template-rows: max-content 1fr;\n    min-height: 100vh;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,+DAA+D;IAC/D,8BAA8B,EAAE,gCAAgC;IAChE,2BAA2B,KAAK,yBAAyB;IACzD,sBAAsB,UAAU,gBAAgB;AACpD;;AAEA;IACI,SAAS;IACT,UAAU;IACV,aAAa;IACb,2CAA2C;IAC3C,mCAAmC;IACnC,iBAAiB;AACrB",sourcesContent:["* {\n    /* Fix issue with extra space on the side when adding padding */\n    -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */\n    -moz-box-sizing: border-box;    /* Firefox, other Gecko */\n    box-sizing: border-box;         /* Opera/IE 8+ */\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 300px minmax(0, 1fr);\n    grid-template-rows: max-content 1fr;\n    min-height: 100vh;\n}"],sourceRoot:""}]);const i=r},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,d,a){"string"==typeof e&&(e=[[null,e,void 0]]);var r={};if(o)for(var i=0;i<this.length;i++){var A=this[i][0];null!=A&&(r[A]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);o&&r[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),d&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=d):l[4]="".concat(d)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),d="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(d," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var a={},r=[],i=0;i<e.length;i++){var A=e[i],c=o.base?A[0]+o.base:A[0],l=a[c]||0,s="".concat(c," ").concat(l);a[c]=l+1;var p=t(s),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var m=d(u,o);o.byIndex=i,n.splice(i,0,{identifier:s,updater:m,references:1})}r.push(s)}return r}function d(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,d){var a=o(e=e||[],d=d||{});return function(e){e=e||[];for(var r=0;r<a.length;r++){var i=t(a[r]);n[i].references--}for(var A=o(e,d),c=0;c<a.length;c++){var l=t(a[c]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=A}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var d=void 0!==t.layer;d&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,d&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var d=n[o];if(void 0!==d)return d.exports;var a=n[o]={id:o,exports:{}};return e[o](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");if(o.length)for(var d=o.length-1;d>-1&&!e;)e=o[d--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),o=t(795),d=t.n(o),a=t(569),r=t.n(a),i=t(565),A=t.n(i),c=t(216),l=t.n(c),s=t(589),p=t.n(s),u=t(426),m={};m.styleTagTransform=p(),m.setAttributes=A(),m.insert=r().bind(null,"head"),m.domAPI=d(),m.insertStyleElement=l(),n()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const C=()=>{const e=e=>{let n=t();n.push(e),localStorage.setItem("projects",JSON.stringify(n))},n=e=>{const n=JSON.parse(localStorage.getItem("projects")).filter((n=>n.name===e));return 0===n.length?{}:n[0]},t=()=>JSON.parse(localStorage.getItem("projects")),o=()=>JSON.parse(localStorage.getItem("tasks"));return{init:()=>{localStorage.getItem("projects")||localStorage.setItem("projects",JSON.stringify([])),"{}"===JSON.stringify(n("Inbox"))&&e({id:"Inbox",name:"Inbox",timeCreated:(new Date).getTime()}),localStorage.getItem("tasks")||localStorage.setItem("tasks",JSON.stringify([]))},getProjectById:e=>{const n=JSON.parse(localStorage.getItem("projects")).filter((n=>n.id===e));return 0===n.length?{}:n[0]},getProjectByName:n,getAllProjects:t,createProject:e,updateProject:(e,n)=>{let o=t();for(let t=0;t<o.length;t++)o[t].id===e.id&&(o[t]=n);localStorage.setItem("projects",JSON.stringify(o))},deleteProject:e=>{let n=t();n=n.filter((n=>n.id!==e)),localStorage.setItem("projects",JSON.stringify(n))},createTask:e=>{let n=o();n.push(e),localStorage.setItem("tasks",JSON.stringify(n))},getAllTasks:o,getTasksByProject:e=>o().filter((n=>n.projectName===e)),getTaskByTimeCreated:e=>{const n=o();for(let t of n)if(t.timeCreated===e)return t;return{}},deleteTask:e=>{let n=o();n=n.filter((n=>n.timeCreated!==e)),localStorage.setItem("tasks",JSON.stringify(n))}}};var g=t(404),b={};b.styleTagTransform=p(),b.setAttributes=A(),b.insert=r().bind(null,"head"),b.domAPI=d(),b.insertStyleElement=l(),n()(g.Z,b),g.Z&&g.Z.locals&&g.Z.locals;const h=t.p+"92c598d0995778188044.svg";var I=t(332),x={};x.styleTagTransform=p(),x.setAttributes=A(),x.insert=r().bind(null,"head"),x.domAPI=d(),x.insertStyleElement=l(),n()(I.Z,x),I.Z&&I.Z.locals&&I.Z.locals;var f=t(540),B={};B.styleTagTransform=p(),B.setAttributes=A(),B.insert=r().bind(null,"head"),B.domAPI=d(),B.insertStyleElement=l(),n()(f.Z,B),f.Z&&f.Z.locals&&f.Z.locals;const v=t.p+"804b4b589eea8b818764.svg",y=t.p+"b4200fd474d2b71d1e95.svg",k=(e,n,t)=>{const o=document.createElement("div");o.className="sidebar-item",o.id=n.id;const d=document.createElement("div");d.className="item-content";const a=new Image;a.src=e,d.appendChild(a);const r=document.createElement("div");if(r.textContent=n.name,d.appendChild(r),o.appendChild(d),t){const e=document.createElement("div");e.className="item-buttons";const n=document.createElement("button");n.className="edit-button";const t=new Image;t.src=v,n.appendChild(t),e.appendChild(n);const d=document.createElement("button");d.className="delete-button";const a=new Image;a.src=y,d.appendChild(a),e.appendChild(d),o.appendChild(e)}return o},E=t.p+"939f2a757e3335be71bb.svg",w=t.p+"233385e32206cd372d69.svg",j=t.p+"1514cb89e66edd886067.svg",S=()=>{const e=document.createElement("div");e.className="side-bar";const n=document.createElement("div");n.className="default-items",n.appendChild(k(E,{id:"Inbox",name:"Inbox"},!1)),n.appendChild(k(w,{id:"Today",name:"Today"},!1)),n.appendChild(k(j,{id:"Upcoming",name:"Upcoming"},!1)),e.appendChild(n);const t=document.createElement("div");t.className="projects",t.appendChild((()=>{const e=document.createElement("div");e.className="projects-header";const n=document.createElement("div");n.textContent="Projects",e.appendChild(n);const t=document.createElement("button");return t.className="add-project-button",t.textContent="+",e.appendChild(t),e})());const o=document.createElement("div");return o.className="project-items",t.appendChild(o),e.appendChild(t),e};var Z=t(718),Y={};Y.styleTagTransform=p(),Y.setAttributes=A(),Y.insert=r().bind(null,"head"),Y.domAPI=d(),Y.insertStyleElement=l(),n()(Z.Z,Y),Z.Z&&Z.Z.locals&&Z.Z.locals;const N=e=>{const n=document.createElement("div");n.className="priority-section";const t=document.createElement("div");t.className="priority-header",t.textContent=`Priority ${e.toString()}`,n.appendChild(t);const o=document.createElement("div");n.appendChild(o);const d=document.createElement("button");d.className="add-task-button";const a=document.createElement("span");a.textContent="+";const r=document.createElement("span");return r.textContent="Add task",d.appendChild(a),d.appendChild(r),n.appendChild(d),n};var q=t(773),T={};T.styleTagTransform=p(),T.setAttributes=A(),T.insert=r().bind(null,"head"),T.domAPI=d(),T.insertStyleElement=l(),n()(q.Z,T),q.Z&&q.Z.locals&&q.Z.locals;var P=t(627),D={};D.styleTagTransform=p(),D.setAttributes=A(),D.insert=r().bind(null,"head"),D.domAPI=d(),D.insertStyleElement=l(),n()(P.Z,D),P.Z&&P.Z.locals&&P.Z.locals;var W=t(620),z={};z.styleTagTransform=p(),z.setAttributes=A(),z.insert=r().bind(null,"head"),z.domAPI=d(),z.insertStyleElement=l(),n()(W.Z,z),W.Z&&W.Z.locals&&W.Z.locals;const L=(e,n)=>{const t=document.createElement("div");if(n){const e=document.createElement("div");e.textContent=n,t.appendChild(e)}const o=document.createElement("select");return e.forEach((e=>{o.appendChild(U(e))})),t.appendChild(o),t},U=e=>{const n=document.createElement("option");return n.value=e,n.textContent=e,n},R=e=>{const n=document.createElement("div");n.className="add-task-card";const t=document.createElement("span");t.role="textbox",t.contentEditable="true",n.appendChild(t);const o=document.createElement("span");o.role="textbox",o.contentEditable="true",n.appendChild(o);const d=document.createElement("div");d.className="middle-row",d.appendChild((()=>{const e=document.createElement("div"),n=document.createElement("div");n.textContent="Due date",e.appendChild(n);const t=document.createElement("input");return t.type="date",e.appendChild(t),e})()),d.appendChild(L(["Priority 1","Priority 2","Priority 3","Priority 4"],"Priority")),n.appendChild(d);const a=document.createElement("div");a.className="bottom-row",a.appendChild(L(e.map((e=>e.name))));const r=document.createElement("div"),i=document.createElement("button");i.className="cancel-button",i.textContent="Cancel",r.appendChild(i);const A=document.createElement("button");return A.textContent="Add task",A.className="add-button",A.disabled=!0,r.appendChild(A),a.appendChild(r),n.appendChild(a),n};var X=t(177),O={};O.styleTagTransform=p(),O.setAttributes=A(),O.insert=r().bind(null,"head"),O.domAPI=d(),O.insertStyleElement=l(),n()(X.Z,O),X.Z&&X.Z.locals&&X.Z.locals;const M=t.p+"28282ddc85b085c7fd14.svg";var J=t(386),V={};V.styleTagTransform=p(),V.setAttributes=A(),V.insert=r().bind(null,"head"),V.domAPI=d(),V.insertStyleElement=l(),n()(J.Z,V),J.Z&&J.Z.locals&&J.Z.locals;var F=t(930),G={};G.styleTagTransform=p(),G.setAttributes=A(),G.insert=r().bind(null,"head"),G.domAPI=d(),G.insertStyleElement=l(),n()(F.Z,G),F.Z&&F.Z.locals&&F.Z.locals;var Q=t(914),$={};$.styleTagTransform=p(),$.setAttributes=A(),$.insert=r().bind(null,"head"),$.domAPI=d(),$.insertStyleElement=l(),n()(Q.Z,$),Q.Z&&Q.Z.locals&&Q.Z.locals;var K=t(258),H={};H.styleTagTransform=p(),H.setAttributes=A(),H.insert=r().bind(null,"head"),H.domAPI=d(),H.insertStyleElement=l(),n()(K.Z,H),K.Z&&K.Z.locals&&K.Z.locals;const _=t.p+"ec79a10c2e5d5200f8b4.svg";var ee=t(934),ne={};ne.styleTagTransform=p(),ne.setAttributes=A(),ne.insert=r().bind(null,"head"),ne.domAPI=d(),ne.insertStyleElement=l(),n()(ee.Z,ne),ee.Z&&ee.Z.locals&&ee.Z.locals;const te={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let oe;const de=new Uint8Array(16);function ae(){if(!oe&&(oe="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!oe))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return oe(de)}const re=[];for(let e=0;e<256;++e)re.push((e+256).toString(16).slice(1));const ie=function(e,n,t){if(te.randomUUID&&!n&&!e)return te.randomUUID();const o=(e=e||{}).random||(e.rng||ae)();if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,n){t=t||0;for(let e=0;e<16;++e)n[t+e]=o[e];return n}return function(e,n=0){return re[e[n+0]]+re[e[n+1]]+re[e[n+2]]+re[e[n+3]]+"-"+re[e[n+4]]+re[e[n+5]]+"-"+re[e[n+6]]+re[e[n+7]]+"-"+re[e[n+8]]+re[e[n+9]]+"-"+re[e[n+10]]+re[e[n+11]]+re[e[n+12]]+re[e[n+13]]+re[e[n+14]]+re[e[n+15]]}(o)},Ae=()=>{const e=C();let n="";const t=()=>{let n=e.getAllProjects();n=n.filter((e=>"Inbox"!==e.name));const t=document.querySelector(".side-bar .project-items");for(;t.lastChild;)t.removeChild(t.lastChild);n.forEach((e=>{t.appendChild(k(M,e,!0))})),a(),o(),d()},o=()=>{document.querySelectorAll(".sidebar-item .edit-button").forEach((n=>{n.addEventListener("click",(()=>{const t=e.getProjectById(n.parentElement.parentElement.id);m(t)}))}))},d=()=>{document.querySelectorAll(".sidebar-item .delete-button").forEach((n=>{n.addEventListener("click",(()=>{const t=e.getProjectById(n.parentElement.parentElement.id);b(t)}))}))},a=()=>{document.querySelectorAll(".sidebar-item").forEach((e=>{e.querySelector(".item-content").addEventListener("click",(()=>{e.classList.contains("sidebar-item-active")||r(e.id)}))}))},r=e=>{(e=>{console.log(e),document.querySelectorAll(".sidebar-item").forEach((e=>{e.className="sidebar-item"})),document.getElementById(e).classList.add("sidebar-item-active")})(e),"Inbox"===e?i():"Today"===e?A():"Upcoming"===e?c():l(e)},i=()=>{const n=document.querySelector("#content");n.lastChild&&n.removeChild(n.lastChild);const t=(()=>{const e=document.createElement("div");e.className="inbox-page";const n=document.createElement("div");n.className="inbox-content";const t=document.createElement("div");t.className="inbox-header",t.textContent="Inbox",n.appendChild(t);for(let e=1;e<5;e++){const t=N(e);t.className="priority-section",n.appendChild(t)}return e.appendChild(n),e})(),o=e.getTasksByProject("Inbox"),d=t.querySelectorAll(".priority-section");o.forEach((e=>{const n=parseInt(e.priority),t=d[n-1].children.item(1),o=(e=>{const n=document.createElement("div");n.className="task-card",n.id=e.timeCreated;const t=document.createElement("div"),o=document.createElement("button");o.className="check-button",t.appendChild(o),n.appendChild(t);const d=document.createElement("div");d.className="middle-column";const a=document.createElement("div");a.textContent=e.name,d.appendChild(a);const r=document.createElement("div");r.textContent=e.description,d.appendChild(r);const i=document.createElement("div");i.className="due-date";const A=new Image;A.src=_,i.appendChild(A);const c=document.createElement("div");let l;if(""===e.dueDate)l="No due date";else{let n=new Date(parseInt(e.dueDate));l=`${n.getFullYear()}-${(n.getMonth()+1).toLocaleString("en-US",{minimumIntegerDigits:2,useGrouping:!1})}-${n.getDate().toLocaleString("en-US",{minimumIntegerDigits:2,useGrouping:!1})}`}c.textContent=l,i.appendChild(c),d.appendChild(i),n.appendChild(d);const s=document.createElement("div"),p=document.createElement("button");p.className="delete-button";const u=new Image;return u.src=y,p.appendChild(u),s.appendChild(p),n.appendChild(s),n})(e);t.appendChild(o),Z(o)})),n.appendChild(t),x()},A=()=>{const e=document.querySelector("#content");e.lastChild&&e.removeChild(e.lastChild),e.appendChild((()=>{const e=document.createElement("div");return e.className="today-page",e.textContent="today page",e})())},c=()=>{const e=document.querySelector("#content");e.lastChild&&e.removeChild(e.lastChild),e.appendChild((()=>{const e=document.createElement("div");return e.className="upcoming-page",e.textContent="upcoming page",e})())},l=e=>{const n=document.querySelector("#content");n.lastChild&&n.removeChild(n.lastChild),n.appendChild((e=>{const n=document.createElement("div");return n.textContent=`Project page: ${e}`,n})(e))},s=()=>{document.querySelector(".add-project-dialog").showModal(),document.body.style.overflow="hidden",document.querySelector(".add-project-dialog input").value="",document.querySelector(".add-project-dialog .error-message").textContent="",document.querySelector(".add-project-dialog .add-button").disabled=!0},p=()=>{document.querySelector(".add-project-dialog").close()},u=n=>{let t="valid";if(0==n.length||n.length>20)t="Project's name must have 1-20 characters.";else{const o=e.getAllProjects();for(let e of o)if(e.name===n){t="This name is already taken.";break}}return t},m=e=>{const n=document.querySelector(".edit-project-dialog");n.dataProject=e,n.showModal(),document.body.style.overflow="hidden",n.querySelector("input").value=e.name,document.querySelector(".edit-project-dialog .error-message").textContent="",document.querySelector(".edit-project-dialog .save-button").disabled=!0},g=()=>{document.querySelector(".edit-project-dialog").close()},b=e=>{const n=document.querySelector(".delete-project-dialog");n.dataProject=e,n.showModal(),document.body.style.overflow="hidden",n.querySelector(".message span:first-Child").textContent=e.name},I=()=>{document.querySelector(".delete-project-dialog").close()},x=()=>{document.querySelectorAll(".add-task-button").forEach((e=>{e.addEventListener("click",(()=>{f(e)}))}))},f=n=>{document.querySelector(".inbox-page").querySelectorAll(".add-task-button").forEach((e=>{e.classList.add("add-task-button-hidden")}));const t=R(e.getAllProjects());B(t,parseInt(n.parentElement.firstChild.textContent.split(" ")[1])),v(t.querySelector(".add-task-card .cancel-button")),E(t),w(t),n.parentElement.appendChild(t)},B=(e,n)=>{e.querySelector(".middle-row select").children.item(n-1).selected="selected"},v=e=>{e.addEventListener("click",(()=>{j()}))},E=e=>{const n=e.firstChild;n.addEventListener("input",(()=>{const t=e.querySelector(".add-button");""!==n.textContent.trim()?t.disabled=!1:t.disabled=!0}))},w=n=>{n.querySelector(".add-button").addEventListener("click",(()=>{const t=(new Date).getTime(),o=n.firstChild.textContent.trim(),d=n.children.item(1).textContent.trim(),a=n.querySelector(".middle-row input").value;let r=new Date;""!==a?(r.setUTCFullYear(a.split("-")[0]),r.setMonth(parseInt(a.split("-")[1])-1),r.setDate(a.split("-")[2]),r.setUTCHours(0),r.setMinutes(0),r.setSeconds(0),r.setMilliseconds(0),r=r.getTime()):r="";const A={timeCreated:t,name:o,description:d,dueDate:r,priority:n.querySelector(".middle-row select").value.split(" ")[1],projectName:n.querySelector(".bottom-row select").value};e.createTask(A),i()}))},j=()=>{const e=document.querySelector(".add-task-card").parentElement;e.removeChild(e.lastChild),document.querySelector(".inbox-page").querySelectorAll(".add-task-button").forEach((e=>{e.classList.remove("add-task-button-hidden")}))},Z=e=>{q(e),T(e),Y(e)},Y=e=>{e.addEventListener("click",(()=>{console.log("clicked")}))},q=n=>{n.querySelector(".check-button").addEventListener("click",(t=>{t.stopImmediatePropagation(),e.deleteTask(parseInt(n.id)),i()}))},T=n=>{n.querySelector(".delete-button").addEventListener("click",(t=>{t.stopImmediatePropagation();const o=e.getTaskByTimeCreated(parseInt(n.id));P(o)}))},P=e=>{const t=document.querySelector(".delete-task-dialog");t.showModal(),document.body.style.overflow="hidden",t.querySelector(".message span:first-Child").textContent=e.name,n=e.timeCreated},D=()=>{document.querySelector(".delete-task-dialog").close()};return{init:()=>{const o=document.querySelector("body"),d=(()=>{const e=document.createElement("div");e.className="nav-bar";const n=(()=>{const e=document.createElement("div");e.className="logo";const n=new Image;n.src=h,e.appendChild(n);const t=document.createElement("div");return t.textContent="Todo List",e.appendChild(t),e})();return e.appendChild(n),e})();o.appendChild(d),document.querySelector(".logo").addEventListener("click",(()=>{const e=document.querySelector("#Inbox");e.classList.contains("sidebar-item-active")||r(e.id)}));const a=S();o.appendChild(a),t(),document.querySelector(".add-project-button").addEventListener("click",(()=>{s()}));const A=document.createElement("div");A.id="content",o.appendChild(A);const c=(()=>{const e=document.createElement("dialog");e.className="add-project-dialog";const n=document.createElement("form");n.action="#",n.method="post",n.noValidate=!0,n.className="form";const t=document.createElement("div");t.className="header",t.textContent="Add project",n.appendChild(t);const o=document.createElement("form-field"),d=document.createElement("label");d.for="project-name",d.textContent="Name",o.appendChild(d);const a=document.createElement("input");a.type="text",a.id="project-name",o.appendChild(a);const r=document.createElement("span");r.className="error-message",r.ariaLive="polite",o.appendChild(r),n.appendChild(o);const i=document.createElement("div");i.className="buttons";const A=document.createElement("button");A.className="cancel-button",A.textContent="Cancel",i.appendChild(A),n.appendChild(i);const c=document.createElement("button");return c.className="add-button",c.textContent="Add",c.disabled=!0,i.appendChild(c),e.appendChild(n),e})();o.appendChild(c),document.querySelector(".add-project-dialog").addEventListener("close",(()=>{document.body.style.overflow="auto"})),(()=>{const e=document.querySelector(".add-project-dialog input");e.addEventListener("input",(()=>{const n=u(e.value),t=document.querySelector(".add-project-dialog .add-button"),o=document.querySelector(".add-project-dialog .error-message");"valid"===n?(t.disabled=!1,o.textContent=""):(t.disabled=!0,o.textContent=n)}))})(),(()=>{const n=document.querySelector(".add-project-dialog input");n.addEventListener("keypress",(o=>{if(13===o.keyCode)if(o.preventDefault(),"valid"===u(n.value)){const o=ie(),d=n.value,a=(new Date).getTime();e.createProject({id:o,name:d,timeCreated:a}),p(),t(),r(o)}else{const e=document.querySelector(".add-project-dialog .error-message");""===e.textContent&&(e.textContent=u(n.value))}}))})(),document.querySelector(".add-project-dialog .cancel-button").addEventListener("click",(e=>{e.preventDefault(),p()})),document.querySelector(".add-project-dialog .add-button").addEventListener("click",(n=>{n.preventDefault();const o=ie(),d=document.querySelector(".add-project-dialog input").value,a=(new Date).getTime();e.createProject({id:o,name:d,timeCreated:a}),p(),t(),r(o)}));const l=(()=>{const e=document.createElement("dialog");e.className="edit-project-dialog";const n=document.createElement("form");n.action="#",n.method="post",n.noValidate=!0,n.className="form";const t=document.createElement("div");t.className="header",t.textContent="Edit project",n.appendChild(t);const o=document.createElement("form-field"),d=document.createElement("label");d.for="project-name",d.textContent="Name",o.appendChild(d);const a=document.createElement("input");a.type="text",a.id="project-name",o.appendChild(a);const r=document.createElement("span");r.className="error-message",r.ariaLive="polite",o.appendChild(r),n.appendChild(o);const i=document.createElement("div");i.className="buttons";const A=document.createElement("button");A.className="cancel-button",A.textContent="Cancel",i.appendChild(A),n.appendChild(i);const c=document.createElement("button");return c.className="save-button",c.textContent="Save",c.disabled=!0,i.appendChild(c),e.appendChild(n),e})();o.appendChild(l),document.querySelector(".edit-project-dialog").addEventListener("close",(()=>{document.body.style.overflow="auto"})),(()=>{const e=document.querySelector(".edit-project-dialog input");e.addEventListener("input",(()=>{const n=u(e.value),t=document.querySelector(".edit-project-dialog .save-button"),o=document.querySelector(".edit-project-dialog .error-message");"valid"===n?(t.disabled=!1,o.textContent=""):(t.disabled=!0,o.textContent=n)}))})(),(()=>{const n=document.querySelector(".edit-project-dialog input");n.addEventListener("keypress",(o=>{if(13===o.keyCode)if(o.preventDefault(),"valid"===u(n.value)){const n=document.querySelector(".edit-project-dialog").dataProject;let o={};o.id=n.id,o.name=document.querySelector(".edit-project-dialog input").value,o.timeCreated=n.timeCreated,e.updateProject(n,o),g(),t(),r(o.id)}else{const e=document.querySelector(".edit-project-dialog .error-message");""===e.textContent&&(e.textContent=u(n.value))}}))})(),document.querySelector(".edit-project-dialog .cancel-button").addEventListener("click",(e=>{e.preventDefault(),g()})),document.querySelector(".edit-project-dialog .save-button").addEventListener("click",(n=>{n.preventDefault();const o=document.querySelector(".edit-project-dialog").dataProject;let d={};d.id=o.id,d.name=document.querySelector(".edit-project-dialog input").value,d.timeCreated=o.timeCreated,e.updateProject(o,d),g(),t(),r(d.id)}));const m=(()=>{const e=document.createElement("dialog");e.className="delete-project-dialog";const n=document.createElement("div"),t=document.createElement("div");t.className="header",t.textContent="Delete project?",n.appendChild(t);const o=document.createElement("div");o.className="message",o.textContent="Are you sure you want to delete ";const d=document.createElement("span");o.appendChild(d);const a=document.createElement("span");a.textContent="?",o.appendChild(a),n.appendChild(o);const r=document.createElement("div");r.className="bottom-row";const i=document.createElement("button");i.className="cancel-button",i.textContent="Cancel",r.appendChild(i);const A=document.createElement("button");return A.className="delete-button",A.textContent="Delete",r.appendChild(A),n.appendChild(r),e.appendChild(n),e})();o.appendChild(m),document.querySelector(".delete-project-dialog").addEventListener("close",(()=>{document.body.style.overflow="auto"})),document.querySelector(".delete-project-dialog .cancel-button").addEventListener("click",(e=>{e.preventDefault(),I()})),document.querySelector(".delete-project-dialog .delete-button").addEventListener("click",(n=>{n.preventDefault();const o=document.querySelector(".delete-project-dialog").dataProject;e.deleteProject(o.id),I(),document.querySelector(".sidebar-item-active").id===o.id&&r("Inbox"),t()})),document.querySelector(".delete-project-dialog").addEventListener("keypress",(n=>{if(13===n.keyCode){n.preventDefault();const o=document.querySelector(".delete-project-dialog").dataProject;e.deleteProject(o.id),I(),document.querySelector(".sidebar-item-active").id===o.id&&r("Inbox"),t()}}));const C=(()=>{const e=document.createElement("dialog");e.className="delete-task-dialog";const n=document.createElement("div"),t=document.createElement("div");t.className="header",t.textContent="Delete task?",n.appendChild(t);const o=document.createElement("div");o.className="message",o.textContent="Are you sure you want to delete ";const d=document.createElement("span");o.appendChild(d);const a=document.createElement("span");a.textContent="?",o.appendChild(a),n.appendChild(o);const r=document.createElement("div");r.className="bottom-row";const i=document.createElement("button");i.className="cancel-button",i.textContent="Cancel",r.appendChild(i);const A=document.createElement("button");return A.className="delete-button",A.textContent="Delete",r.appendChild(A),n.appendChild(r),e.appendChild(n),e})();o.appendChild(C),document.querySelector(".delete-task-dialog").addEventListener("close",(()=>{document.body.style.overflow="auto"})),document.querySelector(".delete-task-dialog .cancel-button").addEventListener("click",(e=>{e.preventDefault(),D()})),document.querySelector(".delete-task-dialog .delete-button").addEventListener("click",(t=>{t.preventDefault(),e.deleteTask(n),D(),i()})),document.querySelector(".delete-task-dialog").addEventListener("keypress",(t=>{13===t.keyCode&&(t.preventDefault(),e.deleteTask(n),D(),i())})),r("Inbox")}}};(()=>{let e=Ae(),n=C();return{init:()=>{n.init(),e.init()}}})().init()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,