(()=>{"use strict";var e={177:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),a=t.n(o),d=t(645),r=t.n(d)()(a());r.push([e.id,".add-project-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 300px;\n    position: relative;\n    top: -30%;\n}\n\n.add-project-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.add-project-dialog > form {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.add-project-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n \n.add-project-dialog form-field {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n\n.add-project-dialog input {\n    height: 30px;\n    width: max(100%, 200px);\n    border-radius: 5px;\n    border: 1px solid #ddd;\n}\n\n.add-project-dialog input:focus {\n    outline: none;\n    border: 1px solid grey;\n}\n\n.add-project-dialog .error-message {\n    font-size: 14px;\n    color: red;\n    height: 14px;\n}\n\n.add-project-dialog .buttons {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.add-project-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.add-project-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.add-project-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.add-project-dialog .add-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.add-project-dialog .add-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.add-project-dialog .add-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.add-project-dialog .add-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n} \n\n\n\n","",{version:3,sources:["webpack://./src/modules/components/addProjectDialog/addProjectDialog.css"],names:[],mappings:"AAAA;IACI,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;IACZ,kBAAkB;IAClB,SAAS;AACb;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;;AAGA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;AACZ;;;AAGA;IACI,YAAY;IACZ,uBAAuB;IACvB,kBAAkB;IAClB,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,eAAe;IACf,UAAU;IACV,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,0CAA0C;IAC1C,eAAe;AACnB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,yBAAyB;IACzB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,uCAAuC;AAC3C",sourcesContent:[".add-project-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 300px;\n    position: relative;\n    top: -30%;\n}\n\n.add-project-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.add-project-dialog > form {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.add-project-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n \n.add-project-dialog form-field {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n\n.add-project-dialog input {\n    height: 30px;\n    width: max(100%, 200px);\n    border-radius: 5px;\n    border: 1px solid #ddd;\n}\n\n.add-project-dialog input:focus {\n    outline: none;\n    border: 1px solid grey;\n}\n\n.add-project-dialog .error-message {\n    font-size: 14px;\n    color: red;\n    height: 14px;\n}\n\n.add-project-dialog .buttons {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.add-project-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.add-project-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.add-project-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.add-project-dialog .add-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.add-project-dialog .add-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.add-project-dialog .add-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.add-project-dialog .add-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n} \n\n\n\n"],sourceRoot:""}]);const i=r},179:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),a=t.n(o),d=t(645),r=t.n(d)()(a());r.push([e.id,".add-task-button {\n    width: 100%;\n    text-align: left;\n    background: none;\n    border: none;\n    cursor: pointer;\n    color: #78716c;\n    font-size: 14px;\n    display: flex;\n    gap: 10px;\n    align-items: center;\n}\n\n.add-task-button > :first-child {\n    font-size: 25px;\n    display: flex;\n    align-items: center;\n}\n\n.add-task-button > :nth-child(2) {\n    display: flex;\n    align-items: center;\n}\n\n.add-task-button:hover {\n    color: #A16207;\n}\n\n.add-task-button-hidden {\n    display: none;\n}","",{version:3,sources:["webpack://./src/modules/components/addTaskButton/addTaskButton.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,gBAAgB;IAChB,gBAAgB;IAChB,YAAY;IACZ,eAAe;IACf,cAAc;IACd,eAAe;IACf,aAAa;IACb,SAAS;IACT,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,aAAa;AACjB",sourcesContent:[".add-task-button {\n    width: 100%;\n    text-align: left;\n    background: none;\n    border: none;\n    cursor: pointer;\n    color: #78716c;\n    font-size: 14px;\n    display: flex;\n    gap: 10px;\n    align-items: center;\n}\n\n.add-task-button > :first-child {\n    font-size: 25px;\n    display: flex;\n    align-items: center;\n}\n\n.add-task-button > :nth-child(2) {\n    display: flex;\n    align-items: center;\n}\n\n.add-task-button:hover {\n    color: #A16207;\n}\n\n.add-task-button-hidden {\n    display: none;\n}"],sourceRoot:""}]);const i=r},620:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),a=t.n(o),d=t(645),r=t.n(d)()(a());r.push([e.id,'.add-task-card {\n    width: 100%;\n    min-width: 400px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    border: 1px solid #9ca3af;\n    border-radius: 10px;\n    padding: 10px;\n}\n\n.add-task-card > :first-child {\n    width: 100%;\n    border: none;\n    outline: none;\n    font-weight: 900;\n}\n\n.add-task-card > :first-child[contenteditable]:empty:before {\n    content: "Task name";\n    color: #8e8e8e;\n}\n\n.add-task-card > :nth-child(2) {\n    width: 100%;\n    border: none;\n    outline: none;\n    font-size: 14px;\n    font-weight: 200;\n}\n\n.add-task-card > :nth-child(2)[contenteditable]:empty:before {\n    content: "Description";\n    color: #8e8e8e;\n}\n\n.add-task-card .middle-row {\n    display: flex;\n    gap: 30px;\n}\n\n.add-task-card .middle-row > * {\n    display: flex;\n    gap: 10px;\n    align-items: center;\n    padding-bottom: 5px;\n}\n\n/* Date picker */\n.add-task-card .middle-row input {\n    min-height: 25px;\n}\n\n/* Priority dropdown */\n.add-task-card .middle-row select {\n    min-height: 25px;\n}\n\n.add-task-card .bottom-row {\n    display: flex;\n    justify-content: space-between;\n    border-top: 1px solid #e5e7eb;\n    padding-top: 10px;\n}\n\n/* Project dropdown */\n.add-task-card .bottom-row select {\n    height: 30px;\n    text-align: center;\n    border: none;\n    outline: none;\n    border-radius: 5px;\n}\n\n.add-task-card .bottom-row select:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n/* The buttons at the end of card */\n.add-task-card .bottom-row > :last-child {\n    display: flex;\n    gap: 10px;\n}\n\n/* Cancel button */\n.add-task-card .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.add-task-card .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.add-task-card .cancel-button:active {\n    transform: scale(0.95);\n}\n\n/* Add button */\n.add-task-card .add-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.add-task-card .add-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.add-task-card .add-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.add-task-card .add-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n}',"",{version:3,sources:["webpack://./src/modules/components/addTaskCard/addTaskCard.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,yBAAyB;IACzB,mBAAmB;IACnB,aAAa;AACjB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,gBAAgB;AACpB;;AAEA;IACI,oBAAoB;IACpB,cAAc;AAClB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,sBAAsB;IACtB,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,aAAa;IACb,SAAS;IACT,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA,gBAAgB;AAChB;IACI,gBAAgB;AACpB;;AAEA,sBAAsB;AACtB;IACI,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,6BAA6B;IAC7B,iBAAiB;AACrB;;AAEA,qBAAqB;AACrB;IACI,YAAY;IACZ,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA,mCAAmC;AACnC;IACI,aAAa;IACb,SAAS;AACb;;AAEA,kBAAkB;AAClB;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,0CAA0C;IAC1C,eAAe;AACnB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA,eAAe;AACf;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,yBAAyB;IACzB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,uCAAuC;AAC3C",sourcesContent:['.add-task-card {\n    width: 100%;\n    min-width: 400px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    border: 1px solid #9ca3af;\n    border-radius: 10px;\n    padding: 10px;\n}\n\n.add-task-card > :first-child {\n    width: 100%;\n    border: none;\n    outline: none;\n    font-weight: 900;\n}\n\n.add-task-card > :first-child[contenteditable]:empty:before {\n    content: "Task name";\n    color: #8e8e8e;\n}\n\n.add-task-card > :nth-child(2) {\n    width: 100%;\n    border: none;\n    outline: none;\n    font-size: 14px;\n    font-weight: 200;\n}\n\n.add-task-card > :nth-child(2)[contenteditable]:empty:before {\n    content: "Description";\n    color: #8e8e8e;\n}\n\n.add-task-card .middle-row {\n    display: flex;\n    gap: 30px;\n}\n\n.add-task-card .middle-row > * {\n    display: flex;\n    gap: 10px;\n    align-items: center;\n    padding-bottom: 5px;\n}\n\n/* Date picker */\n.add-task-card .middle-row input {\n    min-height: 25px;\n}\n\n/* Priority dropdown */\n.add-task-card .middle-row select {\n    min-height: 25px;\n}\n\n.add-task-card .bottom-row {\n    display: flex;\n    justify-content: space-between;\n    border-top: 1px solid #e5e7eb;\n    padding-top: 10px;\n}\n\n/* Project dropdown */\n.add-task-card .bottom-row select {\n    height: 30px;\n    text-align: center;\n    border: none;\n    outline: none;\n    border-radius: 5px;\n}\n\n.add-task-card .bottom-row select:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n/* The buttons at the end of card */\n.add-task-card .bottom-row > :last-child {\n    display: flex;\n    gap: 10px;\n}\n\n/* Cancel button */\n.add-task-card .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.add-task-card .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.add-task-card .cancel-button:active {\n    transform: scale(0.95);\n}\n\n/* Add button */\n.add-task-card .add-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.add-task-card .add-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.add-task-card .add-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.add-task-card .add-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n}'],sourceRoot:""}]);const i=r},438:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),a=t.n(o),d=t(645),r=t.n(d)()(a());r.push([e.id,".add-task-dialog {\n    position: relative;\n    top: -30%;\n    padding: 0;\n    border: none;\n    border-radius: 10px;\n}\n\n.add-task-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}","",{version:3,sources:["webpack://./src/modules/components/addTaskDialog/addTaskDialog.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,SAAS;IACT,UAAU;IACV,YAAY;IACZ,mBAAmB;AACvB;;AAEA;IACI,oCAAoC;AACxC",sourcesContent:[".add-task-dialog {\n    position: relative;\n    top: -30%;\n    padding: 0;\n    border: none;\n    border-radius: 10px;\n}\n\n.add-task-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}"],sourceRoot:""}]);const i=r},914:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),a=t.n(o),d=t(645),r=t.n(d)()(a());r.push([e.id,".delete-project-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 400px;\n    position: relative;\n    top: -30%;\n}\n\n.delete-project-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.delete-project-dialog > div {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.delete-project-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.delete-project-dialog .message span:first-child {\n    font-weight: 900;\n}\n\n.delete-project-dialog .bottom-row {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.delete-project-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.delete-project-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.delete-project-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.delete-project-dialog .delete-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.delete-project-dialog .delete-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.delete-project-dialog .delete-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.delete-project-dialog .delete-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n}\n\n\n\n\n","",{version:3,sources:["webpack://./src/modules/components/deleteProjectDialog/deleteProjectDialog.css"],names:[],mappings:"AAAA;IACI,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;IACZ,kBAAkB;IAClB,SAAS;AACb;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,0CAA0C;IAC1C,eAAe;AACnB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,yBAAyB;IACzB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,uCAAuC;AAC3C",sourcesContent:[".delete-project-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 400px;\n    position: relative;\n    top: -30%;\n}\n\n.delete-project-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.delete-project-dialog > div {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.delete-project-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.delete-project-dialog .message span:first-child {\n    font-weight: 900;\n}\n\n.delete-project-dialog .bottom-row {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.delete-project-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.delete-project-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.delete-project-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.delete-project-dialog .delete-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.delete-project-dialog .delete-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.delete-project-dialog .delete-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.delete-project-dialog .delete-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n}\n\n\n\n\n"],sourceRoot:""}]);const i=r},934:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),a=t.n(o),d=t(645),r=t.n(d)()(a());r.push([e.id,".delete-task-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 400px;\n    position: relative;\n    top: -30%;\n}\n\n.delete-task-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.delete-task-dialog > div {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.delete-task-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.delete-task-dialog .message {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.delete-task-dialog .message span:first-child {\n    font-weight: 900;\n}\n\n.delete-task-dialog .bottom-row {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.delete-task-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.delete-task-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.delete-task-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.delete-task-dialog .delete-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.delete-task-dialog .delete-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.delete-task-dialog .delete-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.delete-task-dialog .delete-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n}\n\n\n\n\n","",{version:3,sources:["webpack://./src/modules/components/deleteTaskDialog/deleteTaskDialog.css"],names:[],mappings:"AAAA;IACI,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;IACZ,kBAAkB;IAClB,SAAS;AACb;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;IACnB,gBAAgB;IAChB,uBAAuB;AAC3B;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,0CAA0C;IAC1C,eAAe;AACnB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,yBAAyB;IACzB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,uCAAuC;AAC3C",sourcesContent:[".delete-task-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 400px;\n    position: relative;\n    top: -30%;\n}\n\n.delete-task-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.delete-task-dialog > div {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.delete-task-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.delete-task-dialog .message {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.delete-task-dialog .message span:first-child {\n    font-weight: 900;\n}\n\n.delete-task-dialog .bottom-row {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.delete-task-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.delete-task-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.delete-task-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.delete-task-dialog .delete-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.delete-task-dialog .delete-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.delete-task-dialog .delete-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.delete-task-dialog .delete-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n}\n\n\n\n\n"],sourceRoot:""}]);const i=r},930:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),a=t.n(o),d=t(645),r=t.n(d)()(a());r.push([e.id,".edit-project-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 300px;\n    position: relative;\n    top: -30%;\n}\n\n.edit-project-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.edit-project-dialog > form {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.edit-project-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n \n.edit-project-dialog form-field {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n\n.edit-project-dialog input {\n    height: 30px;\n    width: max(100%, 200px);\n    border-radius: 5px;\n    border: 1px solid #ddd;\n}\n\n.edit-project-dialog input:focus {\n    outline: none;\n    border: 1px solid grey;\n}\n\n.edit-project-dialog .error-message {\n    font-size: 14px;\n    color: red;\n    height: 14px;\n}\n\n.edit-project-dialog .buttons {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.edit-project-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.edit-project-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.edit-project-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.edit-project-dialog .save-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.edit-project-dialog .save-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.edit-project-dialog .save-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.edit-project-dialog .save-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n} \n\n\n\n","",{version:3,sources:["webpack://./src/modules/components/editProjectDialog/editProjectDialog.css"],names:[],mappings:"AAAA;IACI,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;IACZ,kBAAkB;IAClB,SAAS;AACb;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;;AAGA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;AACZ;;;AAGA;IACI,YAAY;IACZ,uBAAuB;IACvB,kBAAkB;IAClB,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,eAAe;IACf,UAAU;IACV,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,0CAA0C;IAC1C,eAAe;AACnB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,yBAAyB;IACzB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,uCAAuC;AAC3C",sourcesContent:[".edit-project-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 300px;\n    position: relative;\n    top: -30%;\n}\n\n.edit-project-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.edit-project-dialog > form {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.edit-project-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n \n.edit-project-dialog form-field {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n\n.edit-project-dialog input {\n    height: 30px;\n    width: max(100%, 200px);\n    border-radius: 5px;\n    border: 1px solid #ddd;\n}\n\n.edit-project-dialog input:focus {\n    outline: none;\n    border: 1px solid grey;\n}\n\n.edit-project-dialog .error-message {\n    font-size: 14px;\n    color: red;\n    height: 14px;\n}\n\n.edit-project-dialog .buttons {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.edit-project-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.edit-project-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.edit-project-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.edit-project-dialog .save-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.edit-project-dialog .save-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.edit-project-dialog .save-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.edit-project-dialog .save-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n} \n\n\n\n"],sourceRoot:""}]);const i=r},225:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),a=t.n(o),d=t(645),r=t.n(d)()(a());r.push([e.id,'.edit-task-dialog {\n    position: relative;\n    top: -30%;\n    min-width: 500px;\n    max-width: 500px;\n    padding: 10px;\n    border-radius: 10px;\n    border: 1px solid grey;\n}\n\n.edit-task-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.edit-task-dialog > div {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    padding: 10px;\n}\n\n.edit-task-dialog > div > :first-child {\n    width: 100%;\n    border: none;\n    outline: none;\n    font-weight: 900;\n}\n\n.edit-task-dialog > div > :first-child[contenteditable]:empty:before {\n    content: "Task name";\n    color: #8e8e8e;\n}\n\n.edit-task-dialog > div > :nth-child(2) {\n    width: 100%;\n    border: none;\n    outline: none;\n    font-size: 14px;\n    font-weight: 200;\n}\n\n.edit-task-dialog > div > :nth-child(2)[contenteditable]:empty:before {\n    content: "Description";\n    color: #8e8e8e;\n}\n\n.edit-task-dialog > div .middle-row {\n    display: flex;\n    gap: 30px;\n}\n\n.edit-task-dialog > div .middle-row > * {\n    display: flex;\n    gap: 10px;\n    align-items: center;\n    padding-bottom: 5px;\n}\n\n/* Date picker */\n.edit-task-dialog > div .middle-row input {\n    min-height: 25px;\n}\n\n/* Priority dropdown */\n.edit-task-dialog > div .middle-row select {\n    min-height: 25px;\n}\n\n.edit-task-dialog > div .bottom-row {\n    display: flex;\n    justify-content: space-between;\n    border-top: 1px solid #e5e7eb;\n    padding-top: 10px;\n}\n\n/* Project dropdown */\n.edit-task-dialog > div .bottom-row select {\n    height: 30px;\n    text-align: center;\n    border: none;\n    outline: none;\n    border-radius: 5px;\n}\n\n.edit-task-dialog > div .bottom-row select:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n/* The buttons at the end of card */\n.edit-task-dialog > div .bottom-row > :last-child {\n    display: flex;\n    gap: 10px;\n}\n\n/* Cancel button */\n.edit-task-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.edit-task-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.edit-task-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n/* Save button */\n.edit-task-dialog .save-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.edit-task-dialog .save-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.edit-task-dialog .save-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.edit-task-dialog .save-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n}',"",{version:3,sources:["webpack://./src/modules/components/editTaskDialog/editTaskDialog.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,SAAS;IACT,gBAAgB;IAChB,gBAAgB;IAChB,aAAa;IACb,mBAAmB;IACnB,sBAAsB;AAC1B;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,WAAW;IACX,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,aAAa;AACjB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,gBAAgB;AACpB;;AAEA;IACI,oBAAoB;IACpB,cAAc;AAClB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,sBAAsB;IACtB,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,aAAa;IACb,SAAS;IACT,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA,gBAAgB;AAChB;IACI,gBAAgB;AACpB;;AAEA,sBAAsB;AACtB;IACI,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,6BAA6B;IAC7B,iBAAiB;AACrB;;AAEA,qBAAqB;AACrB;IACI,YAAY;IACZ,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA,mCAAmC;AACnC;IACI,aAAa;IACb,SAAS;AACb;;AAEA,kBAAkB;AAClB;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,0CAA0C;IAC1C,eAAe;AACnB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA,gBAAgB;AAChB;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,yBAAyB;IACzB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,uCAAuC;AAC3C",sourcesContent:['.edit-task-dialog {\n    position: relative;\n    top: -30%;\n    min-width: 500px;\n    max-width: 500px;\n    padding: 10px;\n    border-radius: 10px;\n    border: 1px solid grey;\n}\n\n.edit-task-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.edit-task-dialog > div {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    padding: 10px;\n}\n\n.edit-task-dialog > div > :first-child {\n    width: 100%;\n    border: none;\n    outline: none;\n    font-weight: 900;\n}\n\n.edit-task-dialog > div > :first-child[contenteditable]:empty:before {\n    content: "Task name";\n    color: #8e8e8e;\n}\n\n.edit-task-dialog > div > :nth-child(2) {\n    width: 100%;\n    border: none;\n    outline: none;\n    font-size: 14px;\n    font-weight: 200;\n}\n\n.edit-task-dialog > div > :nth-child(2)[contenteditable]:empty:before {\n    content: "Description";\n    color: #8e8e8e;\n}\n\n.edit-task-dialog > div .middle-row {\n    display: flex;\n    gap: 30px;\n}\n\n.edit-task-dialog > div .middle-row > * {\n    display: flex;\n    gap: 10px;\n    align-items: center;\n    padding-bottom: 5px;\n}\n\n/* Date picker */\n.edit-task-dialog > div .middle-row input {\n    min-height: 25px;\n}\n\n/* Priority dropdown */\n.edit-task-dialog > div .middle-row select {\n    min-height: 25px;\n}\n\n.edit-task-dialog > div .bottom-row {\n    display: flex;\n    justify-content: space-between;\n    border-top: 1px solid #e5e7eb;\n    padding-top: 10px;\n}\n\n/* Project dropdown */\n.edit-task-dialog > div .bottom-row select {\n    height: 30px;\n    text-align: center;\n    border: none;\n    outline: none;\n    border-radius: 5px;\n}\n\n.edit-task-dialog > div .bottom-row select:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n/* The buttons at the end of card */\n.edit-task-dialog > div .bottom-row > :last-child {\n    display: flex;\n    gap: 10px;\n}\n\n/* Cancel button */\n.edit-task-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.edit-task-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.edit-task-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n/* Save button */\n.edit-task-dialog .save-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.edit-task-dialog .save-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.edit-task-dialog .save-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.edit-task-dialog .save-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n}'],sourceRoot:""}]);const i=r},718:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),a=t.n(o),d=t(645),r=t.n(d)()(a());r.push([e.id,".inbox-page {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    gap: 50px;\n}\n\n.inbox-content {\n    display: flex;\n    flex-direction: column;\n    gap: 50px;\n    width: 60%;\n    padding: 20px 0;\n}\n\n.inbox-header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.priority-section {\n    width: 100%;\n}\n\n.priority-header {\n    font-weight: 900;\n}\n\n.add-task-button {\n    width: 100%;\n    text-align: left;\n    background: none;\n    border: none;\n    cursor: pointer;\n    color: #78716c;\n    font-size: 14px;\n    display: flex;\n    gap: 10px;\n    align-items: center;\n}\n\n.add-task-button > :first-child {\n    font-size: 25px;\n    display: flex;\n    align-items: center;\n}\n\n.add-task-button > :nth-child(2) {\n    display: flex;\n    align-items: center;\n}\n\n.add-task-button:hover {\n    color: #A16207;\n}\n\n.add-task-button-hidden {\n    display: none;\n}\n","",{version:3,sources:["webpack://./src/modules/components/inboxPage/inboxPage.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,UAAU;IACV,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,WAAW;IACX,gBAAgB;IAChB,gBAAgB;IAChB,YAAY;IACZ,eAAe;IACf,cAAc;IACd,eAAe;IACf,aAAa;IACb,SAAS;IACT,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,aAAa;AACjB",sourcesContent:[".inbox-page {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    gap: 50px;\n}\n\n.inbox-content {\n    display: flex;\n    flex-direction: column;\n    gap: 50px;\n    width: 60%;\n    padding: 20px 0;\n}\n\n.inbox-header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.priority-section {\n    width: 100%;\n}\n\n.priority-header {\n    font-weight: 900;\n}\n\n.add-task-button {\n    width: 100%;\n    text-align: left;\n    background: none;\n    border: none;\n    cursor: pointer;\n    color: #78716c;\n    font-size: 14px;\n    display: flex;\n    gap: 10px;\n    align-items: center;\n}\n\n.add-task-button > :first-child {\n    font-size: 25px;\n    display: flex;\n    align-items: center;\n}\n\n.add-task-button > :nth-child(2) {\n    display: flex;\n    align-items: center;\n}\n\n.add-task-button:hover {\n    color: #A16207;\n}\n\n.add-task-button-hidden {\n    display: none;\n}\n"],sourceRoot:""}]);const i=r},404:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),a=t.n(o),d=t(645),r=t.n(d)()(a());r.push([e.id,".nav-bar {\n    padding: 20px;\n    background-color: #A16207;\n    color: #e7e5e4;\n    grid-column: 1 / 3;\n}\n\n.logo {\n    width: max-content;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    cursor: pointer;\n}\n\n.logo > img {\n    width: 50px;\n}\n\n.logo > div {\n    font-size: 40px;\n    font-weight: 900;\n}\n\n","",{version:3,sources:["webpack://./src/modules/components/navBar/navBar.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,yBAAyB;IACzB,cAAc;IACd,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,eAAe;AACnB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB",sourcesContent:[".nav-bar {\n    padding: 20px;\n    background-color: #A16207;\n    color: #e7e5e4;\n    grid-column: 1 / 3;\n}\n\n.logo {\n    width: max-content;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    cursor: pointer;\n}\n\n.logo > img {\n    width: 50px;\n}\n\n.logo > div {\n    font-size: 40px;\n    font-weight: 900;\n}\n\n"],sourceRoot:""}]);const i=r},386:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),a=t.n(o),d=t(645),r=t.n(d)()(a());r.push([e.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]);const i=r},332:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),a=t.n(o),d=t(645),r=t.n(d)()(a());r.push([e.id,".side-bar {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    background-color: rgba(209, 213, 219, 0.2);\n    padding: 30px 20px;\n}\n\n.default-items {\n    display: flex;\n    flex-direction: column;\n}\n\n.projects {\n    display: flex;\n    flex-direction: column;\n}\n\n.projects-header {\n    display: flex;  \n    justify-content: space-between; \n    cursor: pointer;\n    padding: 5px 5px 5px 0;\n}\n\n.projects-header:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.projects-header > div {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.add-project-button {\n    background: none;\n    border: none;\n    font-size: 20px;\n    cursor: pointer;\n    border-radius: 2px;\n}\n\n.add-project-button:hover {\n    background-color: white;\n}\n\n","",{version:3,sources:["webpack://./src/modules/components/sideBar/sideBar.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,0CAA0C;IAC1C,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,eAAe;IACf,sBAAsB;AAC1B;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,YAAY;IACZ,eAAe;IACf,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,uBAAuB;AAC3B",sourcesContent:[".side-bar {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    background-color: rgba(209, 213, 219, 0.2);\n    padding: 30px 20px;\n}\n\n.default-items {\n    display: flex;\n    flex-direction: column;\n}\n\n.projects {\n    display: flex;\n    flex-direction: column;\n}\n\n.projects-header {\n    display: flex;  \n    justify-content: space-between; \n    cursor: pointer;\n    padding: 5px 5px 5px 0;\n}\n\n.projects-header:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.projects-header > div {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.add-project-button {\n    background: none;\n    border: none;\n    font-size: 20px;\n    cursor: pointer;\n    border-radius: 2px;\n}\n\n.add-project-button:hover {\n    background-color: white;\n}\n\n"],sourceRoot:""}]);const i=r},540:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),a=t.n(o),d=t(645),r=t.n(d)()(a());r.push([e.id,".sidebar-item {\n    display: flex;\n    align-items: center;\n    padding: 5px;\n    cursor: pointer;\n    border-radius: 5px;\n}\n\n.sidebar-item:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.sidebar-item-active {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.sidebar-item > .item-content > img {\n    width: 25px;\n}\n\n.sidebar-item > .item-content {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    width: 100%;\n}\n\n.sidebar-item > .item-buttons {\n    display: flex;\n    gap: 5px;\n    visibility: hidden;\n}\n\n.sidebar-item:hover .item-buttons {\n    visibility: visible;\n}\n\n.sidebar-item > .item-buttons > button {\n    height: 20px;\n    width: 20px;\n    background-color: transparent;\n    padding: 0;\n    border: none;\n    cursor: pointer;\n    border-radius: 2px;\n}\n\n.sidebar-item > .item-buttons > button:hover {\n    background-color: white;\n}\n\n.sidebar-item > .item-buttons > button > img {\n    width: 15px;\n    height: 15px;\n}","",{version:3,sources:["webpack://./src/modules/components/sideBarItem/sideBarItem.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;IACnB,YAAY;IACZ,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,WAAW;AACf;;AAEA;IACI,aAAa;IACb,QAAQ;IACR,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,6BAA6B;IAC7B,UAAU;IACV,YAAY;IACZ,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,WAAW;IACX,YAAY;AAChB",sourcesContent:[".sidebar-item {\n    display: flex;\n    align-items: center;\n    padding: 5px;\n    cursor: pointer;\n    border-radius: 5px;\n}\n\n.sidebar-item:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.sidebar-item-active {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.sidebar-item > .item-content > img {\n    width: 25px;\n}\n\n.sidebar-item > .item-content {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    width: 100%;\n}\n\n.sidebar-item > .item-buttons {\n    display: flex;\n    gap: 5px;\n    visibility: hidden;\n}\n\n.sidebar-item:hover .item-buttons {\n    visibility: visible;\n}\n\n.sidebar-item > .item-buttons > button {\n    height: 20px;\n    width: 20px;\n    background-color: transparent;\n    padding: 0;\n    border: none;\n    cursor: pointer;\n    border-radius: 2px;\n}\n\n.sidebar-item > .item-buttons > button:hover {\n    background-color: white;\n}\n\n.sidebar-item > .item-buttons > button > img {\n    width: 15px;\n    height: 15px;\n}"],sourceRoot:""}]);const i=r},258:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),a=t.n(o),d=t(645),r=t.n(d)()(a());r.push([e.id,".task-card {\n    display: grid;\n    grid-template-columns: max-content minmax(70px, 1fr) max-content;\n    grid-template-rows: max-content;\n    gap: 10px;\n    border-bottom: 0.5px solid #ddd;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    cursor: pointer;\n    background-color: white;\n}\n\n.task-card .check-button {\n    aspect-ratio: 1 / 1;\n    width: 10px;\n    border-radius: 50%;\n    cursor: pointer;\n    border: 2px solid #A16207;\n    background-color: rgba(161, 98, 7, 0.1);\n}\n\n.task-card .check-button:hover {\n    background-color: rgba(161, 98, 7, 0.5);\n}\n\n.task-card .check-button:active {\n    transform: scale(1.2);\n}\n\n.task-card .middle-column {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n/* Name field */\n.task-card .middle-column > :first-child {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n/* Description field */\n.task-card .middle-column > :nth-child(2) {\n    color: #666666;\n    font-size: 14px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    /* height: 16px; */\n}\n\n.task-card .bottom-row {\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n}\n\n.task-card .bottom-row .left {\n    display: flex;\n    gap: 15px;\n    flex-wrap: wrap;\n}\n\n.task-card .priority {\n    display: flex;\n    align-items: center;\n    color: #666666;\n    font-size: 14px;\n}\n\n.task-card .due-date {\n    display: flex;\n    gap: 5px;\n    color: #666666;\n    font-size: 14px;\n}\n\n.task-card .due-date > :first-child {\n    width: 15px;\n}\n\n.task-card .due-date > :nth-child(2) {\n    display: flex;\n    align-items: center;\n}\n\n.task-card .project {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    font-size: 14px;\n    color: #666666;\n}\n\n.task-card .project img {\n    width: 20px;\n}\n\n.task-card .delete-button {\n    height: 30px;\n    width: 30px;\n    background-color: transparent;\n    padding: 0;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    visibility: hidden;\n}\n\n.task-card .delete-button:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.task-card:hover .delete-button {\n    visibility: visible;\n}\n\n.task-card .delete-button > img {\n    width: 20px;\n    height: 20px;\n}\n\n","",{version:3,sources:["webpack://./src/modules/components/taskCard/taskCard.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,gEAAgE;IAChE,+BAA+B;IAC/B,SAAS;IACT,+BAA+B;IAC/B,iBAAiB;IACjB,oBAAoB;IACpB,eAAe;IACf,uBAAuB;AAC3B;;AAEA;IACI,mBAAmB;IACnB,WAAW;IACX,kBAAkB;IAClB,eAAe;IACf,yBAAyB;IACzB,uCAAuC;AAC3C;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA,eAAe;AACf;IACI,mBAAmB;IACnB,gBAAgB;IAChB,uBAAuB;AAC3B;;AAEA,sBAAsB;AACtB;IACI,cAAc;IACd,eAAe;IACf,mBAAmB;IACnB,gBAAgB;IAChB,uBAAuB;IACvB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,QAAQ;IACR,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,QAAQ;IACR,eAAe;IACf,cAAc;AAClB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,6BAA6B;IAC7B,UAAU;IACV,YAAY;IACZ,kBAAkB;IAClB,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB",sourcesContent:[".task-card {\n    display: grid;\n    grid-template-columns: max-content minmax(70px, 1fr) max-content;\n    grid-template-rows: max-content;\n    gap: 10px;\n    border-bottom: 0.5px solid #ddd;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    cursor: pointer;\n    background-color: white;\n}\n\n.task-card .check-button {\n    aspect-ratio: 1 / 1;\n    width: 10px;\n    border-radius: 50%;\n    cursor: pointer;\n    border: 2px solid #A16207;\n    background-color: rgba(161, 98, 7, 0.1);\n}\n\n.task-card .check-button:hover {\n    background-color: rgba(161, 98, 7, 0.5);\n}\n\n.task-card .check-button:active {\n    transform: scale(1.2);\n}\n\n.task-card .middle-column {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n/* Name field */\n.task-card .middle-column > :first-child {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n/* Description field */\n.task-card .middle-column > :nth-child(2) {\n    color: #666666;\n    font-size: 14px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    /* height: 16px; */\n}\n\n.task-card .bottom-row {\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n}\n\n.task-card .bottom-row .left {\n    display: flex;\n    gap: 15px;\n    flex-wrap: wrap;\n}\n\n.task-card .priority {\n    display: flex;\n    align-items: center;\n    color: #666666;\n    font-size: 14px;\n}\n\n.task-card .due-date {\n    display: flex;\n    gap: 5px;\n    color: #666666;\n    font-size: 14px;\n}\n\n.task-card .due-date > :first-child {\n    width: 15px;\n}\n\n.task-card .due-date > :nth-child(2) {\n    display: flex;\n    align-items: center;\n}\n\n.task-card .project {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    font-size: 14px;\n    color: #666666;\n}\n\n.task-card .project img {\n    width: 20px;\n}\n\n.task-card .delete-button {\n    height: 30px;\n    width: 30px;\n    background-color: transparent;\n    padding: 0;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    visibility: hidden;\n}\n\n.task-card .delete-button:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.task-card:hover .delete-button {\n    visibility: visible;\n}\n\n.task-card .delete-button > img {\n    width: 20px;\n    height: 20px;\n}\n\n"],sourceRoot:""}]);const i=r},773:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),a=t.n(o),d=t(645),r=t.n(d)()(a());r.push([e.id,".today-page {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    gap: 50px;\n}\n\n.today-page .wrapper {\n    display: flex;\n    flex-direction: column;\n    gap: 50px;\n    width: 60%;\n    padding: 20px 0;\n}\n\n.today-page .header {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n}\n\n.today-page .header > :first-child {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.today-page .header > :nth-child(2) {\n    font-size: 16px;\n    color: grey;\n}\n\n.today-page .overdue-section .header {\n    font-weight: 900;\n}\n\n.today-page .today-section .header {\n    font-weight: 900;\n}","",{version:3,sources:["webpack://./src/modules/components/todayPage/todayPage.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,UAAU;IACV,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,eAAe;IACf,WAAW;AACf;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;AACpB",sourcesContent:[".today-page {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    gap: 50px;\n}\n\n.today-page .wrapper {\n    display: flex;\n    flex-direction: column;\n    gap: 50px;\n    width: 60%;\n    padding: 20px 0;\n}\n\n.today-page .header {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n}\n\n.today-page .header > :first-child {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.today-page .header > :nth-child(2) {\n    font-size: 16px;\n    color: grey;\n}\n\n.today-page .overdue-section .header {\n    font-weight: 900;\n}\n\n.today-page .today-section .header {\n    font-weight: 900;\n}"],sourceRoot:""}]);const i=r},627:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),a=t.n(o),d=t(645),r=t.n(d)()(a());r.push([e.id,".upcoming-page {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n}\n\n.upcoming-page .wrapper {\n    width: 90%;\n    padding: 20px 0;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.upcoming-page .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.upcoming-page .header .date {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.upcoming-page .header .buttons {\n    display: flex;\n    gap: 10px;\n}\n\n.upcoming-page .header .arrow-buttons > button {\n    height: 26px;\n    width: 28px;\n    background-color: transparent;\n    color: grey;\n    border-top: 1px solid grey;\n    border-bottom: 1px solid grey;\n    cursor: pointer;\n}\n.upcoming-page .header .arrow-buttons > button:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.upcoming-page .header .arrow-buttons > button:active {\n    background-color: rgba(115, 115, 115, 0.5);\n}\n\n.upcoming-page .back-button {\n    border-left: 1px solid grey;\n    border-right: 0.5px solid grey;\n    border-radius: 3px 0 0 3px;\n}\n\n.upcoming-page .forward-button {\n    border-right: 1px solid grey;\n    border-left: none;\n    border-radius: 0 3px 3px 0;\n}\n\n.upcoming-page .today-button {\n    height: 26px;\n    width: 60px;\n    background-color: transparent;\n    border: 1px solid grey;\n    border-radius: 3px;\n    color: grey;\n    cursor: pointer;\n}\n\n.upcoming-page .today-button:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.upcoming-page .today-button:active {\n    background-color: rgba(115, 115, 115, 0.5);\n}\n\n.upcoming-page .calendar {\n    display: flex;\n}\n\n.upcoming-page .calendar .column {\n    flex-grow: 1;\n    flex-basis: 0;\n    min-width: 140px;\n    display: flex;\n    flex-direction: column;\n}\n\n.upcoming-page .calendar .column .header {\n    display: flex;\n    flex-direction: column;\n    display: flex;\n    gap: 5px;\n    border-bottom: 0.5px solid #ddd;\n    padding-bottom: 10px;\n}\n\n.upcoming-page .calendar .column .header > :nth-child(2) {\n    font-weight: 700;\n}\n\n.upcoming-page .calendar .column .tasks {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    padding: 5px;\n}\n\n","",{version:3,sources:["webpack://./src/modules/components/upcomingPage/upcomingPage.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,uBAAuB;AAC3B;;AAEA;IACI,UAAU;IACV,eAAe;IACf,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,6BAA6B;IAC7B,WAAW;IACX,0BAA0B;IAC1B,6BAA6B;IAC7B,eAAe;AACnB;AACA;IACI,0CAA0C;AAC9C;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,2BAA2B;IAC3B,8BAA8B;IAC9B,0BAA0B;AAC9B;;AAEA;IACI,4BAA4B;IAC5B,iBAAiB;IACjB,0BAA0B;AAC9B;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,6BAA6B;IAC7B,sBAAsB;IACtB,kBAAkB;IAClB,WAAW;IACX,eAAe;AACnB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,gBAAgB;IAChB,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,aAAa;IACb,QAAQ;IACR,+BAA+B;IAC/B,oBAAoB;AACxB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,YAAY;AAChB",sourcesContent:[".upcoming-page {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n}\n\n.upcoming-page .wrapper {\n    width: 90%;\n    padding: 20px 0;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.upcoming-page .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.upcoming-page .header .date {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.upcoming-page .header .buttons {\n    display: flex;\n    gap: 10px;\n}\n\n.upcoming-page .header .arrow-buttons > button {\n    height: 26px;\n    width: 28px;\n    background-color: transparent;\n    color: grey;\n    border-top: 1px solid grey;\n    border-bottom: 1px solid grey;\n    cursor: pointer;\n}\n.upcoming-page .header .arrow-buttons > button:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.upcoming-page .header .arrow-buttons > button:active {\n    background-color: rgba(115, 115, 115, 0.5);\n}\n\n.upcoming-page .back-button {\n    border-left: 1px solid grey;\n    border-right: 0.5px solid grey;\n    border-radius: 3px 0 0 3px;\n}\n\n.upcoming-page .forward-button {\n    border-right: 1px solid grey;\n    border-left: none;\n    border-radius: 0 3px 3px 0;\n}\n\n.upcoming-page .today-button {\n    height: 26px;\n    width: 60px;\n    background-color: transparent;\n    border: 1px solid grey;\n    border-radius: 3px;\n    color: grey;\n    cursor: pointer;\n}\n\n.upcoming-page .today-button:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.upcoming-page .today-button:active {\n    background-color: rgba(115, 115, 115, 0.5);\n}\n\n.upcoming-page .calendar {\n    display: flex;\n}\n\n.upcoming-page .calendar .column {\n    flex-grow: 1;\n    flex-basis: 0;\n    min-width: 140px;\n    display: flex;\n    flex-direction: column;\n}\n\n.upcoming-page .calendar .column .header {\n    display: flex;\n    flex-direction: column;\n    display: flex;\n    gap: 5px;\n    border-bottom: 0.5px solid #ddd;\n    padding-bottom: 10px;\n}\n\n.upcoming-page .calendar .column .header > :nth-child(2) {\n    font-weight: 700;\n}\n\n.upcoming-page .calendar .column .tasks {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    padding: 5px;\n}\n\n"],sourceRoot:""}]);const i=r},426:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),a=t.n(o),d=t(645),r=t.n(d)()(a());r.push([e.id,"* {\n    /* Fix issue with extra space on the side when adding padding */\n    -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */\n    -moz-box-sizing: border-box;    /* Firefox, other Gecko */\n    box-sizing: border-box;         /* Opera/IE 8+ */\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 300px minmax(0, 1fr);\n    grid-template-rows: max-content 1fr;\n    min-height: 100vh;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,+DAA+D;IAC/D,8BAA8B,EAAE,gCAAgC;IAChE,2BAA2B,KAAK,yBAAyB;IACzD,sBAAsB,UAAU,gBAAgB;AACpD;;AAEA;IACI,SAAS;IACT,UAAU;IACV,aAAa;IACb,2CAA2C;IAC3C,mCAAmC;IACnC,iBAAiB;AACrB",sourcesContent:["* {\n    /* Fix issue with extra space on the side when adding padding */\n    -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */\n    -moz-box-sizing: border-box;    /* Firefox, other Gecko */\n    box-sizing: border-box;         /* Opera/IE 8+ */\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 300px minmax(0, 1fr);\n    grid-template-rows: max-content 1fr;\n    min-height: 100vh;\n}"],sourceRoot:""}]);const i=r},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,a,d){"string"==typeof e&&(e=[[null,e,void 0]]);var r={};if(o)for(var i=0;i<this.length;i++){var A=this[i][0];null!=A&&(r[A]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);o&&r[l[0]]||(void 0!==d&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=d),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),d="/*# ".concat(a," */");return[n].concat([d]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var d={},r=[],i=0;i<e.length;i++){var A=e[i],c=o.base?A[0]+o.base:A[0],l=d[c]||0,s="".concat(c," ").concat(l);d[c]=l+1;var p=t(s),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var m=a(u,o);o.byIndex=i,n.splice(i,0,{identifier:s,updater:m,references:1})}r.push(s)}return r}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var d=o(e=e||[],a=a||{});return function(e){e=e||[];for(var r=0;r<d.length;r++){var i=t(d[r]);n[i].references--}for(var A=o(e,a),c=0;c<d.length;c++){var l=t(d[c]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}d=A}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var d=t.sourceMap;d&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(d))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var a=n[o];if(void 0!==a)return a.exports;var d=n[o]={id:o,exports:{}};return e[o](d,d.exports,t),d.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");if(o.length)for(var a=o.length-1;a>-1&&!e;)e=o[a--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),o=t(795),a=t.n(o),d=t(569),r=t.n(d),i=t(565),A=t.n(i),c=t(216),l=t.n(c),s=t(589),p=t.n(s),u=t(426),m={};m.styleTagTransform=p(),m.setAttributes=A(),m.insert=r().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=l(),n()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const g=e=>{const n=new Date(e);return 0!==e.getDay()?n.setDate(e.getDate()-(e.getDay()-1)):n.setDate(e.getDate()-6),n.setHours(0),n.setMinutes(0),n.setSeconds(0),n.setMilliseconds(0),n},C=()=>{const e=e=>{let n=t();n.push(e),localStorage.setItem("projects",JSON.stringify(n))},n=e=>{const n=JSON.parse(localStorage.getItem("projects")).filter((n=>n.name===e));return 0===n.length?{}:n[0]},t=()=>JSON.parse(localStorage.getItem("projects")),o=()=>JSON.parse(localStorage.getItem("tasks"));return{init:()=>{localStorage.getItem("projects")||localStorage.setItem("projects",JSON.stringify([])),"{}"===JSON.stringify(n("Inbox"))&&e({id:"Inbox",name:"Inbox",timeCreated:(new Date).getTime()}),localStorage.getItem("tasks")||localStorage.setItem("tasks",JSON.stringify([]))},getProjectById:e=>{const n=JSON.parse(localStorage.getItem("projects")).filter((n=>n.id===e));return 0===n.length?{}:n[0]},getProjectByName:n,getAllProjects:t,createProject:e,updateProject:(e,n)=>{let o=t();for(let t=0;t<o.length;t++)o[t].id===e.id&&(o[t]=n);localStorage.setItem("projects",JSON.stringify(o))},deleteProject:e=>{let n=t();n=n.filter((n=>n.id!==e)),localStorage.setItem("projects",JSON.stringify(n))},createTask:e=>{let n=o();n.push(e),localStorage.setItem("tasks",JSON.stringify(n))},getAllTasks:o,getTasksByProjectId:e=>o().filter((n=>n.projectId===e)),getTaskById:e=>{const n=o();for(let t of n)if(t.id===e)return t;return{}},getOverdueTasks:e=>{let n=o();return n=n.filter((n=>n.dueDate<e.getTime())),n},getTasksByDueDate:e=>{let n=o();return n=n.filter((n=>{const t=new Date(n.dueDate);return t.getDate()===e.getDate()&&t.getMonth()===e.getMonth()&&t.getFullYear()===e.getFullYear()})),n},getTasksOfTheWeek:e=>{let n=o();const t=g(e),a=new Date(t);return a.setDate(a.getDate()+7),a.setMilliseconds(a.getMilliseconds()-1),n=n.filter((e=>e.dueDate>=t.getTime()&&e.dueDate<=a.getTime())),n},updateTask:(e,n)=>{let t=o();for(let o=0;o<t.length;o++)t[o].id===e.id&&(t[o]=n);localStorage.setItem("tasks",JSON.stringify(t))},deleteTask:e=>{let n=o();n=n.filter((n=>n.id!==e)),localStorage.setItem("tasks",JSON.stringify(n))}}};var b=t(404),h={};h.styleTagTransform=p(),h.setAttributes=A(),h.insert=r().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=l(),n()(b.Z,h),b.Z&&b.Z.locals&&b.Z.locals;const I=t.p+"92c598d0995778188044.svg";var x=t(332),B={};B.styleTagTransform=p(),B.setAttributes=A(),B.insert=r().bind(null,"head"),B.domAPI=a(),B.insertStyleElement=l(),n()(x.Z,B),x.Z&&x.Z.locals&&x.Z.locals;var f=t(540),y={};y.styleTagTransform=p(),y.setAttributes=A(),y.insert=r().bind(null,"head"),y.domAPI=a(),y.insertStyleElement=l(),n()(f.Z,y),f.Z&&f.Z.locals&&f.Z.locals;const k=t.p+"804b4b589eea8b818764.svg",v=t.p+"b4200fd474d2b71d1e95.svg",E=(e,n,t)=>{const o=document.createElement("div");o.className="sidebar-item",o.id=n.id;const a=document.createElement("div");a.className="item-content";const d=new Image;d.src=e,a.appendChild(d);const r=document.createElement("div");if(r.textContent=n.name,a.appendChild(r),o.appendChild(a),t){const e=document.createElement("div");e.className="item-buttons";const n=document.createElement("button");n.className="edit-button";const t=new Image;t.src=k,n.appendChild(t),e.appendChild(n);const a=document.createElement("button");a.className="delete-button";const d=new Image;d.src=v,a.appendChild(d),e.appendChild(a),o.appendChild(e)}return o},w=t.p+"939f2a757e3335be71bb.svg",S=t.p+"233385e32206cd372d69.svg",j=t.p+"1514cb89e66edd886067.svg",q=()=>{const e=document.createElement("div");e.className="side-bar";const n=document.createElement("div");n.className="default-items",n.appendChild(E(w,{id:"Inbox",name:"Inbox"},!1)),n.appendChild(E(S,{id:"Today",name:"Today"},!1)),n.appendChild(E(j,{id:"Upcoming",name:"Upcoming"},!1)),e.appendChild(n);const t=document.createElement("div");t.className="projects",t.appendChild((()=>{const e=document.createElement("div");e.className="projects-header";const n=document.createElement("div");n.textContent="Projects",e.appendChild(n);const t=document.createElement("button");return t.className="add-project-button",t.textContent="+",e.appendChild(t),e})());const o=document.createElement("div");return o.className="project-items",t.appendChild(o),e.appendChild(t),e};var Z=t(179),Y={};Y.styleTagTransform=p(),Y.setAttributes=A(),Y.insert=r().bind(null,"head"),Y.domAPI=a(),Y.insertStyleElement=l(),n()(Z.Z,Y),Z.Z&&Z.Z.locals&&Z.Z.locals;const T=()=>{const e=document.createElement("button");e.className="add-task-button";const n=document.createElement("span");n.textContent="+",e.appendChild(n);const t=document.createElement("span");return t.textContent="Add task",e.appendChild(t),e};var D=t(718),N={};N.styleTagTransform=p(),N.setAttributes=A(),N.insert=r().bind(null,"head"),N.domAPI=a(),N.insertStyleElement=l(),n()(D.Z,N),D.Z&&D.Z.locals&&D.Z.locals;const P=e=>{const n=document.createElement("div");n.className="priority-section";const t=document.createElement("div");t.className="priority-header",t.textContent=`Priority ${e.toString()}`,n.appendChild(t);const o=document.createElement("div");n.appendChild(o);const a=T();return n.appendChild(a),n};var W=t(773),z={};z.styleTagTransform=p(),z.setAttributes=A(),z.insert=r().bind(null,"head"),z.domAPI=a(),z.insertStyleElement=l(),n()(W.Z,z),W.Z&&W.Z.locals&&W.Z.locals;var L=t(627),U={};U.styleTagTransform=p(),U.setAttributes=A(),U.insert=r().bind(null,"head"),U.domAPI=a(),U.insertStyleElement=l(),n()(L.Z,U),L.Z&&L.Z.locals&&L.Z.locals;var M=t(620),X={};X.styleTagTransform=p(),X.setAttributes=A(),X.insert=r().bind(null,"head"),X.domAPI=a(),X.insertStyleElement=l(),n()(M.Z,X),M.Z&&M.Z.locals&&M.Z.locals;const $=(e,n)=>{const t=document.createElement("div");if(n){const e=document.createElement("div");e.textContent=n,t.appendChild(e)}const o=document.createElement("select");return e.forEach((e=>{o.appendChild(R(e))})),t.appendChild(o),t},R=e=>{const n=document.createElement("option");return n.value=e,n.textContent=e,n},O=e=>{const n=document.createElement("div");n.className="add-task-card";const t=document.createElement("span");t.role="textbox",t.contentEditable="true",n.appendChild(t);const o=document.createElement("span");o.role="textbox",o.contentEditable="true",n.appendChild(o);const a=document.createElement("div");a.className="middle-row",a.appendChild((()=>{const e=document.createElement("div"),n=document.createElement("div");n.textContent="Due date",e.appendChild(n);const t=document.createElement("input");return t.type="date",e.appendChild(t),e})()),a.appendChild($(["Priority 1","Priority 2","Priority 3","Priority 4"],"Priority")),n.appendChild(a);const d=document.createElement("div");d.className="bottom-row",d.appendChild($(e.map((e=>e.name))));const r=document.createElement("div"),i=document.createElement("button");i.className="cancel-button",i.textContent="Cancel",r.appendChild(i);const A=document.createElement("button");return A.textContent="Add task",A.className="add-button",A.disabled=!0,r.appendChild(A),d.appendChild(r),n.appendChild(d),n};var F=t(177),J={};J.styleTagTransform=p(),J.setAttributes=A(),J.insert=r().bind(null,"head"),J.domAPI=a(),J.insertStyleElement=l(),n()(F.Z,J),F.Z&&F.Z.locals&&F.Z.locals;const G=t.p+"28282ddc85b085c7fd14.svg";var V=t(386),Q={};Q.styleTagTransform=p(),Q.setAttributes=A(),Q.insert=r().bind(null,"head"),Q.domAPI=a(),Q.insertStyleElement=l(),n()(V.Z,Q),V.Z&&V.Z.locals&&V.Z.locals;var H=t(930),K={};K.styleTagTransform=p(),K.setAttributes=A(),K.insert=r().bind(null,"head"),K.domAPI=a(),K.insertStyleElement=l(),n()(H.Z,K),H.Z&&H.Z.locals&&H.Z.locals;var _=t(914),ee={};ee.styleTagTransform=p(),ee.setAttributes=A(),ee.insert=r().bind(null,"head"),ee.domAPI=a(),ee.insertStyleElement=l(),n()(_.Z,ee),_.Z&&_.Z.locals&&_.Z.locals;var ne=t(258),te={};te.styleTagTransform=p(),te.setAttributes=A(),te.insert=r().bind(null,"head"),te.domAPI=a(),te.insertStyleElement=l(),n()(ne.Z,te),ne.Z&&ne.Z.locals&&ne.Z.locals;const oe=t.p+"ec79a10c2e5d5200f8b4.svg",ae=({task:e,showDueDate:n=!0,showPriority:t=!1,showProject:o=!1,calendarMode:a=!1})=>{const d=document.createElement("div");d.className="task-card",d.dataTask=e,a&&(d.style.border="0.5px solid #ddd",d.style.borderRadius="5px",d.style.padding="5px",d.style.boxShadow="0 5px 5px rgb(0, 0, 0, 0.2)");const r=document.createElement("div"),i=document.createElement("button");i.className="check-button",r.appendChild(i),d.appendChild(r);const A=document.createElement("div");A.className="middle-column";const c=document.createElement("div");c.textContent=e.name,A.appendChild(c);const l=document.createElement("div");l.textContent=e.description,a&&(l.style.height="16px"),A.appendChild(l);const s=document.createElement("div");s.className="bottom-row";const p=document.createElement("div");if(p.className="left",s.appendChild(p),n){const n=document.createElement("div");n.className="due-date";const t=new Image;t.src=oe,n.appendChild(t);const o=document.createElement("div");let a;if(""===e.dueDate)a="No due date";else{let n=new Date(parseInt(e.dueDate));a=`${n.getFullYear()}-${(n.getMonth()+1).toLocaleString("en-US",{minimumIntegerDigits:2,useGrouping:!1})}-${n.getDate().toLocaleString("en-US",{minimumIntegerDigits:2,useGrouping:!1})}`}o.textContent=a,n.appendChild(o),p.appendChild(n)}if(t){const n=document.createElement("div");n.className="priority",n.textContent=`Priority ${e.priority.toString()}`,p.appendChild(n)}if(s.appendChild(p),A.appendChild(s),d.appendChild(A),o){const n=document.createElement("div");n.className="project";const t=document.createElement("div");t.textContent=C().getProjectById(e.projectId).name,n.appendChild(t);const o=new Image;o.src=G,n.appendChild(o),s.appendChild(n)}const u=document.createElement("div"),m=document.createElement("button");m.className="delete-button";const g=new Image;return g.src=v,m.appendChild(g),u.appendChild(m),d.appendChild(u),d};var de=t(934),re={};re.styleTagTransform=p(),re.setAttributes=A(),re.insert=r().bind(null,"head"),re.domAPI=a(),re.insertStyleElement=l(),n()(de.Z,re),de.Z&&de.Z.locals&&de.Z.locals;const ie={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let Ae;const ce=new Uint8Array(16);function le(){if(!Ae&&(Ae="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!Ae))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return Ae(ce)}const se=[];for(let e=0;e<256;++e)se.push((e+256).toString(16).slice(1));const pe=function(e,n,t){if(ie.randomUUID&&!n&&!e)return ie.randomUUID();const o=(e=e||{}).random||(e.rng||le)();if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,n){t=t||0;for(let e=0;e<16;++e)n[t+e]=o[e];return n}return function(e,n=0){return se[e[n+0]]+se[e[n+1]]+se[e[n+2]]+se[e[n+3]]+"-"+se[e[n+4]]+se[e[n+5]]+"-"+se[e[n+6]]+se[e[n+7]]+"-"+se[e[n+8]]+se[e[n+9]]+"-"+se[e[n+10]]+se[e[n+11]]+se[e[n+12]]+se[e[n+13]]+se[e[n+14]]+se[e[n+15]]}(o)};var ue=t(225),me={};me.styleTagTransform=p(),me.setAttributes=A(),me.insert=r().bind(null,"head"),me.domAPI=a(),me.insertStyleElement=l(),n()(ue.Z,me),ue.Z&&ue.Z.locals&&ue.Z.locals;const ge=(e,n)=>{const t=document.createElement("div");if(n){const e=document.createElement("div");e.textContent=n,t.appendChild(e)}const o=document.createElement("select");return e.forEach((e=>{o.appendChild(Ce(e))})),t.appendChild(o),t},Ce=e=>{const n=document.createElement("option");return n.value=e,n.textContent=e,n},be=e=>{const n=document.createElement("dialog");n.className="edit-task-dialog";const t=document.createElement("div"),o=document.createElement("span");o.role="textbox",o.contentEditable="true",t.appendChild(o);const a=document.createElement("span");a.role="textbox",a.contentEditable="true",t.appendChild(a);const d=document.createElement("div");d.className="middle-row",d.appendChild((()=>{const e=document.createElement("div"),n=document.createElement("div");n.textContent="Due date",e.appendChild(n);const t=document.createElement("input");return t.type="date",e.appendChild(t),e})()),d.appendChild(ge(["Priority 1","Priority 2","Priority 3","Priority 4"],"Priority")),t.appendChild(d);const r=document.createElement("div");r.className="bottom-row",r.appendChild(ge(e.map((e=>e.name))));const i=document.createElement("div"),A=document.createElement("button");A.className="cancel-button",A.textContent="Cancel",i.appendChild(A);const c=document.createElement("button");return c.textContent="Save",c.className="save-button",i.appendChild(c),r.appendChild(i),t.appendChild(r),n.appendChild(t),n};var he=t(438),Ie={};Ie.styleTagTransform=p(),Ie.setAttributes=A(),Ie.insert=r().bind(null,"head"),Ie.domAPI=a(),Ie.insertStyleElement=l(),n()(he.Z,Ie),he.Z&&he.Z.locals&&he.Z.locals;const xe=()=>{const e=C(),n=()=>{let n=e.getAllProjects();n=n.filter((e=>"Inbox"!==e.name));const d=document.querySelector(".side-bar .project-items");for(;d.lastChild;)d.removeChild(d.lastChild);n.forEach((e=>{d.appendChild(E(G,e,!0))})),a(),t(),o()},t=()=>{document.querySelectorAll(".sidebar-item .edit-button").forEach((n=>{n.addEventListener("click",(()=>{const t=e.getProjectById(n.parentElement.parentElement.id);u(t)}))}))},o=()=>{document.querySelectorAll(".sidebar-item .delete-button").forEach((n=>{n.addEventListener("click",(()=>{const t=e.getProjectById(n.parentElement.parentElement.id);b(t)}))}))},a=()=>{document.querySelectorAll(".sidebar-item").forEach((e=>{e.querySelector(".item-content").addEventListener("click",(()=>{e.classList.contains("sidebar-item-active")||d(e.id)}))}))},d=e=>{if((e=>{document.querySelectorAll(".sidebar-item").forEach((e=>{e.className="sidebar-item"})),document.getElementById(e).classList.add("sidebar-item-active")})(e),"Inbox"===e)r();else if("Today"===e)i();else if("Upcoming"===e){const e=g(new Date);document.querySelector("#content").monday=e,A(document.querySelector("#content").monday)}else c(e)},r=()=>{const n=document.querySelector("#content");n.lastChild&&n.removeChild(n.lastChild);const t=(()=>{const e=document.createElement("div");e.className="inbox-page";const n=document.createElement("div");n.className="inbox-content";const t=document.createElement("div");t.className="inbox-header",t.textContent="Inbox",n.appendChild(t);for(let e=1;e<5;e++){const t=P(e);t.className="priority-section",n.appendChild(t)}return e.appendChild(n),e})(),o=e.getTasksByProjectId("Inbox"),a=t.querySelectorAll(".priority-section");o.forEach((e=>{const n=parseInt(e.priority),t=a[n-1].children.item(1),o=ae({task:e});t.appendChild(o),j(o)})),n.appendChild(t),x()},i=()=>{const n=document.querySelector("#content");n.lastChild&&n.removeChild(n.lastChild),n.appendChild((()=>{const e=document.createElement("div");e.className="today-page";const n=document.createElement("div");n.className="wrapper";const t=document.createElement("div");t.className="header";const o=document.createElement("div");o.textContent="Today",t.appendChild(o);const a=document.createElement("div"),d=new Date;a.textContent=`${d.toLocaleString("en-us",{weekday:"long"})} ${d.toLocaleString("default",{month:"long"})} ${d.getDate()}, ${d.getFullYear()}`,t.appendChild(a),n.appendChild(t);const r=document.createElement("div");r.className="overdue-section";const i=document.createElement("div");i.className="header",i.textContent="Overdue",r.appendChild(i);const A=document.createElement("div");A.className="tasks",r.appendChild(A),n.appendChild(r);const c=document.createElement("div");c.className="today-section";const l=document.createElement("div");l.className="header",l.textContent=`${d.getDate()} ${d.toLocaleString("default",{month:"long"}).substring(0,3)} ‧ Today ‧ ${d.toLocaleString("en-us",{weekday:"long"})}`,c.appendChild(l);const s=document.createElement("div");s.className="tasks",c.appendChild(s);const p=T();return c.appendChild(p),n.appendChild(c),e.appendChild(n),e})());const t=new Date;t.setHours(0),t.setMinutes(0),t.setSeconds(0),t.setMilliseconds(0);const o=e.getOverdueTasks(t),a=document.querySelector(".today-page .overdue-section .tasks");o.forEach((e=>{const n=ae({task:e,showPriority:!0,showProject:!0});a.appendChild(n),j(n)}));const d=e.getTasksByDueDate(t),r=document.querySelector(".today-page .today-section .tasks");d.forEach((e=>{const n=ae({task:e,showPriority:!0,showProject:!0});r.appendChild(n),j(n)})),x()},A=n=>{const t=document.querySelector("#content");t.lastChild&&t.removeChild(t.lastChild),t.appendChild((e=>{const n=document.createElement("div");n.className="upcoming-page";const t=document.createElement("div");t.className="wrapper";const o=document.createElement("div");o.className="header";const a=document.createElement("div");a.className="date",a.textContent=`${e.toLocaleString("default",{month:"long"})} ${e.getFullYear()}`,o.appendChild(a);const d=document.createElement("div");d.className="buttons";const r=document.createElement("div");r.className="arrow-buttons";const i=document.createElement("button");i.className="back-button",i.textContent="<",r.appendChild(i);const A=document.createElement("button");A.className="forward-button",A.textContent=">",r.appendChild(A),d.appendChild(r);const c=document.createElement("button");c.className="today-button",c.textContent="Today",d.appendChild(c),o.appendChild(d),t.appendChild(o);const l=document.createElement("div");l.className="calendar";let s=new Date(e);for(let e=0;e<7;e++){const e=document.createElement("div");e.className="column",e.date=new Date(s);const n=document.createElement("div");n.className="header";const o=document.createElement("div");o.textContent=s.toLocaleString("en-us",{weekday:"long"}),n.appendChild(o);const a=document.createElement("div");a.textContent=s.getDate(),n.appendChild(a);const d=new Date;d.getDate()===s.getDate()&&d.getMonth()===s.getMonth()&&d.getFullYear()===s.getFullYear()?(n.style.color="#A16207",t.querySelector(".header .date").textContent=`${d.toLocaleString("default",{month:"long"})} ${d.getFullYear()}`):(o.style.color="grey",a.style.color="black"),e.appendChild(n);const r=document.createElement("div"),i=document.createElement("div");i.className="tasks",r.appendChild(i);const A=T();r.appendChild(A),e.appendChild(r),l.appendChild(e),s.setDate(s.getDate()+1)}return t.appendChild(l),n.appendChild(t),n})(n));const o=e.getTasksOfTheWeek(n);document.querySelectorAll(".upcoming-page .calendar .column").forEach((e=>{o.filter((n=>n.dueDate===e.date.getTime())).forEach((n=>{const t=ae({task:n,showDueDate:!1,showPriority:!0,showProject:!1,calendarMode:!0});e.querySelector(".tasks").appendChild(t),j(t)}))})),x(),X(),$()},c=e=>{const n=document.querySelector("#content");n.lastChild&&n.removeChild(n.lastChild),n.appendChild((e=>{const n=document.createElement("div");return n.textContent=`Project page: ${e}`,n})(e))},l=()=>{document.querySelector(".add-project-dialog").showModal(),document.body.style.overflow="hidden",document.querySelector(".add-project-dialog input").value="",document.querySelector(".add-project-dialog .error-message").textContent="",document.querySelector(".add-project-dialog .add-button").disabled=!0},s=()=>{document.querySelector(".add-project-dialog").close()},p=n=>{let t="valid";if(0==n.length||n.length>20)t="Project's name must have 1-20 characters.";else{const o=e.getAllProjects();for(let e of o)if(e.name===n){t="This name is already taken.";break}}return t},u=e=>{const n=document.querySelector(".edit-project-dialog");n.dataProject=e,n.showModal(),document.body.style.overflow="hidden",n.querySelector("input").value=e.name,document.querySelector(".edit-project-dialog .error-message").textContent="",document.querySelector(".edit-project-dialog .save-button").disabled=!0},m=()=>{document.querySelector(".edit-project-dialog").close()},b=e=>{const n=document.querySelector(".delete-project-dialog");n.dataProject=e,n.showModal(),document.body.style.overflow="hidden",n.querySelector(".message span:first-Child").textContent=e.name},h=()=>{document.querySelector(".delete-project-dialog").close()},x=()=>{document.querySelectorAll(".add-task-button").forEach((e=>{e.addEventListener("click",(()=>{"Upcoming"===document.querySelector(".sidebar-item-active").id?U(e.parentElement.parentElement.date):B(e)}))}))},B=n=>{const t=document.querySelector(".sidebar-item-active").id;let o;"Inbox"===t?o=document.querySelectorAll(".inbox-page .add-task-button"):"Today"===t&&(o=document.querySelectorAll(".today-page .add-task-button")),o.forEach((e=>{e.classList.add("add-task-button-hidden")}));const a=O(e.getAllProjects());"Today"===t&&y(a,new Date),"Inbox"===t?f(a,parseInt(n.parentElement.firstChild.textContent.split(" ")[1])):"Today"===t&&f(a,4),k(a.querySelector(".add-task-card .cancel-button")),v(a),w(a),n.parentElement.appendChild(a)},f=(e,n)=>{e.querySelector(".middle-row select").children.item(n-1).selected="selected"},y=(e,n)=>{e.querySelector(".middle-row input").value=`${n.getFullYear()}-${(n.getMonth()+1).toLocaleString("en-US",{minimumIntegerDigits:2,useGrouping:!1})}-${n.getDate().toLocaleString("en-US",{minimumIntegerDigits:2,useGrouping:!1})}`},k=e=>{e.addEventListener("click",(()=>{S()}))},v=e=>{const n=e.firstChild;n.addEventListener("input",(()=>{const t=e.querySelector(".add-button");""!==n.textContent.trim()?t.disabled=!1:t.disabled=!0}))},w=n=>{n.querySelector(".add-button").addEventListener("click",(()=>{const t=(new Date).getTime(),o=n.firstChild.textContent.trim(),a=n.children.item(1).textContent.trim(),d=n.querySelector(".middle-row input").value;let A=new Date;""!==d?(A.setFullYear(d.split("-")[0]),A.setMonth(parseInt(d.split("-")[1])-1),A.setDate(d.split("-")[2]),A.setHours(0),A.setMinutes(0),A.setSeconds(0),A.setMilliseconds(0),A=A.getTime()):A="";const c=n.querySelector(".middle-row select").value.split(" ")[1],l=n.querySelector(".bottom-row select").value,s={id:pe(),name:o,description:a,dueDate:A,priority:c,projectId:e.getProjectByName(l).id,timeCreated:t};e.createTask(s);const p=document.querySelector(".sidebar-item-active").id;"Inbox"===p?r():"Today"===p&&i()}))},S=()=>{const e=document.querySelector(".sidebar-item-active").id,n=document.querySelector(".add-task-card").parentElement;let t;n.removeChild(n.lastChild),"Inbox"===e?t=document.querySelector(".inbox-page").querySelectorAll(".add-task-button"):"Today"===e&&(t=document.querySelector(".today-page").querySelectorAll(".add-task-button")),t.forEach((e=>{e.classList.remove("add-task-button-hidden")}))},j=e=>{Y(e),D(e),Z(e)},Z=e=>{e.addEventListener("click",(()=>{N(e.dataTask)}))},Y=n=>{n.querySelector(".check-button").addEventListener("click",(t=>{t.stopImmediatePropagation(),e.deleteTask(n.dataTask.id);const o=document.querySelector(".sidebar-item-active").id;"Inbox"===o?r():"Today"===o?i():"Upcoming"===o&&A(document.querySelector("#content").monday)}))},D=e=>{e.querySelector(".delete-button").addEventListener("click",(n=>{n.stopImmediatePropagation();const t=e.dataTask;z(t)}))},N=n=>{const t=document.querySelector(".edit-task-dialog");t.showModal(),t.dataTask=n,document.body.style.overflow="hidden",t.querySelector("span:first-child").textContent=n.name,t.querySelector("span:nth-child(2)").textContent=n.description;const o=t.querySelector(".middle-row input");if(o.value="",""!==n.dueDate){const e=new Date(parseInt(n.dueDate));o.value=`${e.getFullYear()}-${(e.getMonth()+1).toLocaleString("en-US",{minimumIntegerDigits:2,useGrouping:!1})}-${e.getDate().toLocaleString("en-US",{minimumIntegerDigits:2,useGrouping:!1})}`}t.querySelector(".middle-row select").children.item(n.priority-1).selected=!0;const a=t.querySelector(".bottom-row select"),d=e.getProjectById(n.projectId).name;a.querySelector(`option[value = "${d}"]`).selected=!0},W=()=>{document.querySelector(".edit-task-dialog").close()},z=e=>{const n=document.querySelector(".delete-task-dialog");n.dataTask=e,n.showModal(),document.body.style.overflow="hidden",n.querySelector(".message span:first-Child").textContent=e.name},L=()=>{document.querySelector(".delete-task-dialog").close()},U=e=>{document.querySelector(".add-task-dialog").showModal(),document.body.style.overflow="hidden",document.querySelector(".add-task-dialog span:first-child").textContent="",document.querySelector(".add-task-dialog span:nth-child(2)").textContent="",document.querySelector(".add-task-dialog .add-button").disabled=!0,document.querySelector(".add-task-dialog .middle-row input").value=`${e.getFullYear()}-${(e.getMonth()+1).toLocaleString("en-US",{minimumIntegerDigits:2,useGrouping:!1})}-${e.getDate().toLocaleString("en-US",{minimumIntegerDigits:2,useGrouping:!1})}`,document.querySelector(".add-task-dialog .middle-row select").children.item(3).selected=!0},M=()=>{document.querySelector(".add-task-dialog").close()},X=()=>{document.querySelector(".upcoming-page .back-button").addEventListener("click",(()=>{let e=new Date(document.querySelector("#content").monday);e.setDate(e.getDate()-7),document.querySelector("#content").monday=e,A(document.querySelector("#content").monday)}))},$=()=>{document.querySelector(".upcoming-page .forward-button").addEventListener("click",(()=>{let e=new Date(document.querySelector("#content").monday);e.setDate(e.getDate()+7),document.querySelector("#content").monday=e,A(document.querySelector("#content").monday)}))};return{init:()=>{const t=document.querySelector("body"),o=(()=>{const e=document.createElement("div");e.className="nav-bar";const n=(()=>{const e=document.createElement("div");e.className="logo";const n=new Image;n.src=I,e.appendChild(n);const t=document.createElement("div");return t.textContent="Todo List",e.appendChild(t),e})();return e.appendChild(n),e})();t.appendChild(o),document.querySelector(".logo").addEventListener("click",(()=>{const e=document.querySelector("#Inbox");e.classList.contains("sidebar-item-active")||d(e.id)}));const a=q();t.appendChild(a),n(),document.querySelector(".add-project-button").addEventListener("click",(()=>{l()}));const c=document.createElement("div");c.id="content",c.monday=g(new Date),t.appendChild(c);const u=(()=>{const e=document.createElement("dialog");e.className="add-project-dialog";const n=document.createElement("form");n.action="#",n.method="post",n.noValidate=!0,n.className="form";const t=document.createElement("div");t.className="header",t.textContent="Add project",n.appendChild(t);const o=document.createElement("form-field"),a=document.createElement("label");a.for="project-name",a.textContent="Name",o.appendChild(a);const d=document.createElement("input");d.type="text",d.id="project-name",o.appendChild(d);const r=document.createElement("span");r.className="error-message",r.ariaLive="polite",o.appendChild(r),n.appendChild(o);const i=document.createElement("div");i.className="buttons";const A=document.createElement("button");A.className="cancel-button",A.textContent="Cancel",i.appendChild(A),n.appendChild(i);const c=document.createElement("button");return c.className="add-button",c.textContent="Add",c.disabled=!0,i.appendChild(c),e.appendChild(n),e})();t.appendChild(u),document.querySelector(".add-project-dialog").addEventListener("close",(()=>{document.body.style.overflow="auto"})),(()=>{const e=document.querySelector(".add-project-dialog input");e.addEventListener("input",(()=>{const n=p(e.value),t=document.querySelector(".add-project-dialog .add-button"),o=document.querySelector(".add-project-dialog .error-message");"valid"===n?(t.disabled=!1,o.textContent=""):(t.disabled=!0,o.textContent=n)}))})(),(()=>{const t=document.querySelector(".add-project-dialog input");t.addEventListener("keypress",(o=>{if(13===o.keyCode)if(o.preventDefault(),"valid"===p(t.value)){const o=pe(),a=t.value,r=(new Date).getTime();e.createProject({id:o,name:a,timeCreated:r}),s(),n(),d(o)}else{const e=document.querySelector(".add-project-dialog .error-message");""===e.textContent&&(e.textContent=p(t.value))}}))})(),document.querySelector(".add-project-dialog .cancel-button").addEventListener("click",(e=>{e.preventDefault(),s()})),document.querySelector(".add-project-dialog .add-button").addEventListener("click",(t=>{t.preventDefault();const o=pe(),a=document.querySelector(".add-project-dialog input").value,r=(new Date).getTime();e.createProject({id:o,name:a,timeCreated:r}),s(),n(),d(o)}));const C=(()=>{const e=document.createElement("dialog");e.className="edit-project-dialog";const n=document.createElement("form");n.action="#",n.method="post",n.noValidate=!0,n.className="form";const t=document.createElement("div");t.className="header",t.textContent="Edit project",n.appendChild(t);const o=document.createElement("form-field"),a=document.createElement("label");a.for="project-name",a.textContent="Name",o.appendChild(a);const d=document.createElement("input");d.type="text",d.id="project-name",o.appendChild(d);const r=document.createElement("span");r.className="error-message",r.ariaLive="polite",o.appendChild(r),n.appendChild(o);const i=document.createElement("div");i.className="buttons";const A=document.createElement("button");A.className="cancel-button",A.textContent="Cancel",i.appendChild(A),n.appendChild(i);const c=document.createElement("button");return c.className="save-button",c.textContent="Save",c.disabled=!0,i.appendChild(c),e.appendChild(n),e})();t.appendChild(C),document.querySelector(".edit-project-dialog").addEventListener("close",(()=>{document.body.style.overflow="auto"})),(()=>{const e=document.querySelector(".edit-project-dialog input");e.addEventListener("input",(()=>{const n=p(e.value),t=document.querySelector(".edit-project-dialog .save-button"),o=document.querySelector(".edit-project-dialog .error-message");"valid"===n?(t.disabled=!1,o.textContent=""):(t.disabled=!0,o.textContent=n)}))})(),(()=>{const t=document.querySelector(".edit-project-dialog input");t.addEventListener("keypress",(o=>{if(13===o.keyCode)if(o.preventDefault(),"valid"===p(t.value)){const t=document.querySelector(".edit-project-dialog").dataProject;let o={};o.id=t.id,o.name=document.querySelector(".edit-project-dialog input").value,o.timeCreated=t.timeCreated,e.updateProject(t,o),m(),n(),d(o.id)}else{const e=document.querySelector(".edit-project-dialog .error-message");""===e.textContent&&(e.textContent=p(t.value))}}))})(),document.querySelector(".edit-project-dialog .cancel-button").addEventListener("click",(e=>{e.preventDefault(),m()})),document.querySelector(".edit-project-dialog .save-button").addEventListener("click",(t=>{t.preventDefault();const o=document.querySelector(".edit-project-dialog").dataProject;let a={};a.id=o.id,a.name=document.querySelector(".edit-project-dialog input").value,a.timeCreated=o.timeCreated,e.updateProject(o,a),m(),n(),d(a.id)}));const b=(()=>{const e=document.createElement("dialog");e.className="delete-project-dialog";const n=document.createElement("div"),t=document.createElement("div");t.className="header",t.textContent="Delete project?",n.appendChild(t);const o=document.createElement("div");o.className="message",o.textContent="Are you sure you want to delete ";const a=document.createElement("span");o.appendChild(a);const d=document.createElement("span");d.textContent="?",o.appendChild(d),n.appendChild(o);const r=document.createElement("div");r.className="bottom-row";const i=document.createElement("button");i.className="cancel-button",i.textContent="Cancel",r.appendChild(i);const A=document.createElement("button");return A.className="delete-button",A.textContent="Delete",r.appendChild(A),n.appendChild(r),e.appendChild(n),e})();t.appendChild(b),document.querySelector(".delete-project-dialog").addEventListener("close",(()=>{document.body.style.overflow="auto"})),document.querySelector(".delete-project-dialog .cancel-button").addEventListener("click",(e=>{e.preventDefault(),h()})),document.querySelector(".delete-project-dialog .delete-button").addEventListener("click",(t=>{t.preventDefault();const o=document.querySelector(".delete-project-dialog").dataProject;e.deleteProject(o.id),h(),document.querySelector(".sidebar-item-active").id===o.id&&d("Inbox"),n()})),document.querySelector(".delete-project-dialog").addEventListener("keypress",(t=>{if(13===t.keyCode){t.preventDefault();const o=document.querySelector(".delete-project-dialog").dataProject;e.deleteProject(o.id),h(),document.querySelector(".sidebar-item-active").id===o.id&&d("Inbox"),n()}}));const x=be(e.getAllProjects());t.appendChild(x),(()=>{const e=document.querySelector(".edit-task-dialog span:first-child");e.addEventListener("input",(()=>{const n=document.querySelector(".edit-task-dialog .save-button");""===e.textContent?n.disabled=!0:n.disabled=!1}))})(),document.querySelector(".edit-task-dialog").addEventListener("close",(()=>{document.body.style.overflow="auto"})),document.querySelector(".edit-task-dialog .cancel-button").addEventListener("click",(e=>{e.preventDefault(),W()})),document.querySelector(".edit-task-dialog .save-button").addEventListener("click",(n=>{n.preventDefault();const t=document.querySelector(".edit-task-dialog").dataTask;let o={id:t.id,name:document.querySelector(".edit-task-dialog span:first-child").textContent.trim(),description:document.querySelector(".edit-task-dialog span:nth-child(2)").textContent.trim(),priority:parseInt(document.querySelector(".edit-task-dialog .middle-row select").value.split(" ")[1]),projectId:e.getProjectByName(document.querySelector(".edit-task-dialog .bottom-row select").value).id};const a=document.querySelector(".edit-task-dialog .middle-row input").value;if(""===a)o.dueDate="";else{let e=new Date;e.setFullYear(a.split("-")[0]),e.setMonth(parseInt(a.split("-")[1])-1),e.setDate(a.split("-")[2]),e.setHours(0),e.setMinutes(0),e.setSeconds(0),e.setMilliseconds(0),o.dueDate=e.getTime()}e.updateTask(t,o),W();const d=document.querySelector(".sidebar-item-active").id;"Inbox"===d?r():"Today"===d?i():"Upcoming"===d&&A(document.querySelector("#content").monday)}));const B=(()=>{const e=document.createElement("dialog");e.className="delete-task-dialog";const n=document.createElement("div"),t=document.createElement("div");t.className="header",t.textContent="Delete task?",n.appendChild(t);const o=document.createElement("div");o.className="message",o.textContent="Are you sure you want to delete ";const a=document.createElement("span");o.appendChild(a);const d=document.createElement("span");d.textContent="?",o.appendChild(d),n.appendChild(o);const r=document.createElement("div");r.className="bottom-row";const i=document.createElement("button");i.className="cancel-button",i.textContent="Cancel",r.appendChild(i);const A=document.createElement("button");return A.className="delete-button",A.textContent="Delete",r.appendChild(A),n.appendChild(r),e.appendChild(n),e})();t.appendChild(B),document.querySelector(".delete-task-dialog").addEventListener("close",(()=>{document.body.style.overflow="auto"})),document.querySelector(".delete-task-dialog .cancel-button").addEventListener("click",(e=>{e.preventDefault(),L()})),document.querySelector(".delete-task-dialog .delete-button").addEventListener("click",(n=>{n.preventDefault();const t=document.querySelector(".delete-task-dialog").dataTask;e.deleteTask(t.id),L();const o=document.querySelector(".sidebar-item-active").id;"Inbox"===o?r():"Today"===o?i():"Upcoming"===o&&A(document.querySelector("#content").monday)})),document.querySelector(".delete-task-dialog").addEventListener("keypress",(n=>{if(13===n.keyCode){n.preventDefault();const t=document.querySelector(".delete-task-dialog").dataTask;e.deleteTask(t.id),L();const o=document.querySelector(".sidebar-item-active").id;"Inbox"===o?r():"Today"===o?i():"Upcoming"===o&&A(document.querySelector("#content").monday)}}));const f=(e=>{const n=document.createElement("dialog");n.className="add-task-dialog";const t=O(e);return n.appendChild(t),n})(e.getAllProjects());t.appendChild(f),document.querySelector(".add-task-dialog").addEventListener("close",(()=>{document.body.style.overflow="auto"})),(()=>{const e=document.querySelector(".add-task-dialog span:first-child");e.addEventListener("input",(()=>{const n=document.querySelector(".add-task-dialog .add-button");""!==e.textContent.trim()?n.disabled=!1:n.disabled=!0}))})(),document.querySelector(".add-task-dialog .cancel-button").addEventListener("click",(e=>{e.preventDefault(),M()})),document.querySelector(".add-task-dialog .add-button").addEventListener("click",(n=>{n.preventDefault();const t=(new Date).getTime(),o=document.querySelector(".add-task-dialog span:first-child").textContent.trim(),a=document.querySelector(".add-task-dialog span:nth-child(2)").textContent.trim(),d=document.querySelector(".add-task-dialog .middle-row input").value;let r=new Date;""!==d?(r.setFullYear(d.split("-")[0]),r.setMonth(parseInt(d.split("-")[1])-1),r.setDate(d.split("-")[2]),r.setHours(0),r.setMinutes(0),r.setSeconds(0),r.setMilliseconds(0),r=r.getTime()):r="";const i=document.querySelector(".add-task-dialog .middle-row select").value.split(" ")[1],c=document.querySelector(".add-task-dialog .bottom-row select").value,l={id:pe(),name:o,description:a,dueDate:r,priority:i,projectId:e.getProjectByName(c).id,timeCreated:t};e.createTask(l),M(),A(document.querySelector("#content").monday)})),d("Inbox")}}};(()=>{const e=xe(),n=C();return{init:()=>{n.init(),e.init()}}})().init()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,