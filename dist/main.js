(()=>{"use strict";var e={177:(e,n,t)=>{t.d(n,{Z:()=>A});var o=t(537),r=t.n(o),d=t(645),a=t.n(d)()(r());a.push([e.id,".add-project-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 300px;\n    position: relative;\n    top: -30%;\n}\n\n.add-project-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.add-project-dialog > form {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.add-project-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n \n.add-project-dialog form-field {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n\n.add-project-dialog input {\n    height: 30px;\n    width: max(100%, 200px);\n    border-radius: 5px;\n    border: 1px solid #ddd;\n}\n\n.add-project-dialog input:focus {\n    outline: none;\n    border: 1px solid grey;\n}\n\n.add-project-dialog .error-message {\n    font-size: 14px;\n    color: red;\n    height: 14px;\n}\n\n.add-project-dialog .buttons {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.add-project-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.add-project-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.add-project-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.add-project-dialog .add-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.add-project-dialog .add-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.add-project-dialog .add-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.add-project-dialog .add-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n} \n\n\n\n","",{version:3,sources:["webpack://./src/modules/components/addProjectDialog/addProjectDialog.css"],names:[],mappings:"AAAA;IACI,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;IACZ,kBAAkB;IAClB,SAAS;AACb;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;;AAGA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;AACZ;;;AAGA;IACI,YAAY;IACZ,uBAAuB;IACvB,kBAAkB;IAClB,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,eAAe;IACf,UAAU;IACV,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,0CAA0C;IAC1C,eAAe;AACnB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,yBAAyB;IACzB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,uCAAuC;AAC3C",sourcesContent:[".add-project-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 300px;\n    position: relative;\n    top: -30%;\n}\n\n.add-project-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.add-project-dialog > form {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.add-project-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n \n.add-project-dialog form-field {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n\n.add-project-dialog input {\n    height: 30px;\n    width: max(100%, 200px);\n    border-radius: 5px;\n    border: 1px solid #ddd;\n}\n\n.add-project-dialog input:focus {\n    outline: none;\n    border: 1px solid grey;\n}\n\n.add-project-dialog .error-message {\n    font-size: 14px;\n    color: red;\n    height: 14px;\n}\n\n.add-project-dialog .buttons {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.add-project-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.add-project-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.add-project-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.add-project-dialog .add-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.add-project-dialog .add-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.add-project-dialog .add-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.add-project-dialog .add-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n} \n\n\n\n"],sourceRoot:""}]);const A=a},620:(e,n,t)=>{t.d(n,{Z:()=>A});var o=t(537),r=t.n(o),d=t(645),a=t.n(d)()(r());a.push([e.id,'.add-task-card {\n    width: 100%;\n    min-width: 400px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    border: 1px solid #9ca3af;\n    border-radius: 10px;\n    padding: 10px;\n}\n\n.add-task-card > :first-child {\n    width: 100%;\n    border: none;\n    outline: none;\n    font-weight: 900;\n}\n\n.add-task-card > :first-child[contenteditable]:empty:before {\n    content: "Task name";\n    color: #8e8e8e;\n}\n\n.add-task-card > :nth-child(2) {\n    width: 100%;\n    border: none;\n    outline: none;\n    font-size: 14px;\n    font-weight: 200;\n}\n\n.add-task-card > :nth-child(2)[contenteditable]:empty:before {\n    content: "Description";\n    color: #8e8e8e;\n}\n\n.middle-row {\n    display: flex;\n    gap: 30px;\n}\n\n.middle-row > * {\n    display: flex;\n    gap: 10px;\n    align-items: center;\n    padding-bottom: 5px;\n}\n\n/* Date picker */\n.middle-row input {\n    min-height: 25px;\n}\n\n/* Priority dropdown */\n.middle-row select {\n    min-height: 25px;\n}\n\n.add-task-card .bottom-row {\n    display: flex;\n    justify-content: space-between;\n    border-top: 1px solid #e5e7eb;\n    padding-top: 10px;\n}\n\n/* Project dropdown */\n.add-task-card .bottom-row select {\n    height: 30px;\n    text-align: center;\n    border: none;\n    outline: none;\n    border-radius: 5px;\n}\n\n.add-task-card .bottom-row select:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n/* The buttons at the end of card */\n.add-task-card .bottom-row > :last-child {\n    display: flex;\n    gap: 10px;\n}\n\n/* Cancel button */\n.card-cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.card-cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.card-cancel-button:active {\n    transform: scale(0.95);\n}\n\n/* Add button */\n.add-task-card .add-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.add-task-card .add-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.add-task-card .add-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.add-task-card .add-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n}',"",{version:3,sources:["webpack://./src/modules/components/addTaskCard/addTaskCard.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,yBAAyB;IACzB,mBAAmB;IACnB,aAAa;AACjB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,gBAAgB;AACpB;;AAEA;IACI,oBAAoB;IACpB,cAAc;AAClB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,sBAAsB;IACtB,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,aAAa;IACb,SAAS;IACT,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA,gBAAgB;AAChB;IACI,gBAAgB;AACpB;;AAEA,sBAAsB;AACtB;IACI,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,6BAA6B;IAC7B,iBAAiB;AACrB;;AAEA,qBAAqB;AACrB;IACI,YAAY;IACZ,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA,mCAAmC;AACnC;IACI,aAAa;IACb,SAAS;AACb;;AAEA,kBAAkB;AAClB;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,0CAA0C;IAC1C,eAAe;AACnB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA,eAAe;AACf;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,yBAAyB;IACzB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,uCAAuC;AAC3C",sourcesContent:['.add-task-card {\n    width: 100%;\n    min-width: 400px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    border: 1px solid #9ca3af;\n    border-radius: 10px;\n    padding: 10px;\n}\n\n.add-task-card > :first-child {\n    width: 100%;\n    border: none;\n    outline: none;\n    font-weight: 900;\n}\n\n.add-task-card > :first-child[contenteditable]:empty:before {\n    content: "Task name";\n    color: #8e8e8e;\n}\n\n.add-task-card > :nth-child(2) {\n    width: 100%;\n    border: none;\n    outline: none;\n    font-size: 14px;\n    font-weight: 200;\n}\n\n.add-task-card > :nth-child(2)[contenteditable]:empty:before {\n    content: "Description";\n    color: #8e8e8e;\n}\n\n.middle-row {\n    display: flex;\n    gap: 30px;\n}\n\n.middle-row > * {\n    display: flex;\n    gap: 10px;\n    align-items: center;\n    padding-bottom: 5px;\n}\n\n/* Date picker */\n.middle-row input {\n    min-height: 25px;\n}\n\n/* Priority dropdown */\n.middle-row select {\n    min-height: 25px;\n}\n\n.add-task-card .bottom-row {\n    display: flex;\n    justify-content: space-between;\n    border-top: 1px solid #e5e7eb;\n    padding-top: 10px;\n}\n\n/* Project dropdown */\n.add-task-card .bottom-row select {\n    height: 30px;\n    text-align: center;\n    border: none;\n    outline: none;\n    border-radius: 5px;\n}\n\n.add-task-card .bottom-row select:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n/* The buttons at the end of card */\n.add-task-card .bottom-row > :last-child {\n    display: flex;\n    gap: 10px;\n}\n\n/* Cancel button */\n.card-cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.card-cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.card-cancel-button:active {\n    transform: scale(0.95);\n}\n\n/* Add button */\n.add-task-card .add-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.add-task-card .add-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.add-task-card .add-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.add-task-card .add-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n}'],sourceRoot:""}]);const A=a},914:(e,n,t)=>{t.d(n,{Z:()=>A});var o=t(537),r=t.n(o),d=t(645),a=t.n(d)()(r());a.push([e.id,".delete-project-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 400px;\n    position: relative;\n    top: -30%;\n}\n\n.delete-project-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.delete-project-dialog > div {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.delete-project-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.delete-project-dialog .message span:first-child {\n    font-weight: 900;\n}\n\n.delete-project-dialog .bottom-row {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.delete-project-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.delete-project-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.delete-project-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.delete-project-dialog .delete-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.delete-project-dialog .delete-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.delete-project-dialog .delete-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.delete-project-dialog .delete-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n}\n\n\n\n\n","",{version:3,sources:["webpack://./src/modules/components/deleteProjectDialog/deleteProjectDialog.css"],names:[],mappings:"AAAA;IACI,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;IACZ,kBAAkB;IAClB,SAAS;AACb;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,0CAA0C;IAC1C,eAAe;AACnB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,yBAAyB;IACzB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,uCAAuC;AAC3C",sourcesContent:[".delete-project-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 400px;\n    position: relative;\n    top: -30%;\n}\n\n.delete-project-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.delete-project-dialog > div {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.delete-project-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.delete-project-dialog .message span:first-child {\n    font-weight: 900;\n}\n\n.delete-project-dialog .bottom-row {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.delete-project-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.delete-project-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.delete-project-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.delete-project-dialog .delete-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.delete-project-dialog .delete-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.delete-project-dialog .delete-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.delete-project-dialog .delete-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n}\n\n\n\n\n"],sourceRoot:""}]);const A=a},930:(e,n,t)=>{t.d(n,{Z:()=>A});var o=t(537),r=t.n(o),d=t(645),a=t.n(d)()(r());a.push([e.id,".edit-project-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 300px;\n    position: relative;\n    top: -30%;\n}\n\n.edit-project-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.edit-project-dialog > form {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.edit-project-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n \n.edit-project-dialog form-field {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n\n.edit-project-dialog input {\n    height: 30px;\n    width: max(100%, 200px);\n    border-radius: 5px;\n    border: 1px solid #ddd;\n}\n\n.edit-project-dialog input:focus {\n    outline: none;\n    border: 1px solid grey;\n}\n\n.edit-project-dialog .error-message {\n    font-size: 14px;\n    color: red;\n    height: 14px;\n}\n\n.edit-project-dialog .buttons {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.edit-project-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.edit-project-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.edit-project-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.edit-project-dialog .save-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.edit-project-dialog .save-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.edit-project-dialog .save-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.edit-project-dialog .save-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n} \n\n\n\n","",{version:3,sources:["webpack://./src/modules/components/editProjectDialog/editProjectDialog.css"],names:[],mappings:"AAAA;IACI,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;IACZ,kBAAkB;IAClB,SAAS;AACb;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;;AAGA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;AACZ;;;AAGA;IACI,YAAY;IACZ,uBAAuB;IACvB,kBAAkB;IAClB,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,eAAe;IACf,UAAU;IACV,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,0CAA0C;IAC1C,eAAe;AACnB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,yBAAyB;IACzB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,uCAAuC;AAC3C",sourcesContent:[".edit-project-dialog {\n    border-radius: 10px;\n    border: 1px solid grey;\n    width: 300px;\n    position: relative;\n    top: -30%;\n}\n\n.edit-project-dialog::backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.edit-project-dialog > form {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.edit-project-dialog .header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n \n.edit-project-dialog form-field {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n\n.edit-project-dialog input {\n    height: 30px;\n    width: max(100%, 200px);\n    border-radius: 5px;\n    border: 1px solid #ddd;\n}\n\n.edit-project-dialog input:focus {\n    outline: none;\n    border: 1px solid grey;\n}\n\n.edit-project-dialog .error-message {\n    font-size: 14px;\n    color: red;\n    height: 14px;\n}\n\n.edit-project-dialog .buttons {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n.edit-project-dialog .cancel-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: rgba(115, 115, 115, 0.1);\n    cursor: pointer;\n}\n\n.edit-project-dialog .cancel-button:hover {\n    background-color: rgba(115, 115, 115, 0.2);\n}\n\n.edit-project-dialog .cancel-button:active {\n    transform: scale(0.95);\n}\n\n.edit-project-dialog .save-button {\n    height: 30px;\n    width: 70px;\n    border-radius: 5px;\n    border: none;\n    background-color: #A16207;\n    color: white;\n    cursor: pointer;\n}\n\n.edit-project-dialog .save-button:hover {\n    background-color: rgba(161, 98, 7, 0.8);\n}\n\n.edit-project-dialog .save-button:enabled:active {\n    transform: scale(0.95);\n}\n\n.edit-project-dialog .save-button:disabled {\n    background-color: rgba(161, 98, 7, 0.5);\n} \n\n\n\n"],sourceRoot:""}]);const A=a},718:(e,n,t)=>{t.d(n,{Z:()=>A});var o=t(537),r=t.n(o),d=t(645),a=t.n(d)()(r());a.push([e.id,".inbox-page {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    gap: 50px;\n}\n\n.inbox-content {\n    display: flex;\n    flex-direction: column;\n    gap: 50px;\n    width: 60%;\n    padding: 20px 0;\n}\n\n.inbox-header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.priority-section {\n    width: 100%;\n}\n\n.priority-header {\n    font-weight: 900;\n}\n\n.add-task-button {\n    width: 100%;\n    text-align: left;\n    background: none;\n    border: none;\n    cursor: pointer;\n    color: #78716c;\n    font-size: 16px;\n    display: flex;\n    gap: 10px;\n    align-items: center;\n}\n\n.add-task-button > :first-child {\n    font-size: 25px;\n    display: flex;\n    align-items: center;\n}\n\n.add-task-button > :nth-child(2) {\n    display: flex;\n    align-items: center;\n}\n\n.add-task-button:hover {\n    color: #A16207;\n}\n\n.add-task-button-hidden {\n    display: none;\n}\n","",{version:3,sources:["webpack://./src/modules/components/inboxPage/inboxPage.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,UAAU;IACV,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,WAAW;IACX,gBAAgB;IAChB,gBAAgB;IAChB,YAAY;IACZ,eAAe;IACf,cAAc;IACd,eAAe;IACf,aAAa;IACb,SAAS;IACT,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,aAAa;AACjB",sourcesContent:[".inbox-page {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    gap: 50px;\n}\n\n.inbox-content {\n    display: flex;\n    flex-direction: column;\n    gap: 50px;\n    width: 60%;\n    padding: 20px 0;\n}\n\n.inbox-header {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.priority-section {\n    width: 100%;\n}\n\n.priority-header {\n    font-weight: 900;\n}\n\n.add-task-button {\n    width: 100%;\n    text-align: left;\n    background: none;\n    border: none;\n    cursor: pointer;\n    color: #78716c;\n    font-size: 16px;\n    display: flex;\n    gap: 10px;\n    align-items: center;\n}\n\n.add-task-button > :first-child {\n    font-size: 25px;\n    display: flex;\n    align-items: center;\n}\n\n.add-task-button > :nth-child(2) {\n    display: flex;\n    align-items: center;\n}\n\n.add-task-button:hover {\n    color: #A16207;\n}\n\n.add-task-button-hidden {\n    display: none;\n}\n"],sourceRoot:""}]);const A=a},404:(e,n,t)=>{t.d(n,{Z:()=>A});var o=t(537),r=t.n(o),d=t(645),a=t.n(d)()(r());a.push([e.id,".nav-bar {\n    padding: 20px;\n    background-color: #A16207;\n    color: #e7e5e4;\n    grid-column: 1 / 3;\n}\n\n.logo {\n    width: max-content;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    cursor: pointer;\n}\n\n.logo > img {\n    width: 50px;\n}\n\n.logo > div {\n    font-size: 40px;\n    font-weight: 900;\n}\n\n","",{version:3,sources:["webpack://./src/modules/components/navBar/navBar.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,yBAAyB;IACzB,cAAc;IACd,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,eAAe;AACnB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB",sourcesContent:[".nav-bar {\n    padding: 20px;\n    background-color: #A16207;\n    color: #e7e5e4;\n    grid-column: 1 / 3;\n}\n\n.logo {\n    width: max-content;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    cursor: pointer;\n}\n\n.logo > img {\n    width: 50px;\n}\n\n.logo > div {\n    font-size: 40px;\n    font-weight: 900;\n}\n\n"],sourceRoot:""}]);const A=a},386:(e,n,t)=>{t.d(n,{Z:()=>A});var o=t(537),r=t.n(o),d=t(645),a=t.n(d)()(r());a.push([e.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]);const A=a},332:(e,n,t)=>{t.d(n,{Z:()=>A});var o=t(537),r=t.n(o),d=t(645),a=t.n(d)()(r());a.push([e.id,".side-bar {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    background-color: rgba(209, 213, 219, 0.2);\n    padding: 30px 20px;\n}\n\n.default-items {\n    display: flex;\n    flex-direction: column;\n}\n\n.projects {\n    display: flex;\n    flex-direction: column;\n}\n\n.projects-header {\n    display: flex;  \n    justify-content: space-between; \n    cursor: pointer;\n    padding: 5px 5px 5px 0;\n}\n\n.projects-header:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.projects-header > div {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.add-project-button {\n    background: none;\n    border: none;\n    font-size: 20px;\n    cursor: pointer;\n    border-radius: 2px;\n}\n\n.add-project-button:hover {\n    background-color: white;\n}\n\n","",{version:3,sources:["webpack://./src/modules/components/sideBar/sideBar.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,0CAA0C;IAC1C,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,eAAe;IACf,sBAAsB;AAC1B;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,YAAY;IACZ,eAAe;IACf,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,uBAAuB;AAC3B",sourcesContent:[".side-bar {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    background-color: rgba(209, 213, 219, 0.2);\n    padding: 30px 20px;\n}\n\n.default-items {\n    display: flex;\n    flex-direction: column;\n}\n\n.projects {\n    display: flex;\n    flex-direction: column;\n}\n\n.projects-header {\n    display: flex;  \n    justify-content: space-between; \n    cursor: pointer;\n    padding: 5px 5px 5px 0;\n}\n\n.projects-header:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.projects-header > div {\n    font-size: 20px;\n    font-weight: 900;\n}\n\n.add-project-button {\n    background: none;\n    border: none;\n    font-size: 20px;\n    cursor: pointer;\n    border-radius: 2px;\n}\n\n.add-project-button:hover {\n    background-color: white;\n}\n\n"],sourceRoot:""}]);const A=a},540:(e,n,t)=>{t.d(n,{Z:()=>A});var o=t(537),r=t.n(o),d=t(645),a=t.n(d)()(r());a.push([e.id,".sidebar-item {\n    display: flex;\n    align-items: center;\n    padding: 5px;\n    cursor: pointer;\n    border-radius: 5px;\n}\n\n.sidebar-item:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.sidebar-item-active {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.sidebar-item > .item-content > img {\n    width: 25px;\n}\n\n.sidebar-item > .item-content {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    width: 100%;\n}\n\n.sidebar-item > .item-buttons {\n    /* display: none; */\n    display: flex;\n    gap: 5px;\n    visibility: hidden;\n}\n\n.sidebar-item:hover .item-buttons {\n    /* display: flex;\n    gap: 5px; */\n    visibility: visible;\n}\n\n.sidebar-item > .item-buttons > button {\n    height: 20px;\n    width: 20px;\n    background-color: transparent;\n    padding: 0;\n    border: none;\n    cursor: pointer;\n    border-radius: 2px;\n}\n\n.sidebar-item > .item-buttons > button:hover {\n    background-color: white;\n}\n\n.sidebar-item > .item-buttons > button > img {\n    width: 15px;\n    height: 15px;\n}","",{version:3,sources:["webpack://./src/modules/components/sideBarItem/sideBarItem.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;IACnB,YAAY;IACZ,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,WAAW;AACf;;AAEA;IACI,mBAAmB;IACnB,aAAa;IACb,QAAQ;IACR,kBAAkB;AACtB;;AAEA;IACI;eACW;IACX,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,6BAA6B;IAC7B,UAAU;IACV,YAAY;IACZ,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,WAAW;IACX,YAAY;AAChB",sourcesContent:[".sidebar-item {\n    display: flex;\n    align-items: center;\n    padding: 5px;\n    cursor: pointer;\n    border-radius: 5px;\n}\n\n.sidebar-item:hover {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.sidebar-item-active {\n    background-color: rgba(115, 115, 115, 0.1);\n}\n\n.sidebar-item > .item-content > img {\n    width: 25px;\n}\n\n.sidebar-item > .item-content {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    width: 100%;\n}\n\n.sidebar-item > .item-buttons {\n    /* display: none; */\n    display: flex;\n    gap: 5px;\n    visibility: hidden;\n}\n\n.sidebar-item:hover .item-buttons {\n    /* display: flex;\n    gap: 5px; */\n    visibility: visible;\n}\n\n.sidebar-item > .item-buttons > button {\n    height: 20px;\n    width: 20px;\n    background-color: transparent;\n    padding: 0;\n    border: none;\n    cursor: pointer;\n    border-radius: 2px;\n}\n\n.sidebar-item > .item-buttons > button:hover {\n    background-color: white;\n}\n\n.sidebar-item > .item-buttons > button > img {\n    width: 15px;\n    height: 15px;\n}"],sourceRoot:""}]);const A=a},773:(e,n,t)=>{t.d(n,{Z:()=>A});var o=t(537),r=t.n(o),d=t(645),a=t.n(d)()(r());a.push([e.id,".today-page {\n    width: 100%;\n    height: 100%;\n}","",{version:3,sources:["webpack://./src/modules/components/todayPage/todayPage.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,YAAY;AAChB",sourcesContent:[".today-page {\n    width: 100%;\n    height: 100%;\n}"],sourceRoot:""}]);const A=a},627:(e,n,t)=>{t.d(n,{Z:()=>A});var o=t(537),r=t.n(o),d=t(645),a=t.n(d)()(r());a.push([e.id,".upcoming-page {\n    width: 100%;\n    height: 100%;\n}","",{version:3,sources:["webpack://./src/modules/components/upcomingPage/upcomingPage.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,YAAY;AAChB",sourcesContent:[".upcoming-page {\n    width: 100%;\n    height: 100%;\n}"],sourceRoot:""}]);const A=a},426:(e,n,t)=>{t.d(n,{Z:()=>A});var o=t(537),r=t.n(o),d=t(645),a=t.n(d)()(r());a.push([e.id,"* {\n    /* Fix issue with extra space on the side when adding padding */\n    -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */\n    -moz-box-sizing: border-box;    /* Firefox, other Gecko */\n    box-sizing: border-box;         /* Opera/IE 8+ */\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 300px minmax(0, 1fr);\n    grid-template-rows: max-content 1fr;\n    min-height: 100vh;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,+DAA+D;IAC/D,8BAA8B,EAAE,gCAAgC;IAChE,2BAA2B,KAAK,yBAAyB;IACzD,sBAAsB,UAAU,gBAAgB;AACpD;;AAEA;IACI,SAAS;IACT,UAAU;IACV,aAAa;IACb,2CAA2C;IAC3C,mCAAmC;IACnC,iBAAiB;AACrB",sourcesContent:["* {\n    /* Fix issue with extra space on the side when adding padding */\n    -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */\n    -moz-box-sizing: border-box;    /* Firefox, other Gecko */\n    box-sizing: border-box;         /* Opera/IE 8+ */\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 300px minmax(0, 1fr);\n    grid-template-rows: max-content 1fr;\n    min-height: 100vh;\n}"],sourceRoot:""}]);const A=a},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,d){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var A=0;A<this.length;A++){var i=this[A][0];null!=i&&(a[i]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);o&&a[l[0]]||(void 0!==d&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=d),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),d="/*# ".concat(r," */");return[n].concat([d]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var d={},a=[],A=0;A<e.length;A++){var i=e[A],c=o.base?i[0]+o.base:i[0],l=d[c]||0,s="".concat(c," ").concat(l);d[c]=l+1;var p=t(s),u={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var m=r(u,o);o.byIndex=A,n.splice(A,0,{identifier:s,updater:m,references:1})}a.push(s)}return a}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var d=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<d.length;a++){var A=t(d[a]);n[A].references--}for(var i=o(e,r),c=0;c<d.length;c++){var l=t(d[c]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}d=i}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var d=t.sourceMap;d&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(d))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var d=n[o]={id:o,exports:{}};return e[o](d,d.exports,t),d.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&!e;)e=o[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),o=t(795),r=t.n(o),d=t(569),a=t.n(d),A=t(565),i=t.n(A),c=t(216),l=t.n(c),s=t(589),p=t.n(s),u=t(426),m={};m.styleTagTransform=p(),m.setAttributes=i(),m.insert=a().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=l(),n()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const C=()=>{const e=e=>{const n=JSON.parse(localStorage.getItem("projects")).filter((n=>n.name===e));return 0===n.length?{}:n[0]},n=()=>JSON.parse(localStorage.getItem("projects")),t=e=>{let t=n();t.push(e),localStorage.setItem("projects",JSON.stringify(t))};return{init:()=>{localStorage.getItem("projects")||localStorage.setItem("projects",JSON.stringify([])),"{}"===JSON.stringify(e("Inbox"))&&t({name:"Inbox",timeCreated:(new Date).getTime()}),localStorage.getItem("tasks")||localStorage.setItem("tasks",JSON.stringify([]))},getProject:e,getAllProjects:n,createProject:t,updateProject:(e,t)=>{let o=n();for(let n=0;n<o.length;n++)o[n].name===e.name&&(o[n]=t);localStorage.setItem("projects",JSON.stringify(o))},deleteProject:e=>{let t=n();t=t.filter((n=>n.name!==e)),localStorage.setItem("projects",JSON.stringify(t))}}};var b=t(404),g={};g.styleTagTransform=p(),g.setAttributes=i(),g.insert=a().bind(null,"head"),g.domAPI=r(),g.insertStyleElement=l(),n()(b.Z,g),b.Z&&b.Z.locals&&b.Z.locals;const h=t.p+"92c598d0995778188044.svg";var I=t(332),x={};x.styleTagTransform=p(),x.setAttributes=i(),x.insert=a().bind(null,"head"),x.domAPI=r(),x.insertStyleElement=l(),n()(I.Z,x),I.Z&&I.Z.locals&&I.Z.locals;var f=t(540),B={};B.styleTagTransform=p(),B.setAttributes=i(),B.insert=a().bind(null,"head"),B.domAPI=r(),B.insertStyleElement=l(),n()(f.Z,B),f.Z&&f.Z.locals&&f.Z.locals;const v=t.p+"804b4b589eea8b818764.svg",y=t.p+"b4200fd474d2b71d1e95.svg",E=(e,n,t)=>{const o=document.createElement("div");o.className="sidebar-item",o.id=n;const r=document.createElement("div");r.className="item-content";const d=new Image;d.src=e,r.appendChild(d);const a=document.createElement("div");if(a.textContent=n,r.appendChild(a),o.appendChild(r),t){const e=document.createElement("div");e.className="item-buttons";const n=document.createElement("button");n.className="edit-button";const t=new Image;t.src=v,n.appendChild(t),e.appendChild(n);const r=document.createElement("button");r.className="delete-button";const d=new Image;d.src=y,r.appendChild(d),e.appendChild(r),o.appendChild(e)}return o},k=t.p+"939f2a757e3335be71bb.svg",j=t.p+"233385e32206cd372d69.svg",w=t.p+"1514cb89e66edd886067.svg",S=()=>{const e=document.createElement("div");e.className="side-bar";const n=document.createElement("div");n.className="default-items",n.appendChild(E(k,"Inbox",!1)),n.appendChild(E(j,"Today",!1)),n.appendChild(E(w,"Upcoming",!1)),e.appendChild(n);const t=document.createElement("div");t.className="projects",t.appendChild((()=>{const e=document.createElement("div");e.className="projects-header";const n=document.createElement("div");n.textContent="Projects",e.appendChild(n);const t=document.createElement("button");return t.className="add-project-button",t.textContent="+",e.appendChild(t),e})());const o=document.createElement("div");return o.className="project-items",t.appendChild(o),e.appendChild(t),e};var Z=t(718),Y={};Y.styleTagTransform=p(),Y.setAttributes=i(),Y.insert=a().bind(null,"head"),Y.domAPI=r(),Y.insertStyleElement=l(),n()(Z.Z,Y),Z.Z&&Z.Z.locals&&Z.Z.locals;const N=e=>{const n=document.createElement("div");n.className="priority-section";const t=document.createElement("div");t.className="priority-header",t.textContent=`Priority ${e.toString()}`,n.appendChild(t);const o=document.createElement("div");o.textContent="tasks here",n.appendChild(o);const r=document.createElement("button");r.className="add-task-button";const d=document.createElement("span");d.textContent="+";const a=document.createElement("span");return a.textContent="Add task",r.appendChild(d),r.appendChild(a),n.appendChild(r),n};var q=t(773),P={};P.styleTagTransform=p(),P.setAttributes=i(),P.insert=a().bind(null,"head"),P.domAPI=r(),P.insertStyleElement=l(),n()(q.Z,P),q.Z&&q.Z.locals&&q.Z.locals;var T=t(627),W={};W.styleTagTransform=p(),W.setAttributes=i(),W.insert=a().bind(null,"head"),W.domAPI=r(),W.insertStyleElement=l(),n()(T.Z,W),T.Z&&T.Z.locals&&T.Z.locals;var z=t(620),L={};L.styleTagTransform=p(),L.setAttributes=i(),L.insert=a().bind(null,"head"),L.domAPI=r(),L.insertStyleElement=l(),n()(z.Z,L),z.Z&&z.Z.locals&&z.Z.locals;const D=(e,n)=>{const t=document.createElement("div");if(n){const e=document.createElement("div");e.textContent=n,t.appendChild(e)}const o=document.createElement("select");return e.forEach((e=>{o.appendChild(U(e))})),t.appendChild(o),t},U=e=>{const n=document.createElement("option");return n.value=e,n.textContent=e,n},X=()=>{const e=document.createElement("div");e.className="add-task-card";const n=document.createElement("span");n.role="textbox",n.contentEditable="true",e.appendChild(n);const t=document.createElement("span");t.role="textbox",t.contentEditable="true",e.appendChild(t);const o=document.createElement("div");o.className="middle-row",o.appendChild((()=>{const e=document.createElement("div"),n=document.createElement("div");n.textContent="Due date",e.appendChild(n);const t=document.createElement("input");return t.type="date",e.appendChild(t),e})()),o.appendChild(D(["Priority 1","Priority 2","Priority 3","Priority 4"],"Priority")),e.appendChild(o);const r=document.createElement("div");r.className="bottom-row",r.appendChild(D(["Inbox","Today","Upcoming"]));const d=document.createElement("div"),a=document.createElement("button");a.className="card-cancel-button",a.textContent="Cancel",d.appendChild(a);const A=document.createElement("button");return A.textContent="Add task",A.className="add-button",A.disabled=!0,d.appendChild(A),r.appendChild(d),e.appendChild(r),e};var R=t(177),O={};O.styleTagTransform=p(),O.setAttributes=i(),O.insert=a().bind(null,"head"),O.domAPI=r(),O.insertStyleElement=l(),n()(R.Z,O),R.Z&&R.Z.locals&&R.Z.locals;const M=t.p+"28282ddc85b085c7fd14.svg";var J=t(386),F={};F.styleTagTransform=p(),F.setAttributes=i(),F.insert=a().bind(null,"head"),F.domAPI=r(),F.insertStyleElement=l(),n()(J.Z,F),J.Z&&J.Z.locals&&J.Z.locals;var V=t(930),G={};G.styleTagTransform=p(),G.setAttributes=i(),G.insert=a().bind(null,"head"),G.domAPI=r(),G.insertStyleElement=l(),n()(V.Z,G),V.Z&&V.Z.locals&&V.Z.locals;var Q=t(914),$={};$.styleTagTransform=p(),$.setAttributes=i(),$.insert=a().bind(null,"head"),$.domAPI=r(),$.insertStyleElement=l(),n()(Q.Z,$),Q.Z&&Q.Z.locals&&Q.Z.locals;const K=()=>{const e=C();let n="";const t=()=>{let n=e.getAllProjects();n=n.filter((e=>"Inbox"!==e.name));const t=document.querySelector(".side-bar .project-items");for(;t.lastChild;)t.removeChild(t.lastChild);n.forEach((e=>{t.appendChild(E(M,e.name,!0))})),d(),o(),r()},o=()=>{document.querySelectorAll(".sidebar-item .edit-button").forEach((e=>{e.addEventListener("click",(()=>{m(e.parentElement.parentElement.id)}))}))},r=()=>{document.querySelectorAll(".sidebar-item .delete-button").forEach((e=>{e.addEventListener("click",(()=>{g(e.parentElement.parentElement.id)}))}))},d=()=>{document.querySelectorAll(".sidebar-item").forEach((e=>{e.querySelector(".item-content").addEventListener("click",(()=>{e.classList.contains("sidebar-item-active")||a(e.id)}))}))},a=e=>{(e=>{document.querySelectorAll(".sidebar-item").forEach((e=>{e.className="sidebar-item"})),document.getElementById(e).classList.add("sidebar-item-active")})(e),"Inbox"===e?A():"Today"===e?i():"Upcoming"===e?c():l(e)},A=()=>{const e=document.querySelector("#content");e.lastChild&&e.removeChild(e.lastChild);const n=(()=>{const e=document.createElement("div");e.className="inbox-page";const n=document.createElement("div");n.className="inbox-content";const t=document.createElement("div");t.className="inbox-header",t.textContent="Inbox",n.appendChild(t);for(let e=1;e<5;e++){const t=N(e);t.className="priority-section",n.appendChild(t)}return e.appendChild(n),e})();e.appendChild(n),x()},i=()=>{const e=document.querySelector("#content");e.lastChild&&e.removeChild(e.lastChild),e.appendChild((()=>{const e=document.createElement("div");return e.className="today-page",e.textContent="today page",e})())},c=()=>{const e=document.querySelector("#content");e.lastChild&&e.removeChild(e.lastChild),e.appendChild((()=>{const e=document.createElement("div");return e.className="upcoming-page",e.textContent="upcoming page",e})())},l=e=>{const n=document.querySelector("#content");n.lastChild&&n.removeChild(n.lastChild),n.appendChild((e=>{const n=document.createElement("div");return n.textContent=`Project page: ${e}`,n})(e))},s=()=>{document.querySelector(".add-project-dialog").showModal(),document.body.style.overflow="hidden",document.querySelector(".add-project-dialog input").value="",document.querySelector(".add-project-dialog .error-message").textContent="",document.querySelector(".add-project-dialog .add-button").disabled=!0},p=()=>{document.querySelector(".add-project-dialog").close()},u=n=>{let t="valid";if(0==n.length||n.length>20)t="Project's name must have 1-20 characters.";else{const o=e.getAllProjects();for(let e of o)if(e.name===n){t="This name is already taken.";break}}return t},m=e=>{const t=document.querySelector(".edit-project-dialog");t.showModal(),document.body.style.overflow="hidden",t.querySelector("input").value=e,document.querySelector(".edit-project-dialog .error-message").textContent="",document.querySelector(".edit-project-dialog .save-button").disabled=!0,n=e},b=()=>{document.querySelector(".edit-project-dialog").close()},g=e=>{const t=document.querySelector(".delete-project-dialog");t.showModal(),document.body.style.overflow="hidden",t.querySelector(".message span:first-Child").textContent=e,n=e},I=()=>{document.querySelector(".delete-project-dialog").close()},x=()=>{document.querySelectorAll(".add-task-button").forEach((e=>{e.addEventListener("click",(()=>{f(e)}))}))},f=e=>{document.querySelector(".inbox-page").querySelectorAll(".add-task-button").forEach((e=>{e.classList.add("add-task-button-hidden")}));const n=X();B(n.querySelector(".card-cancel-button")),e.parentElement.appendChild(n)},B=e=>{e.addEventListener("click",(()=>{v()}))},v=()=>{const e=document.querySelector(".add-task-card").parentElement;e.removeChild(e.lastChild),document.querySelector(".inbox-page").querySelectorAll(".add-task-button").forEach((e=>{e.classList.remove("add-task-button-hidden")}))};return{init:()=>{const o=document.querySelector("body"),r=(()=>{const e=document.createElement("div");e.className="nav-bar";const n=(()=>{const e=document.createElement("div");e.className="logo";const n=new Image;n.src=h,e.appendChild(n);const t=document.createElement("div");return t.textContent="Todo List",e.appendChild(t),e})();return e.appendChild(n),e})();o.appendChild(r),document.querySelector(".logo").addEventListener("click",(()=>{const e=document.querySelector("#Inbox");e.classList.contains("sidebar-item-active")||a(e.id)}));const d=S();o.appendChild(d),t(),document.querySelector(".add-project-button").addEventListener("click",(()=>{s()}));const A=document.createElement("div");A.id="content",o.appendChild(A);const i=(()=>{const e=document.createElement("dialog");e.className="add-project-dialog";const n=document.createElement("form");n.action="#",n.method="post",n.noValidate=!0,n.className="form";const t=document.createElement("div");t.className="header",t.textContent="Add project",n.appendChild(t);const o=document.createElement("form-field"),r=document.createElement("label");r.for="project-name",r.textContent="Name",o.appendChild(r);const d=document.createElement("input");d.type="text",d.id="project-name",o.appendChild(d);const a=document.createElement("span");a.className="error-message",a.ariaLive="polite",o.appendChild(a),n.appendChild(o);const A=document.createElement("div");A.className="buttons";const i=document.createElement("button");i.className="cancel-button",i.textContent="Cancel",A.appendChild(i),n.appendChild(A);const c=document.createElement("button");return c.className="add-button",c.textContent="Add",c.disabled=!0,A.appendChild(c),e.appendChild(n),e})();o.appendChild(i),document.querySelector(".add-project-dialog").addEventListener("close",(()=>{document.body.style.overflow="auto"})),(()=>{const e=document.querySelector(".add-project-dialog input");e.addEventListener("input",(()=>{const n=u(e.value),t=document.querySelector(".add-project-dialog .add-button"),o=document.querySelector(".add-project-dialog .error-message");"valid"===n?(t.disabled=!1,o.textContent=""):(t.disabled=!0,o.textContent=n)}))})(),(()=>{const n=document.querySelector(".add-project-dialog input");n.addEventListener("keypress",(o=>{if(13===o.keyCode)if(o.preventDefault(),"valid"===u(n.value)){const o=n.value,r=(new Date).getTime();e.createProject({name:o,timeCreated:r}),p(),t(),a(o)}else{const e=document.querySelector(".add-project-dialog .error-message");""===e.textContent&&(e.textContent=u(n.value))}}))})(),document.querySelector(".add-project-dialog .cancel-button").addEventListener("click",(e=>{e.preventDefault(),p()})),document.querySelector(".add-project-dialog .add-button").addEventListener("click",(n=>{n.preventDefault();const o=document.querySelector(".add-project-dialog input").value,r=(new Date).getTime();e.createProject({name:o,timeCreated:r}),p(),t(),a(o)}));const c=(()=>{const e=document.createElement("dialog");e.className="edit-project-dialog";const n=document.createElement("form");n.action="#",n.method="post",n.noValidate=!0,n.className="form";const t=document.createElement("div");t.className="header",t.textContent="Edit project",n.appendChild(t);const o=document.createElement("form-field"),r=document.createElement("label");r.for="project-name",r.textContent="Name",o.appendChild(r);const d=document.createElement("input");d.type="text",d.id="project-name",o.appendChild(d);const a=document.createElement("span");a.className="error-message",a.ariaLive="polite",o.appendChild(a),n.appendChild(o);const A=document.createElement("div");A.className="buttons";const i=document.createElement("button");i.className="cancel-button",i.textContent="Cancel",A.appendChild(i),n.appendChild(A);const c=document.createElement("button");return c.className="save-button",c.textContent="Save",c.disabled=!0,A.appendChild(c),e.appendChild(n),e})();o.appendChild(c),document.querySelector(".edit-project-dialog").addEventListener("close",(()=>{document.body.style.overflow="auto"})),(()=>{const e=document.querySelector(".edit-project-dialog input");e.addEventListener("input",(()=>{const n=u(e.value),t=document.querySelector(".edit-project-dialog .save-button"),o=document.querySelector(".edit-project-dialog .error-message");"valid"===n?(t.disabled=!1,o.textContent=""):(t.disabled=!0,o.textContent=n)}))})(),(()=>{const o=document.querySelector(".edit-project-dialog input");o.addEventListener("keypress",(r=>{if(13===r.keyCode)if(r.preventDefault(),"valid"===u(o.value)){const o=e.getProject(n);n="";let r={};r.name=document.querySelector(".edit-project-dialog input").value,r.timeCreated=o.timeCreated,e.updateProject(o,r),b(),t(),a(r.name)}else{const e=document.querySelector(".edit-project-dialog .error-message");""===e.textContent&&(e.textContent=u(o.value))}}))})(),document.querySelector(".edit-project-dialog .cancel-button").addEventListener("click",(e=>{e.preventDefault(),b()})),document.querySelector(".edit-project-dialog .save-button").addEventListener("click",(o=>{o.preventDefault();const r=e.getProject(n);n="";let d={};d.name=document.querySelector(".edit-project-dialog input").value,d.timeCreated=r.timeCreated,e.updateProject(r,d),b(),t(),a(d.name)}));const l=(()=>{const e=document.createElement("dialog");e.className="delete-project-dialog";const n=document.createElement("div"),t=document.createElement("div");t.className="header",t.textContent="Delete?",n.appendChild(t);const o=document.createElement("div");o.className="message",o.textContent="Are you sure you want to delete ";const r=document.createElement("span");o.appendChild(r);const d=document.createElement("span");d.textContent="?",o.appendChild(d),n.appendChild(o);const a=document.createElement("div");a.className="bottom-row";const A=document.createElement("button");A.className="cancel-button",A.textContent="Cancel",a.appendChild(A);const i=document.createElement("button");return i.className="delete-button",i.textContent="Delete",a.appendChild(i),n.appendChild(a),e.appendChild(n),e})();o.appendChild(l),document.querySelector(".delete-project-dialog").addEventListener("close",(()=>{document.body.style.overflow="auto"})),document.querySelector(".delete-project-dialog .cancel-button").addEventListener("click",(e=>{e.preventDefault(),I()})),document.querySelector(".delete-project-dialog .delete-button").addEventListener("click",(o=>{o.preventDefault(),e.deleteProject(n),I(),t(),a("Inbox")})),document.querySelector(".delete-project-dialog").addEventListener("keypress",(o=>{13===o.keyCode&&(o.preventDefault(),e.deleteProject(n),I(),t(),a("Inbox"))})),a("Inbox")}}};(()=>{let e=K(),n=C();return{init:()=>{n.init(),e.init()}}})().init()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,